[{"content":"ConfigMap (v1) ConfigMap core.v1.ConfigMap\nConfigMap holds configuration data for pods to consume.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  Data   data (object)\nData contains the configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process.\n  binaryData (object)\nBinaryData contains the binary data. Each key must consist of alphanumeric characters, '-', '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet.\n  Attributes  immutable (boolean)\nImmutable, if set to true, ensures that data stored in the ConfigMap cannot be updated (only object metadata can be modified). If not set to true, the field can be modified at any time. Defaulted to nil. This is an alpha field enabled by ImmutableEphemeralVolumes feature gate.  ConfigMapList core.v1.ConfigMapList\nConfigMapList is a resource containing a list of ConfigMap objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]ConfigMap)\nItems is the list of ConfigMaps.\n  ","description":"","id":0,"section":"docs","tags":null,"title":"ConfigMap (v1)","uri":"https://www.k8sref.io/docs/part3/configmap-v1/"},{"content":"ControllerRevision (v1) ControllerRevision apps.v1.ControllerRevision\nControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  Data   revision (integer)\nRevision indicates the revision of the state represented by Data.\n  data ()\nData is the serialized representation of the state.\n  ControllerRevisionList apps.v1.ControllerRevisionList\nControllerRevisionList is a resource containing a list of ControllerRevision objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]ControllerRevision)\nItems is the list of ControllerRevisions\n  ","description":"","id":1,"section":"docs","tags":null,"title":"ControllerRevision (v1)","uri":"https://www.k8sref.io/docs/part4/controllerrevision-v1/"},{"content":"JSONSchemaProps JSONSchemaProps apiextensions.v1.JSONSchemaProps\nJSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).\n  $ref (string)\n  $schema (string)\n  additionalItems (JSONSchemaPropsOrBool)\n  additionalProperties (JSONSchemaPropsOrBool)\n  allOf ([]JSONSchemaProps)\n  anyOf ([]JSONSchemaProps)\n  default (JSON)\ndefault is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. Defaulting requires spec.preserveUnknownFields to be false.\n  definitions (object)\n  dependencies (object)\n  description (string)\n  enum ([]JSON)\n  example (JSON)\n  exclusiveMaximum (boolean)\n  exclusiveMinimum (boolean)\n  externalDocs (ExternalDocumentation)\n  externalDocs.description (string)\n  externalDocs.url (string)\n    format (string)\nformat is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:\n bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like \u0026quot;0321751043\u0026quot; or \u0026quot;978-0321751041\u0026quot; - isbn10: an ISBN10 number string like \u0026quot;0321751043\u0026quot; - isbn13: an ISBN13 number string like \u0026quot;978-0321751041\u0026quot; - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\d{3}[- ]?\\d{2}[- ]?\\d{4}$ - hexcolor: an hexadecimal color code like \u0026quot;#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like \u0026quot;rgb(255,255,2559\u0026quot; - byte: base64 encoded binary data - password: any kind of string - date: a date string like \u0026quot;2006-01-02\u0026quot; as defined by full-date in RFC3339 - duration: a duration string like \u0026quot;22 ns\u0026quot; as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like \u0026quot;2014-12-15T19:30:20.000Z\u0026quot; as defined by date-time in RFC3339.    id (string)\n  items (JSONSchemaPropsOrArray)\n  maxItems (integer)\n  maxLength (integer)\n  maxProperties (integer)\n  maximum (number)\n  minItems (integer)\n  minLength (integer)\n  minProperties (integer)\n  minimum (number)\n  multipleOf (number)\n  not (JSONSchemaProps)\n  nullable (boolean)\n  oneOf ([]JSONSchemaProps)\n  pattern (string)\n  patternProperties (object)\n  properties (object)\n  required ([]string)\n  title (string)\n  type (string)\n  uniqueItems (boolean)\n  x-kubernetes-embedded-resource (boolean)\nx-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).\n  x-kubernetes-int-or-string (boolean)\nx-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:\n anyOf:  type: integer type: string   allOf:  anyOf:  type: integer type: string   \u0026hellip; zero or more      x-kubernetes-list-map-keys ([]string)\nx-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type map by specifying the keys used as the index of the map.\nThis tag MUST only be used on lists that have the \u0026quot;x-kubernetes-list-type\u0026quot; extension set to \u0026quot;map\u0026quot;. Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).\nThe properties specified must either be required or have a default value, to ensure those properties are present for all list items.\n  x-kubernetes-list-type (string)\nx-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:\n atomic: the list is treated as a single entity, like a scalar.\nAtomic lists will be entirely replaced when updated. This extension\nmay be used on any type of list (struct, scalar, \u0026hellip;). set:\nSets are lists that must not have multiple items with the same value. Each\nvalue must be a scalar, an object with x-kubernetes-map-type atomic or an\narray with x-kubernetes-list-type atomic. map:\nThese lists are like maps in that their elements have a non-index key\nused to identify them. Order is preserved upon merge. The map tag\nmust only be used on a list with elements of type object.\nDefaults to atomic for arrays.    x-kubernetes-map-type (string)\nx-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:\n granular:\nThese maps are actual maps (key-value pairs) and each fields are independent\nfrom each other (they can each be manipulated by separate actors). This is\nthe default behaviour for all maps. atomic: the list is treated as a single entity, like a scalar.\nAtomic maps will be entirely replaced when updated.    x-kubernetes-preserve-unknown-fields (boolean)\nx-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.\n  ","description":"","id":2,"section":"docs","tags":null,"title":"JSONSchemaProps","uri":"https://www.k8sref.io/docs/part6/jsonschemaprops/"},{"content":"Node (v1) Node core.v1.Node\nNode is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd).\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (NodeSpec)\nSpec defines the behavior of a node. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  status (NodeStatus)\nMost recently observed status of the node. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  NodeSpec core.v1.NodeSpec\nNodeSpec describes the attributes that a node is created with.\n  configSource (NodeConfigSource)\nIf specified, the source to get node configuration from The DynamicKubeletConfig feature gate must be enabled for the Kubelet to use this field\n  configSource.configMap (ConfigMapNodeConfigSource)\nConfigMap is a reference to a Node's ConfigMap\n  configSource.configMap.kubeletConfigKey (string)\nKubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.\n  configSource.configMap.name (string)\nName is the metadata.name of the referenced ConfigMap. This field is required in all cases.\n  configSource.configMap.namespace (string)\nNamespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.\n  configSource.configMap.resourceVersion (string)\nResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.\n  configSource.configMap.uid (string)\nUID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.\n    externalID (string)\nDeprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966\n  podCIDR (string)\nPodCIDR represents the pod IP range assigned to the node.\n  podCIDRs ([]string)\npodCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.\n  providerID (string)\nID of the node assigned by the cloud provider in the format: \u0026lt;ProviderName\u0026gt;://\u0026lt;ProviderSpecificNodeID\u0026gt;\n  taints ([]Taint)\nIf specified, the node's taints.\n  taints.effect (string)\nRequired. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n  taints.key (string)\nRequired. The taint key to be applied to a node.\n  taints.timeAdded (Time)\nTimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.\n  taints.value (string)\nThe taint value corresponding to the taint key.\n    unschedulable (boolean)\nUnschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration\n  NodeStatus core.v1.NodeStatus\nNodeStatus is information about the current status of a node.\n  addresses ([]NodeAddress)\nList of addresses reachable to the node. Queried from cloud provider, if available. More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses Note: This field is declared as mergeable, but the merge key is not sufficiently unique, which can cause data corruption when it is merged. Callers should instead use a full-replacement patch. See http://pr.k8s.io/79391 for an example.\n  addresses.address (string)\nThe node address.\n  addresses.type (string)\nNode address type, one of Hostname, ExternalIP or InternalIP.\n    allocatable (object)\nAllocatable represents the resources of a node that are available for scheduling. Defaults to Capacity.\n  capacity (object)\nCapacity represents the total resources of a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity\n  conditions ([]NodeCondition)\nConditions is an array of current observed node conditions. More info: https://kubernetes.io/docs/concepts/nodes/node/#condition\n  conditions.lastHeartbeatTime (Time)\nLast time we got an update on a given condition.\n  conditions.lastTransitionTime (Time)\nLast time the condition transit from one status to another.\n  conditions.message (string)\nHuman readable message indicating details about last transition.\n  conditions.reason (string)\n(brief) reason for the condition's last transition.\n  conditions.status (string)\nStatus of the condition, one of True, False, Unknown.\n  conditions.type (string)\nType of node condition.\n    config (NodeConfigStatus)\nStatus of the config assigned to the node via the dynamic Kubelet config feature.\n  config.active (NodeConfigSource)\nActive reports the checkpointed config the node is actively using. Active will represent either the current version of the Assigned config, or the current LastKnownGood config, depending on whether attempting to use the Assigned config results in an error.\n  config.active.configMap (ConfigMapNodeConfigSource)\nConfigMap is a reference to a Node's ConfigMap\n  config.active.configMap.kubeletConfigKey (string)\nKubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.\n  config.active.configMap.name (string)\nName is the metadata.name of the referenced ConfigMap. This field is required in all cases.\n  config.active.configMap.namespace (string)\nNamespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.\n  config.active.configMap.resourceVersion (string)\nResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.\n  config.active.configMap.uid (string)\nUID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.\n  config.assigned (NodeConfigSource)\nAssigned reports the checkpointed config the node will try to use. When Node.Spec.ConfigSource is updated, the node checkpoints the associated config payload to local disk, along with a record indicating intended config. The node refers to this record to choose its config checkpoint, and reports this record in Assigned. Assigned only updates in the status after the record has been checkpointed to disk. When the Kubelet is restarted, it tries to make the Assigned config the Active config by loading and validating the checkpointed payload identified by Assigned.\n  config.assigned.configMap (ConfigMapNodeConfigSource)\nConfigMap is a reference to a Node's ConfigMap\n  config.assigned.configMap.kubeletConfigKey (string)\nKubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.\n  config.assigned.configMap.name (string)\nName is the metadata.name of the referenced ConfigMap. This field is required in all cases.\n  config.assigned.configMap.namespace (string)\nNamespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.\n  config.assigned.configMap.resourceVersion (string)\nResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.\n  config.assigned.configMap.uid (string)\nUID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.\n  config.error (string)\nError describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Error text across Kubelet versions.\n  config.lastKnownGood (NodeConfigSource)\nLastKnownGood reports the checkpointed config the node will fall back to when it encounters an error attempting to use the Assigned config. The Assigned config becomes the LastKnownGood config when the node determines that the Assigned config is stable and correct. This is currently implemented as a 10-minute soak period starting when the local record of Assigned config is updated. If the Assigned config is Active at the end of this period, it becomes the LastKnownGood. Note that if Spec.ConfigSource is reset to nil (use local defaults), the LastKnownGood is also immediately reset to nil, because the local default config is always assumed good. You should not make assumptions about the node's method of determining config stability and correctness, as this may change or become configurable in the future.\n  config.lastKnownGood.configMap (ConfigMapNodeConfigSource)\nConfigMap is a reference to a Node's ConfigMap\n  config.lastKnownGood.configMap.kubeletConfigKey (string)\nKubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.\n  config.lastKnownGood.configMap.name (string)\nName is the metadata.name of the referenced ConfigMap. This field is required in all cases.\n  config.lastKnownGood.configMap.namespace (string)\nNamespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.\n  config.lastKnownGood.configMap.resourceVersion (string)\nResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.\n  config.lastKnownGood.configMap.uid (string)\nUID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.\n    daemonEndpoints (NodeDaemonEndpoints)\nEndpoints of daemons running on the Node.\n  daemonEndpoints.kubeletEndpoint (DaemonEndpoint)\nEndpoint on which Kubelet is listening.\n  daemonEndpoints.kubeletEndpoint.Port (integer)\nPort number of the given endpoint.\n    images ([]ContainerImage)\nList of container images on this node\n  images.names ([]string)\nNames by which this image is known. e.g. [\u0026quot;k8s.gcr.io/hyperkube:v1.0.7\u0026quot;, \u0026quot;dockerhub.io/google_containers/hyperkube:v1.0.7\u0026quot;]\n  images.sizeBytes (integer)\nThe size of the image in bytes.\n    nodeInfo (NodeSystemInfo)\nSet of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info\n  nodeInfo.architecture (string)\nThe Architecture reported by the node\n  nodeInfo.bootID (string)\nBoot ID reported by the node.\n  nodeInfo.containerRuntimeVersion (string)\nContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0).\n  nodeInfo.kernelVersion (string)\nKernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).\n  nodeInfo.kubeProxyVersion (string)\nKubeProxy Version reported by the node.\n  nodeInfo.kubeletVersion (string)\nKubelet Version reported by the node.\n  nodeInfo.machineID (string)\nMachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html\n  nodeInfo.operatingSystem (string)\nThe Operating System reported by the node\n  nodeInfo.osImage (string)\nOS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).\n  nodeInfo.systemUUID (string)\nSystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-US/Red_Hat_Subscription_Management/1/html/RHSM/getting-system-uuid.html\n    phase (string)\nNodePhase is the recently observed lifecycle phase of the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never populated, and now is deprecated.\n  volumesAttached ([]AttachedVolume)\nList of volumes that are attached to the node.\n  volumesAttached.devicePath (string)\nDevicePath represents the device path where the volume should be available\n  volumesAttached.name (string)\nName of the attached volume\n    volumesInUse ([]string)\nList of attachable volumes in use (mounted) by the node.\n  NodeList core.v1.NodeList\nNodeList is the whole list of all Nodes which have been registered with master.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]Node)\nList of nodes\n  ","description":"","id":3,"section":"docs","tags":null,"title":"Node (v1)","uri":"https://www.k8sref.io/docs/part5/node-v1/"},{"content":"Pod (v1) Pod core.v1.Pod\nPod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (PodSpec)\nSpecification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  status (PodStatus)\nMost recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  PodSpec core.v1.PodSpec\nPodSpec is a description of a pod.\nContainers   containers ([]Container)\nList of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.\n  initContainers ([]Container)\nList of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n  imagePullSecrets ([]LocalObjectReference)\nImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod\n imagePullSecrets.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names    enableServiceLinks (boolean)\nEnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Defaults to true.\n  Volumes  volumes ([]Volume)\nList of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes  Scheduling   nodeSelector (object)\nNodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n  nodeName (string)\nNodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.\n  affinity (Affinity)\nIf specified, the pod's scheduling constraints\n  affinity.nodeAffinity (NodeAffinity)\nDescribes node affinity scheduling rules for the pod.\n  affinity.podAffinity (PodAffinity)\nDescribes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).\n  affinity.podAntiAffinity (PodAntiAffinity)\nDescribes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).\n    tolerations ([]Toleration)\nIf specified, the pod's tolerations.\n  tolerations.effect (string)\nEffect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n  tolerations.key (string)\nKey is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.\n  tolerations.operator (string)\nOperator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n  tolerations.tolerationSeconds (integer)\nTolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.\n  tolerations.value (string)\nValue is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.\n    schedulerName (string)\nIf specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.\n  runtimeClassName (string)\nRuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod. If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \u0026quot;legacy\u0026quot; RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md This is a beta feature as of Kubernetes v1.14.\n  priorityClassName (string)\nIf specified, indicates the pod's priority. \u0026quot;system-node-critical\u0026quot; and \u0026quot;system-cluster-critical\u0026quot; are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.\n  priority (integer)\nThe priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.\n  Lifecycle   restartPolicy (string)\nRestart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy\n  terminationGracePeriodSeconds (integer)\nOptional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.\n  activeDeadlineSeconds (integer)\nOptional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.\n  readinessGates ([]PodReadinessGate)\nIf specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \u0026quot;True\u0026quot; More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md\n readinessGates.conditionType (string)\nConditionType refers to a condition in the pod's condition list with matching type.    Hostname and Name resolution   hostname (string)\nSpecifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.\n  subdomain (string)\nIf specified, the fully qualified Pod hostname will be \u0026quot;\u0026lt;hostname\u0026gt;.\u0026lt;subdomain\u0026gt;.\u0026lt;pod namespace\u0026gt;.svc.\u0026lt;cluster domain\u0026gt;\u0026quot;. If not specified, the pod will not have a domainname at all.\n  hostAliases ([]HostAlias)\nHostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.\n  hostAliases.hostnames ([]string)\nHostnames for the above IP address.\n  hostAliases.ip (string)\nIP address of the host file entry.\n    dnsConfig (PodDNSConfig)\nSpecifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.\n  dnsConfig.nameservers ([]string)\nA list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.\n  dnsConfig.options ([]PodDNSConfigOption)\nA list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.\n  dnsConfig.options.name (string)\nRequired.\n  dnsConfig.options.value (string)\n  dnsConfig.searches ([]string)\nA list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.\n    dnsPolicy (string)\nSet DNS policy for the pod. Defaults to \u0026quot;ClusterFirst\u0026quot;. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.\n  Hosts namespaces   hostNetwork (boolean)\nHost networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.\n  hostPID (boolean)\nUse the host's pid namespace. Optional: Default to false.\n  hostIPC (boolean)\nUse the host's ipc namespace. Optional: Default to false.\n  shareProcessNamespace (boolean)\nShare a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false.\n  Service account   serviceAccountName (string)\nServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  automountServiceAccountToken (boolean)\nAutomountServiceAccountToken indicates whether a service account token should be automatically mounted.\n  Security context   securityContext (PodSecurityContext)\nSecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty. See type description for default values of each field.\n  securityContext.fsGroup (integer)\nA special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw\u0026mdash;-  If unset, the Kubelet will not modify the ownership and permissions of any volume.\n  securityContext.fsGroupChangePolicy (string)\nfsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \u0026quot;OnRootMismatch\u0026quot; and \u0026quot;Always\u0026quot;. If not specified defaults to \u0026quot;Always\u0026quot;.\n  securityContext.runAsGroup (integer)\nThe GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.\n  securityContext.runAsNonRoot (boolean)\nIndicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n  securityContext.runAsUser (integer)\nThe UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.\n  securityContext.seLinuxOptions (SELinuxOptions)\nThe SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.\n  securityContext.seLinuxOptions.level (string)\nLevel is SELinux level label that applies to the container.\n  securityContext.seLinuxOptions.role (string)\nRole is a SELinux role label that applies to the container.\n  securityContext.seLinuxOptions.type (string)\nType is a SELinux type label that applies to the container.\n  securityContext.seLinuxOptions.user (string)\nUser is a SELinux user label that applies to the container.\n  securityContext.supplementalGroups ([]integer)\nA list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.\n  securityContext.sysctls ([]Sysctl)\nSysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.\n  securityContext.sysctls.name (string)\nName of a property to set\n  securityContext.sysctls.value (string)\nValue of a property to set\n  securityContext.windowsOptions (WindowsSecurityContextOptions)\nThe Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n  securityContext.windowsOptions.gmsaCredentialSpec (string)\nGMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.\n  securityContext.windowsOptions.gmsaCredentialSpecName (string)\nGMSACredentialSpecName is the name of the GMSA credential spec to use.\n  securityContext.windowsOptions.runAsUserName (string)\nThe UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n    Alpha level   ephemeralContainers ([]EphemeralContainer)\nList of ephemeral containers run in this pod. Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource. This field is alpha-level and is only honored by servers that enable the EphemeralContainers feature.\n  overhead (object)\nOverhead represents the resource overhead associated with running a pod for a given RuntimeClass. This field will be autopopulated at admission time by the RuntimeClass admission controller. If the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests. The RuntimeClass admission controller will reject Pod create requests which have the overhead already set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/20190226-pod-overhead.md This field is alpha-level as of Kubernetes v1.16, and is only honored by servers that enable the PodOverhead feature.\n  preemptionPolicy (string)\nPreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature.\n  topologySpreadConstraints ([]TopologySpreadConstraint)\nTopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. This field is only honored by clusters that enable the EvenPodsSpread feature. All topologySpreadConstraints are ANDed.\n  topologySpreadConstraints.labelSelector (LabelSelector)\nLabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.\n  topologySpreadConstraints.maxSkew (integer)\nMaxSkew describes the degree to which pods may be unevenly distributed. It's the maximum permitted difference between the number of matching pods in any two topology domains of a given topology type. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | | P | P | | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. It's a required field. Default value is 1 and 0 is not allowed.\n  topologySpreadConstraints.topologyKey (string)\nTopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each \u0026lt;key, value\u0026gt; as a \u0026quot;bucket\u0026quot;, and try to put balanced number of pods into each bucket. It's a required field.\n  topologySpreadConstraints.whenUnsatisfiable (string)\nWhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it - ScheduleAnyway tells the scheduler to still schedule it It's considered as \u0026quot;Unsatisfiable\u0026quot; if and only if placing incoming pod on any topology violates \u0026quot;MaxSkew\u0026quot;. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P | P | P | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it more imbalanced. It's a required field.\n    Deprecated  serviceAccount (string)\nDeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.  PodStatus core.v1.PodStatus\nPodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.\n  nominatedNodeName (string)\nnominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled.\n  hostIP (string)\nIP address of the host to which the pod is assigned. Empty if not yet scheduled.\n  startTime (Time)\nRFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod.\n  phase (string)\nThe phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:\nPending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase\n  message (string)\nA human readable message indicating details about why the pod is in this condition.\n  reason (string)\nA brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'\n  podIP (string)\nIP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.\n  podIPs ([]PodIP)\npodIPs holds the IP addresses allocated to the pod. If this field is specified, the 0th entry must match the podIP field. Pods may be allocated at most 1 value for each of IPv4 and IPv6. This list is empty if no IPs have been allocated yet.\n podIPs.ip (string)\nip is an IP address (IPv4 or IPv6) assigned to the pod    conditions ([]PodCondition)\nCurrent service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions\n  conditions.lastProbeTime (Time)\nLast time we probed the condition.\n  conditions.lastTransitionTime (Time)\nLast time the condition transitioned from one status to another.\n  conditions.message (string)\nHuman-readable message indicating details about last transition.\n  conditions.reason (string)\nUnique, one-word, CamelCase reason for the condition's last transition.\n  conditions.status (string)\nStatus is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions\n  conditions.type (string)\nType is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions\n    qosClass (string)\nThe Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md\n  initContainerStatuses ([]ContainerStatus)\nThe list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status\n  containerStatuses ([]ContainerStatus)\nThe list has one entry per container in the manifest. Each entry is currently the output of docker inspect. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status\n  ephemeralContainerStatuses ([]ContainerStatus)\nStatus for any ephemeral containers that have run in this pod. This field is alpha-level and is only populated by servers that enable the EphemeralContainers feature.\n  PodList core.v1.PodList\nPodList is a list of Pods.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]Pod)\nList of pods. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md\n  ","description":"","id":4,"section":"docs","tags":null,"title":"Pod (v1)","uri":"https://www.k8sref.io/docs/part1/pod-v1/"},{"content":"Service (v1) Service core.v1.Service\nService is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (ServiceSpec)\nSpec defines the behavior of a service. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  status (ServiceStatus)\nMost recently observed status of the service. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  ServiceSpec core.v1.ServiceSpec\nServiceSpec describes the attributes that a user creates on a service.\n  ports ([]ServicePort)\nThe list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n  ports.appProtocol (string)\nThe application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. Field can be enabled with ServiceAppProtocol feature gate.\n  ports.name (string)\nThe name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.\n  ports.nodePort (integer)\nThe port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n  ports.port (integer)\nThe port that will be exposed by this service.\n  ports.protocol (string)\nThe IP protocol for this port. Supports \u0026quot;TCP\u0026quot;, \u0026quot;UDP\u0026quot;, and \u0026quot;SCTP\u0026quot;. Default is TCP.\n  ports.targetPort ()\nNumber or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service\n    selector (object)\nRoute service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/\n  type (string)\ntype determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \u0026quot;ExternalName\u0026quot; maps to the specified externalName. \u0026quot;ClusterIP\u0026quot; allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \u0026quot;None\u0026quot;, no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \u0026quot;NodePort\u0026quot; builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \u0026quot;LoadBalancer\u0026quot; builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\n  clusterIP (string)\nclusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \u0026quot;None\u0026quot;, empty string (\u0026quot;\u0026quot;), or a valid IP address. \u0026quot;None\u0026quot; can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n  externalIPs ([]string)\nexternalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service. These IPs are not managed by Kubernetes. The user is responsible for ensuring that traffic arrives at a node with this IP. A common example is external load-balancers that are not part of the Kubernetes system.\n  sessionAffinity (string)\nSupports \u0026quot;ClientIP\u0026quot; and \u0026quot;None\u0026quot;. Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n  loadBalancerIP (string)\nOnly applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.\n  loadBalancerSourceRanges ([]string)\nIf specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\u0026quot; More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/\n  externalName (string)\nexternalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.\n  externalTrafficPolicy (string)\nexternalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. \u0026quot;Local\u0026quot; preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. \u0026quot;Cluster\u0026quot; obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.\n  healthCheckNodePort (integer)\nhealthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.\n  publishNotReadyAddresses (boolean)\npublishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.\n  sessionAffinityConfig (SessionAffinityConfig)\nsessionAffinityConfig contains the configurations of session affinity.\n  sessionAffinityConfig.clientIP (ClientIPConfig)\nclientIP contains the configurations of Client IP based session affinity.\n  sessionAffinityConfig.clientIP.timeoutSeconds (integer)\ntimeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be \u0026gt;0 \u0026amp;\u0026amp; \u0026lt;=86400(for 1 day) if ServiceAffinity == \u0026quot;ClientIP\u0026quot;. Default value is 10800(for 3 hours).\n    ipFamily (string)\nipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6). If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster. If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family. Endpoints for this Service will be of this family. This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.\n  topologyKeys ([]string)\ntopologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local. Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value \u0026quot;*\u0026quot; may be used to mean \u0026quot;any topology\u0026quot;. This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.\n  ServiceStatus core.v1.ServiceStatus\nServiceStatus represents the current status of a service.\n  loadBalancer (LoadBalancerStatus)\nLoadBalancer contains the current status of the load-balancer, if one is present.\n  loadBalancer.ingress ([]LoadBalancerIngress)\nIngress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.\n  loadBalancer.ingress.hostname (string)\nHostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)\n  loadBalancer.ingress.ip (string)\nIP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)\n    ServiceList core.v1.ServiceList\nServiceList holds a list of services.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]Service)\nList of services\n  ","description":"","id":5,"section":"docs","tags":null,"title":"Service (v1)","uri":"https://www.k8sref.io/docs/part2/service-v1/"},{"content":"Affinity NodeAffinity core.v1.NodeAffinity\nNode affinity is a group of node affinity scheduling rules.\n  preferredDuringSchedulingIgnoredDuringExecution ([]PreferredSchedulingTerm)\nThe scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u0026quot;weight\u0026quot; to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.\n  preferredDuringSchedulingIgnoredDuringExecution.preference (NodeSelectorTerm)\nA node selector term, associated with the corresponding weight.\n  preferredDuringSchedulingIgnoredDuringExecution.weight (integer)\nWeight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.\n    requiredDuringSchedulingIgnoredDuringExecution (NodeSelector)\nIf the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.\n  PodAffinity core.v1.PodAffinity\nPod affinity is a group of inter pod affinity scheduling rules.\n  preferredDuringSchedulingIgnoredDuringExecution ([]WeightedPodAffinityTerm)\nThe scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u0026quot;weight\u0026quot; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.\n  preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm (PodAffinityTerm)\nRequired. A pod affinity term, associated with the corresponding weight.\n  preferredDuringSchedulingIgnoredDuringExecution.weight (integer)\nweight associated with matching the corresponding podAffinityTerm, in the range 1-100.\n    requiredDuringSchedulingIgnoredDuringExecution ([]PodAffinityTerm)\nIf the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.\n  PodAntiAffinity core.v1.PodAntiAffinity\nPod anti affinity is a group of inter pod anti affinity scheduling rules.\n  preferredDuringSchedulingIgnoredDuringExecution ([]WeightedPodAffinityTerm)\nThe scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \u0026quot;weight\u0026quot; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.\n  preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm (PodAffinityTerm)\nRequired. A pod affinity term, associated with the corresponding weight.\n  preferredDuringSchedulingIgnoredDuringExecution.weight (integer)\nweight associated with matching the corresponding podAffinityTerm, in the range 1-100.\n    requiredDuringSchedulingIgnoredDuringExecution ([]PodAffinityTerm)\nIf the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.\n  PreferredSchedulingTerm core.v1.PreferredSchedulingTerm\nAn empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).\n  preference (NodeSelectorTerm)\nA node selector term, associated with the corresponding weight.\n  weight (integer)\nWeight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.\n  PodAffinityTerm core.v1.PodAffinityTerm\nDefines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u0026lt;topologyKey\u0026gt; matches that of any node on which a pod of the set of pods is running\n  labelSelector (LabelSelector)\nA label query over a set of resources, in this case pods.\n  namespaces ([]string)\nnamespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \u0026quot;this pod's namespace\u0026quot;\n  topologyKey (string)\nThis pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.\n  NodeSelector core.v1.NodeSelector\nA node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.\n nodeSelectorTerms ([]NodeSelectorTerm)\nRequired. A list of node selector terms. The terms are ORed.  NodeSelectorTerm core.v1.NodeSelectorTerm\nA null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\n  matchExpressions ([]NodeSelectorRequirement)\nA list of node selector requirements by node's labels.\n  matchFields ([]NodeSelectorRequirement)\nA list of node selector requirements by node's fields.\n  NodeSelectorRequirement core.v1.NodeSelectorRequirement\nA node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\n  key (string)\nThe label key that the selector applies to.\n  operator (string)\nRepresents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n  values ([]string)\nAn array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\n  ","description":"","id":6,"section":"docs","tags":null,"title":"Affinity","uri":"https://www.k8sref.io/docs/part6/affinity/"},{"content":"Container (v1) Container core.v1.Container\nA single application container that you want to run within a pod.\nImage   image (string)\nDocker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.\n  imagePullPolicy (string)\nImage pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n  Entrypoint   command ([]string)\nEntrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n  args ([]string)\nArguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n  workingDir (string)\nContainer's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.\n  Ports   ports ([]ContainerPort)\nList of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \u0026quot;0.0.0.0\u0026quot; address inside a container will be accessible from the network. Cannot be updated.\n  ports.containerPort (integer)\nNumber of port to expose on the pod's IP address. This must be a valid port number, 0 \u0026lt; x \u0026lt; 65536.\n  ports.hostIP (string)\nWhat host IP to bind the external port to.\n  ports.hostPort (integer)\nNumber of port to expose on the host. If specified, this must be a valid port number, 0 \u0026lt; x \u0026lt; 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.\n  ports.name (string)\nIf specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.\n  ports.protocol (string)\nProtocol for port. Must be UDP, TCP, or SCTP. Defaults to \u0026quot;TCP\u0026quot;.\n    Environment variables   env ([]EnvVar)\nList of environment variables to set in the container. Cannot be updated.\n  env.name (string)\nName of the environment variable. Must be a C_IDENTIFIER.\n  env.value (string)\nVariable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \u0026quot;\u0026quot;.\n  env.valueFrom (EnvVarSource)\nSource for the environment variable's value. Cannot be used if value is not empty.\n  env.valueFrom.configMapKeyRef (ConfigMapKeySelector)\nSelects a key of a ConfigMap.\n  env.valueFrom.configMapKeyRef.key (string)\nThe key to select.\n  env.valueFrom.configMapKeyRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  env.valueFrom.configMapKeyRef.optional (boolean)\nSpecify whether the ConfigMap or its key must be defined\n  env.valueFrom.fieldRef (ObjectFieldSelector)\nSelects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\n  env.valueFrom.fieldRef.apiVersion (string)\nVersion of the schema the FieldPath is written in terms of, defaults to \u0026quot;v1\u0026quot;.\n  env.valueFrom.fieldRef.fieldPath (string)\nPath of the field to select in the specified API version.\n  env.valueFrom.resourceFieldRef (ResourceFieldSelector)\nSelects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.\n  env.valueFrom.resourceFieldRef.containerName (string)\nContainer name: required for volumes, optional for env vars\n  env.valueFrom.resourceFieldRef.divisor (Quantity)\nSpecifies the output format of the exposed resources, defaults to \u0026quot;1\u0026quot;\n  env.valueFrom.resourceFieldRef.resource (string)\nRequired: resource to select\n  env.valueFrom.secretKeyRef (SecretKeySelector)\nSelects a key of a secret in the pod's namespace\n  env.valueFrom.secretKeyRef.key (string)\nThe key of the secret to select from. Must be a valid secret key.\n  env.valueFrom.secretKeyRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  env.valueFrom.secretKeyRef.optional (boolean)\nSpecify whether the Secret or its key must be defined\n    envFrom ([]EnvFromSource)\nList of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.\n  envFrom.configMapRef (ConfigMapEnvSource)\nThe ConfigMap to select from\n  envFrom.configMapRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  envFrom.configMapRef.optional (boolean)\nSpecify whether the ConfigMap must be defined\n  envFrom.prefix (string)\nAn optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.\n  envFrom.secretRef (SecretEnvSource)\nThe Secret to select from\n  envFrom.secretRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  envFrom.secretRef.optional (boolean)\nSpecify whether the Secret must be defined\n    Volumes   volumeMounts ([]VolumeMount)\nPod volumes to mount into the container's filesystem. Cannot be updated.\n  volumeMounts.mountPath (string)\nPath within the container at which the volume should be mounted. Must not contain ':'.\n  volumeMounts.mountPropagation (string)\nmountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.\n  volumeMounts.name (string)\nThis must match the Name of a Volume.\n  volumeMounts.readOnly (boolean)\nMounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.\n  volumeMounts.subPath (string)\nPath within the volume from which the container's volume should be mounted. Defaults to \u0026quot;\u0026quot; (volume's root).\n  volumeMounts.subPathExpr (string)\nExpanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \u0026quot;\u0026quot; (volume's root). SubPathExpr and SubPath are mutually exclusive.\n    volumeDevices ([]VolumeDevice)\nvolumeDevices is the list of block devices to be used by the container.\n  volumeDevices.devicePath (string)\ndevicePath is the path inside of the container that the device will be mapped to.\n  volumeDevices.name (string)\nname must match the name of a persistentVolumeClaim in the pod\n    Name  name (string)\nName of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.  Resources   resources (ResourceRequirements)\nCompute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n  resources.limits (object)\nLimits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n  resources.requests (object)\nRequests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n    Lifecycle   lifecycle (Lifecycle)\nActions that the management system should take in response to container lifecycle events. Cannot be updated.\n  lifecycle.postStart (Handler)\nPostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n  lifecycle.postStart.exec (ExecAction)\nOne and only one of the following should be specified. Exec specifies the action to take.\n  lifecycle.postStart.exec.command ([]string)\nCommand is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\n  lifecycle.postStart.httpGet (HTTPGetAction)\nHTTPGet specifies the http request to perform.\n  lifecycle.postStart.httpGet.host (string)\nHost name to connect to, defaults to the pod IP. You probably want to set \u0026quot;Host\u0026quot; in httpHeaders instead.\n  lifecycle.postStart.httpGet.httpHeaders ([]HTTPHeader)\nCustom headers to set in the request. HTTP allows repeated headers.\n  lifecycle.postStart.httpGet.httpHeaders.name (string)\nThe header field name\n  lifecycle.postStart.httpGet.httpHeaders.value (string)\nThe header field value\n  lifecycle.postStart.httpGet.path (string)\nPath to access on the HTTP server.\n  lifecycle.postStart.httpGet.port ()\nName or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\n  lifecycle.postStart.httpGet.scheme (string)\nScheme to use for connecting to the host. Defaults to HTTP.\n  lifecycle.postStart.tcpSocket (TCPSocketAction)\nTCPSocket specifies an action involving a TCP port. TCP hooks not yet supported\n  lifecycle.postStart.tcpSocket.host (string)\nOptional: Host name to connect to, defaults to the pod IP.\n  lifecycle.postStart.tcpSocket.port ()\nNumber or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\n  lifecycle.preStop (Handler)\nPreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n  lifecycle.preStop.exec (ExecAction)\nOne and only one of the following should be specified. Exec specifies the action to take.\n  lifecycle.preStop.exec.command ([]string)\nCommand is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\n  lifecycle.preStop.httpGet (HTTPGetAction)\nHTTPGet specifies the http request to perform.\n  lifecycle.preStop.httpGet.host (string)\nHost name to connect to, defaults to the pod IP. You probably want to set \u0026quot;Host\u0026quot; in httpHeaders instead.\n  lifecycle.preStop.httpGet.httpHeaders ([]HTTPHeader)\nCustom headers to set in the request. HTTP allows repeated headers.\n  lifecycle.preStop.httpGet.httpHeaders.name (string)\nThe header field name\n  lifecycle.preStop.httpGet.httpHeaders.value (string)\nThe header field value\n  lifecycle.preStop.httpGet.path (string)\nPath to access on the HTTP server.\n  lifecycle.preStop.httpGet.port ()\nName or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\n  lifecycle.preStop.httpGet.scheme (string)\nScheme to use for connecting to the host. Defaults to HTTP.\n  lifecycle.preStop.tcpSocket (TCPSocketAction)\nTCPSocket specifies an action involving a TCP port. TCP hooks not yet supported\n  lifecycle.preStop.tcpSocket.host (string)\nOptional: Host name to connect to, defaults to the pod IP.\n  lifecycle.preStop.tcpSocket.port ()\nNumber or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\n    terminationMessagePath (string)\nOptional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.\n  terminationMessagePolicy (string)\nIndicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.\n  livenessProbe (Probe)\nPeriodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n  readinessProbe (Probe)\nPeriodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n  readinessProbe.exec (ExecAction)\nOne and only one of the following should be specified. Exec specifies the action to take.\n  readinessProbe.exec.command ([]string)\nCommand is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\n  readinessProbe.failureThreshold (integer)\nMinimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.\n  readinessProbe.httpGet (HTTPGetAction)\nHTTPGet specifies the http request to perform.\n  readinessProbe.httpGet.host (string)\nHost name to connect to, defaults to the pod IP. You probably want to set \u0026quot;Host\u0026quot; in httpHeaders instead.\n  readinessProbe.httpGet.httpHeaders ([]HTTPHeader)\nCustom headers to set in the request. HTTP allows repeated headers.\n  readinessProbe.httpGet.httpHeaders.name (string)\nThe header field name\n  readinessProbe.httpGet.httpHeaders.value (string)\nThe header field value\n  readinessProbe.httpGet.path (string)\nPath to access on the HTTP server.\n  readinessProbe.httpGet.port ()\nName or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\n  readinessProbe.httpGet.scheme (string)\nScheme to use for connecting to the host. Defaults to HTTP.\n  readinessProbe.initialDelaySeconds (integer)\nNumber of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n  readinessProbe.periodSeconds (integer)\nHow often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\n  readinessProbe.successThreshold (integer)\nMinimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\n  readinessProbe.tcpSocket (TCPSocketAction)\nTCPSocket specifies an action involving a TCP port. TCP hooks not yet supported\n  readinessProbe.tcpSocket.host (string)\nOptional: Host name to connect to, defaults to the pod IP.\n  readinessProbe.tcpSocket.port ()\nNumber or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\n  readinessProbe.timeoutSeconds (integer)\nNumber of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n    Security Context   securityContext (SecurityContext)\nSecurity options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n  securityContext.allowPrivilegeEscalation (boolean)\nAllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN\n  securityContext.capabilities (Capabilities)\nThe capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.\n  securityContext.capabilities.add ([]string)\nAdded capabilities\n  securityContext.capabilities.drop ([]string)\nRemoved capabilities\n  securityContext.privileged (boolean)\nRun container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.\n  securityContext.procMount (string)\nprocMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.\n  securityContext.readOnlyRootFilesystem (boolean)\nWhether this container has a read-only root filesystem. Default is false.\n  securityContext.runAsGroup (integer)\nThe GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n  securityContext.runAsNonRoot (boolean)\nIndicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n  securityContext.runAsUser (integer)\nThe UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n  securityContext.seLinuxOptions (SELinuxOptions)\nThe SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n  securityContext.seLinuxOptions.level (string)\nLevel is SELinux level label that applies to the container.\n  securityContext.seLinuxOptions.role (string)\nRole is a SELinux role label that applies to the container.\n  securityContext.seLinuxOptions.type (string)\nType is a SELinux type label that applies to the container.\n  securityContext.seLinuxOptions.user (string)\nUser is a SELinux user label that applies to the container.\n  securityContext.windowsOptions (WindowsSecurityContextOptions)\nThe Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n  securityContext.windowsOptions.gmsaCredentialSpec (string)\nGMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.\n  securityContext.windowsOptions.gmsaCredentialSpecName (string)\nGMSACredentialSpecName is the name of the GMSA credential spec to use.\n  securityContext.windowsOptions.runAsUserName (string)\nThe UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n    Debugging   stdin (boolean)\nWhether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.\n  stdinOnce (boolean)\nWhether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false\n  tty (boolean)\nWhether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.\n  Alpha level  startupProbe (Probe)\nStartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes  ContainerStatus core.v1.ContainerStatus\nContainerStatus contains details for the current status of this container.\n  name (string)\nThis must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.\n  containerID (string)\nContainer's ID in the format 'docker://\u0026lt;container_id\u0026gt;'.\n  image (string)\nThe image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images\n  imageID (string)\nImageID of the container's image.\n  state (ContainerState)\nDetails about the container's current condition.\n  state.running (ContainerStateRunning)\nDetails about a running container\n  state.running.startedAt (Time)\nTime at which the container was last (re-)started\n  state.terminated (ContainerStateTerminated)\nDetails about a terminated container\n  state.terminated.containerID (string)\nContainer's ID in the format 'docker://\u0026lt;container_id\u0026gt;'\n  state.terminated.exitCode (integer)\nExit status from the last termination of the container\n  state.terminated.finishedAt (Time)\nTime at which the container last terminated\n  state.terminated.message (string)\nMessage regarding the last termination of the container\n  state.terminated.reason (string)\n(brief) reason from the last termination of the container\n  state.terminated.signal (integer)\nSignal from the last termination of the container\n  state.terminated.startedAt (Time)\nTime at which previous execution of the container started\n  state.waiting (ContainerStateWaiting)\nDetails about a waiting container\n  state.waiting.message (string)\nMessage regarding why the container is not yet running.\n  state.waiting.reason (string)\n(brief) reason the container is not yet running.\n    lastState (ContainerState)\nDetails about the container's last termination condition.\n  ready (boolean)\nSpecifies whether the container has passed its readiness probe.\n  restartCount (integer)\nThe number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.\n  started (boolean)\nSpecifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.\n  ","description":"","id":7,"section":"docs","tags":null,"title":"Container (v1)","uri":"https://www.k8sref.io/docs/part1/container-v1/"},{"content":"CustomResourceDefinition (v1) CustomResourceDefinition apiextensions.v1.CustomResourceDefinition\nCustomResourceDefinition represents a resource that should be exposed on the API server. Its name MUST be in the format \u0026lt;.spec.name\u0026gt;.\u0026lt;.spec.group\u0026gt;.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\n  spec (CustomResourceDefinitionSpec)\nspec describes how the user wants the resources to appear\n  status (CustomResourceDefinitionStatus)\nstatus indicates the actual state of the CustomResourceDefinition\n  CustomResourceDefinitionSpec apiextensions.v1.CustomResourceDefinitionSpec\nCustomResourceDefinitionSpec describes how a user wants their resource to appear\n  scope (string)\nscope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are Cluster and Namespaced.\n  group (string)\ngroup is the API group of the defined custom resource. The custom resources are served under /apis/\u0026amp;lt;group\u0026amp;gt;/.... Must match the name of the CustomResourceDefinition (in the form \u0026amp;lt;names.plural\u0026amp;gt;.\u0026amp;lt;group\u0026amp;gt;).\n  names (CustomResourceDefinitionNames)\nnames specify the resource and kind names for the custom resource.\n  names.categories ([]string)\ncategories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like kubectl get all.\n  names.kind (string)\nkind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the kind attribute in API calls.\n  names.listKind (string)\nlistKind is the serialized kind of the list for this resource. Defaults to \u0026quot;kindList\u0026quot;.\n  names.plural (string)\nplural is the plural name of the resource to serve. The custom resources are served under /apis/\u0026amp;lt;group\u0026amp;gt;/\u0026amp;lt;version\u0026amp;gt;/.../\u0026amp;lt;plural\u0026amp;gt;. Must match the name of the CustomResourceDefinition (in the form \u0026amp;lt;names.plural\u0026amp;gt;.\u0026amp;lt;group\u0026amp;gt;). Must be all lowercase.\n  names.shortNames ([]string)\nshortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like kubectl get \u0026amp;lt;shortname\u0026amp;gt;. It must be all lowercase.\n  names.singular (string)\nsingular is the singular name of the resource. It must be all lowercase. Defaults to lowercased kind.\n    preserveUnknownFields (boolean)\npreserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. This field is deprecated in favor of setting x-preserve-unknown-fields to true in spec.versions[*].schema.openAPIV3Schema. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.\n  versions ([]CustomResourceDefinitionVersion)\nversions is the list of all API versions of the defined custom resource. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is \u0026quot;kube-like\u0026quot;, it will sort above non \u0026quot;kube-like\u0026quot; version strings, which are ordered lexicographically. \u0026quot;Kube-like\u0026quot; versions start with a \u0026quot;v\u0026quot;, then are followed by a number (the major version), then optionally the string \u0026quot;alpha\u0026quot; or \u0026quot;beta\u0026quot; and another number (the minor version). These are sorted first by GA \u0026gt; beta \u0026gt; alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.\n  versions.additionalPrinterColumns ([]CustomResourceColumnDefinition)\nadditionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.\n  versions.additionalPrinterColumns.description (string)\ndescription is a human readable description of this column.\n  versions.additionalPrinterColumns.format (string)\nformat is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.\n  versions.additionalPrinterColumns.jsonPath (string)\njsonPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.\n  versions.additionalPrinterColumns.name (string)\nname is a human readable name for the column.\n  versions.additionalPrinterColumns.priority (integer)\npriority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.\n  versions.additionalPrinterColumns.type (string)\ntype is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.\n  versions.name (string)\nname is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at /apis/\u0026amp;lt;group\u0026amp;gt;/\u0026amp;lt;version\u0026amp;gt;/... if served is true.\n  versions.schema (CustomResourceValidation)\nschema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.\n  versions.schema.openAPIV3Schema (JSONSchemaProps)\nopenAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.\n  versions.served (boolean)\nserved is a flag enabling/disabling this version from being served via REST APIs\n  versions.storage (boolean)\nstorage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.\n  versions.subresources (CustomResourceSubresources)\nsubresources specify what subresources this version of the defined custom resource have.\n  versions.subresources.scale (CustomResourceSubresourceScale)\nscale indicates the custom resource should serve a /scale subresource that returns an autoscaling/v1 Scale object.\n  versions.subresources.scale.labelSelectorPath (string)\nlabelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale status.selector. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status or .spec. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the status.selector value in the /scale subresource will default to the empty string.\n  versions.subresources.scale.specReplicasPath (string)\nspecReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale spec.replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .spec. If there is no value under the given path in the custom resource, the /scale subresource will return an error on GET.\n  versions.subresources.scale.statusReplicasPath (string)\nstatusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale status.replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. If there is no value under the given path in the custom resource, the status.replicas value in the /scale subresource will default to 0.\n  versions.subresources.status (CustomResourceSubresourceStatus)\nstatus indicates the custom resource should serve a /status subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the status stanza of the object. 2. requests to the custom resource /status subresource ignore changes to anything other than the status stanza of the object.\n    conversion (CustomResourceConversion)\nconversion defines conversion settings for the CRD.\n  conversion.strategy (string)\nstrategy specifies how custom resources are converted between versions. Allowed values are: - None: The converter only change the apiVersion and would not touch any other field in the custom resource. - Webhook: API Server will call to an external webhook to do the conversion. Additional information\nis needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.\n  conversion.webhook (WebhookConversion)\nwebhook describes how to call the conversion webhook. Required when strategy is set to Webhook.\n  conversion.webhook.clientConfig (WebhookClientConfig)\nclientConfig is the instructions for how to call the webhook if strategy is Webhook.\n  conversion.webhook.clientConfig.caBundle (string)\ncaBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.\n  conversion.webhook.clientConfig.service (ServiceReference)\nservice is a reference to the service for this webhook. Either service or url must be specified.\nIf the webhook is running within the cluster, then you should use service.\n  conversion.webhook.clientConfig.url (string)\nurl gives the location of the webhook, in standard URL form (scheme://host:port/path). Exactly one of url or service must be specified.\nThe host should not refer to a service running in the cluster; use the service field instead. The host might be resolved via external DNS in some apiservers (e.g., kube-apiserver cannot resolve in-cluster DNS as that would be a layering violation). host may also be an IP address.\nPlease note that using localhost or 127.0.0.1 as a host is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\nThe scheme must be \u0026quot;https\u0026quot;; the URL must begin with \u0026quot;https://\u0026quot;.\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\nAttempting to use a user or basic auth e.g. \u0026quot;user:password@\u0026quot; is not allowed. Fragments (\u0026quot;#\u0026hellip;\u0026quot;) and query parameters (\u0026quot;?\u0026hellip;\u0026quot;) are not allowed, either.\n  conversion.webhook.conversionReviewVersions ([]string)\nconversionReviewVersions is an ordered list of preferred ConversionReview versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.\n    CustomResourceDefinitionStatus apiextensions.v1.CustomResourceDefinitionStatus\nCustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition\n  acceptedNames (CustomResourceDefinitionNames)\nacceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec.\n  acceptedNames.categories ([]string)\ncategories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like kubectl get all.\n  acceptedNames.kind (string)\nkind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the kind attribute in API calls.\n  acceptedNames.listKind (string)\nlistKind is the serialized kind of the list for this resource. Defaults to \u0026quot;kindList\u0026quot;.\n  acceptedNames.plural (string)\nplural is the plural name of the resource to serve. The custom resources are served under /apis/\u0026amp;lt;group\u0026amp;gt;/\u0026amp;lt;version\u0026amp;gt;/.../\u0026amp;lt;plural\u0026amp;gt;. Must match the name of the CustomResourceDefinition (in the form \u0026amp;lt;names.plural\u0026amp;gt;.\u0026amp;lt;group\u0026amp;gt;). Must be all lowercase.\n  acceptedNames.shortNames ([]string)\nshortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like kubectl get \u0026amp;lt;shortname\u0026amp;gt;. It must be all lowercase.\n  acceptedNames.singular (string)\nsingular is the singular name of the resource. It must be all lowercase. Defaults to lowercased kind.\n    conditions ([]CustomResourceDefinitionCondition)\nconditions indicate state for particular aspects of a CustomResourceDefinition\n  conditions.lastTransitionTime (Time)\nlastTransitionTime last time the condition transitioned from one status to another.\n  conditions.message (string)\nmessage is a human-readable message indicating details about last transition.\n  conditions.reason (string)\nreason is a unique, one-word, CamelCase reason for the condition's last transition.\n  conditions.status (string)\nstatus is the status of the condition. Can be True, False, Unknown.\n  conditions.type (string)\ntype is the type of the condition. Types include Established, NamesAccepted and Terminating.\n    storedVersions ([]string)\nstoredVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from spec.versions while they exist in this list.\n  CustomResourceDefinitionList apiextensions.v1.CustomResourceDefinitionList\nCustomResourceDefinitionList is a list of CustomResourceDefinition objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\n  items ([]CustomResourceDefinition)\nitems list individual CustomResourceDefinition objects\n  ","description":"","id":8,"section":"docs","tags":null,"title":"CustomResourceDefinition (v1)","uri":"https://www.k8sref.io/docs/part4/customresourcedefinition-v1/"},{"content":"Endpoints (v1) Endpoints core.v1.Endpoints\nEndpoints is a collection of endpoints that implement the actual service. Example:\nName: \u0026quot;mysvc\u0026quot;,\nSubsets: [\n{\nAddresses: [{\u0026quot;ip\u0026quot;: \u0026quot;10.10.1.1\u0026quot;}, {\u0026quot;ip\u0026quot;: \u0026quot;10.10.2.2\u0026quot;}],\nPorts: [{\u0026quot;name\u0026quot;: \u0026quot;a\u0026quot;, \u0026quot;port\u0026quot;: 8675}, {\u0026quot;name\u0026quot;: \u0026quot;b\u0026quot;, \u0026quot;port\u0026quot;: 309}]\n},\n{\nAddresses: [{\u0026quot;ip\u0026quot;: \u0026quot;10.10.3.3\u0026quot;}],\nPorts: [{\u0026quot;name\u0026quot;: \u0026quot;a\u0026quot;, \u0026quot;port\u0026quot;: 93}, {\u0026quot;name\u0026quot;: \u0026quot;b\u0026quot;, \u0026quot;port\u0026quot;: 76}]\n},\n]\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  subsets ([]EndpointSubset)\nThe set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service.\n  subsets.addresses ([]EndpointAddress)\nIP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.\n  subsets.addresses.hostname (string)\nThe Hostname of this endpoint\n  subsets.addresses.ip (string)\nThe IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.\n  subsets.addresses.nodeName (string)\nOptional: Node hosting this endpoint. This can be used to determine endpoints local to a node.\n  subsets.addresses.targetRef (ObjectReference)\nReference to object providing the endpoint.\n  subsets.notReadyAddresses ([]EndpointAddress)\nIP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.\n  subsets.notReadyAddresses.hostname (string)\nThe Hostname of this endpoint\n  subsets.notReadyAddresses.ip (string)\nThe IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.\n  subsets.notReadyAddresses.nodeName (string)\nOptional: Node hosting this endpoint. This can be used to determine endpoints local to a node.\n  subsets.notReadyAddresses.targetRef (ObjectReference)\nReference to object providing the endpoint.\n  subsets.ports ([]EndpointPort)\nPort numbers available on the related IP addresses.\n  subsets.ports.appProtocol (string)\nThe application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. Field can be enabled with ServiceAppProtocol feature gate.\n  subsets.ports.name (string)\nThe name of this port. This must match the 'name' field in the corresponding ServicePort. Must be a DNS_LABEL. Optional only if one port is defined.\n  subsets.ports.port (integer)\nThe port number of the endpoint.\n  subsets.ports.protocol (string)\nThe IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.\n    EndpointsList core.v1.EndpointsList\nEndpointsList is a list of endpoints.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]Endpoints)\nList of endpoints.\n  ","description":"","id":9,"section":"docs","tags":null,"title":"Endpoints (v1)","uri":"https://www.k8sref.io/docs/part2/endpoints-v1/"},{"content":"Namespace (v1) Namespace core.v1.Namespace\nNamespace provides a scope for Names. Use of multiple namespaces is optional.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (NamespaceSpec)\nSpec defines the behavior of the Namespace. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  status (NamespaceStatus)\nStatus describes the current status of a Namespace. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  NamespaceSpec core.v1.NamespaceSpec\nNamespaceSpec describes the attributes on a Namespace.\n finalizers ([]string)\nFinalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/  NamespaceStatus core.v1.NamespaceStatus\nNamespaceStatus is information about the current status of a Namespace.\n  conditions ([]NamespaceCondition)\nRepresents the latest available observations of a namespace's current state.\n  conditions.lastTransitionTime (Time)\n  conditions.message (string)\n  conditions.reason (string)\n  conditions.status (string)\nStatus of the condition, one of True, False, Unknown.\n  conditions.type (string)\nType of namespace controller condition.\n    phase (string)\nPhase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/\n  NamespaceList core.v1.NamespaceList\nNamespaceList is a list of Namespaces.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]Namespace)\nItems is the list of Namespace objects in the list. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n  ","description":"","id":10,"section":"docs","tags":null,"title":"Namespace (v1)","uri":"https://www.k8sref.io/docs/part5/namespace-v1/"},{"content":"Secret (v1) Secret core.v1.Secret\nSecret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  Data   data (object)\nData contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4\n  stringData (object)\nstringData allows specifying non-binary secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API.\n  Attributes   type (string)\nUsed to facilitate programmatic handling of secret data.\n  immutable (boolean)\nImmutable, if set to true, ensures that data stored in the Secret cannot be updated (only object metadata can be modified). If not set to true, the field can be modified at any time. Defaulted to nil. This is an alpha field enabled by ImmutableEphemeralVolumes feature gate.\n  SecretList core.v1.SecretList\nSecretList is a list of Secret.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]Secret)\nItems is a list of secret objects. More info: https://kubernetes.io/docs/concepts/configuration/secret\n  ","description":"","id":11,"section":"docs","tags":null,"title":"Secret (v1)","uri":"https://www.k8sref.io/docs/part3/secret-v1/"},{"content":"EndpointSlice (v1beta1) EndpointSlice discovery.v1beta1.EndpointSlice\nEndpointSlice represents a subset of the endpoints that implement a service. For a given service there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce the full set of endpoints.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata.\n  Specs   addressType (string)\naddressType specifies the type of address carried by this EndpointSlice. All addresses in this slice must be the same type. This field is immutable after creation. The following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name.\n  endpoints ([]Endpoint)\nendpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000 endpoints.\n  endpoints.addresses ([]string)\naddresses of this endpoint. The contents of this field are interpreted according to the corresponding EndpointSlice addressType field. Consumers must handle different types of addresses in the context of their own capabilities. This must contain at least one address but no more than 100.\n  endpoints.conditions (EndpointConditions)\nconditions contains information about the current status of the endpoint.\n  endpoints.conditions.ready (boolean)\nready indicates that this endpoint is prepared to receive traffic, according to whatever system is managing the endpoint. A nil value indicates an unknown state. In most cases consumers should interpret this unknown state as ready.\n  endpoints.hostname (string)\nhostname of this endpoint. This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same hostname should be considered fungible (e.g. multiple A values in DNS). Must pass DNS Label (RFC 1123) validation.\n  endpoints.targetRef (ObjectReference)\ntargetRef is a reference to a Kubernetes object that represents this endpoint.\n  endpoints.topology (object)\ntopology contains arbitrary topology information associated with the endpoint. These key/value pairs must conform with the label format. https://kubernetes.io/docs/concepts/overview/working-with-objects/labels Topology may include a maximum of 16 key/value pairs. This includes, but is not limited to the following well known keys: * kubernetes.io/hostname: the value indicates the hostname of the node\nwhere the endpoint is located. This should match the corresponding\nnode label.\n topology.kubernetes.io/zone: the value indicates the zone where the\nendpoint is located. This should match the corresponding node label. topology.kubernetes.io/region: the value indicates the region where the\nendpoint is located. This should match the corresponding node label.      ports ([]EndpointPort)\nports specifies the list of network ports exposed by each endpoint in this slice. Each port must have a unique name. When ports is empty, it indicates that there are no defined ports. When a port is defined with a nil port value, it indicates \u0026quot;all ports\u0026quot;. Each slice may include a maximum of 100 ports.\n  ports.appProtocol (string)\nThe application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.\n  ports.name (string)\nThe name of this port. All ports in an EndpointSlice must have a unique name. If the EndpointSlice is dervied from a Kubernetes service, this corresponds to the Service.ports[].name. Name must either be an empty string or pass DNS_LABEL validation: * must be no more than 63 characters long. * must consist of lower case alphanumeric characters or '-'. * must start and end with an alphanumeric character. Default is empty string.\n  ports.port (integer)\nThe port number of the endpoint. If this is not specified, ports are not restricted and must be interpreted in the context of the specific consumer.\n  ports.protocol (string)\nThe IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.\n    EndpointSliceList discovery.v1beta1.EndpointSliceList\nEndpointSliceList represents a list of endpoint slices\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata.\n  items ([]EndpointSlice)\nList of endpoint slices\n  ","description":"","id":12,"section":"docs","tags":null,"title":"EndpointSlice (v1beta1)","uri":"https://www.k8sref.io/docs/part2/endpointslice-v1beta1/"},{"content":"EphemeralContainer (v1) EphemeralContainer core.v1.EphemeralContainer\nAn EphemeralContainer is a container that may be added temporarily to an existing pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a pod is removed or restarted. If an ephemeral container causes a pod to exceed its resource allocation, the pod may be evicted. Ephemeral containers may not be added by directly updating the pod spec. They must be added via the pod's ephemeralcontainers subresource, and they will appear in the pod spec once added. This is an alpha feature enabled by the EphemeralContainers feature flag.\n targetContainerName (string)\nIf set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container is run in whatever namespaces are shared for the pod. Note that the container runtime must support this feature.  Image   image (string)\nDocker image name. More info: https://kubernetes.io/docs/concepts/containers/images\n  imagePullPolicy (string)\nImage pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n  Entrypoint   command ([]string)\nEntrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n  args ([]string)\nArguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n  workingDir (string)\nContainer's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.\n  Ports   ports ([]ContainerPort)\nPorts are not allowed for ephemeral containers.\n  ports.containerPort (integer)\nNumber of port to expose on the pod's IP address. This must be a valid port number, 0 \u0026lt; x \u0026lt; 65536.\n  ports.hostIP (string)\nWhat host IP to bind the external port to.\n  ports.hostPort (integer)\nNumber of port to expose on the host. If specified, this must be a valid port number, 0 \u0026lt; x \u0026lt; 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.\n  ports.name (string)\nIf specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.\n  ports.protocol (string)\nProtocol for port. Must be UDP, TCP, or SCTP. Defaults to \u0026quot;TCP\u0026quot;.\n    Environment variables   env ([]EnvVar)\nList of environment variables to set in the container. Cannot be updated.\n  env.name (string)\nName of the environment variable. Must be a C_IDENTIFIER.\n  env.value (string)\nVariable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \u0026quot;\u0026quot;.\n  env.valueFrom (EnvVarSource)\nSource for the environment variable's value. Cannot be used if value is not empty.\n  env.valueFrom.configMapKeyRef (ConfigMapKeySelector)\nSelects a key of a ConfigMap.\n  env.valueFrom.configMapKeyRef.key (string)\nThe key to select.\n  env.valueFrom.configMapKeyRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  env.valueFrom.configMapKeyRef.optional (boolean)\nSpecify whether the ConfigMap or its key must be defined\n  env.valueFrom.fieldRef (ObjectFieldSelector)\nSelects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\n  env.valueFrom.fieldRef.apiVersion (string)\nVersion of the schema the FieldPath is written in terms of, defaults to \u0026quot;v1\u0026quot;.\n  env.valueFrom.fieldRef.fieldPath (string)\nPath of the field to select in the specified API version.\n  env.valueFrom.resourceFieldRef (ResourceFieldSelector)\nSelects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.\n  env.valueFrom.resourceFieldRef.containerName (string)\nContainer name: required for volumes, optional for env vars\n  env.valueFrom.resourceFieldRef.divisor (Quantity)\nSpecifies the output format of the exposed resources, defaults to \u0026quot;1\u0026quot;\n  env.valueFrom.resourceFieldRef.resource (string)\nRequired: resource to select\n  env.valueFrom.secretKeyRef (SecretKeySelector)\nSelects a key of a secret in the pod's namespace\n  env.valueFrom.secretKeyRef.key (string)\nThe key of the secret to select from. Must be a valid secret key.\n  env.valueFrom.secretKeyRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  env.valueFrom.secretKeyRef.optional (boolean)\nSpecify whether the Secret or its key must be defined\n    envFrom ([]EnvFromSource)\nList of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.\n  envFrom.configMapRef (ConfigMapEnvSource)\nThe ConfigMap to select from\n  envFrom.configMapRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  envFrom.configMapRef.optional (boolean)\nSpecify whether the ConfigMap must be defined\n  envFrom.prefix (string)\nAn optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.\n  envFrom.secretRef (SecretEnvSource)\nThe Secret to select from\n  envFrom.secretRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  envFrom.secretRef.optional (boolean)\nSpecify whether the Secret must be defined\n    Volumes   volumeMounts ([]VolumeMount)\nPod volumes to mount into the container's filesystem. Cannot be updated.\n  volumeMounts.mountPath (string)\nPath within the container at which the volume should be mounted. Must not contain ':'.\n  volumeMounts.mountPropagation (string)\nmountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.\n  volumeMounts.name (string)\nThis must match the Name of a Volume.\n  volumeMounts.readOnly (boolean)\nMounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.\n  volumeMounts.subPath (string)\nPath within the volume from which the container's volume should be mounted. Defaults to \u0026quot;\u0026quot; (volume's root).\n  volumeMounts.subPathExpr (string)\nExpanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \u0026quot;\u0026quot; (volume's root). SubPathExpr and SubPath are mutually exclusive.\n    volumeDevices ([]VolumeDevice)\nvolumeDevices is the list of block devices to be used by the container.\n  volumeDevices.devicePath (string)\ndevicePath is the path inside of the container that the device will be mapped to.\n  volumeDevices.name (string)\nname must match the name of a persistentVolumeClaim in the pod\n    Name  name (string)\nName of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers.  Resources   resources (ResourceRequirements)\nResources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod.\n  resources.limits (object)\nLimits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n  resources.requests (object)\nRequests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n    Lifecycle   lifecycle (Lifecycle)\nLifecycle is not allowed for ephemeral containers.\n  lifecycle.postStart (Handler)\nPostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n  lifecycle.postStart.exec (ExecAction)\nOne and only one of the following should be specified. Exec specifies the action to take.\n  lifecycle.postStart.exec.command ([]string)\nCommand is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\n  lifecycle.postStart.httpGet (HTTPGetAction)\nHTTPGet specifies the http request to perform.\n  lifecycle.postStart.httpGet.host (string)\nHost name to connect to, defaults to the pod IP. You probably want to set \u0026quot;Host\u0026quot; in httpHeaders instead.\n  lifecycle.postStart.httpGet.httpHeaders ([]HTTPHeader)\nCustom headers to set in the request. HTTP allows repeated headers.\n  lifecycle.postStart.httpGet.httpHeaders.name (string)\nThe header field name\n  lifecycle.postStart.httpGet.httpHeaders.value (string)\nThe header field value\n  lifecycle.postStart.httpGet.path (string)\nPath to access on the HTTP server.\n  lifecycle.postStart.httpGet.port ()\nName or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\n  lifecycle.postStart.httpGet.scheme (string)\nScheme to use for connecting to the host. Defaults to HTTP.\n  lifecycle.postStart.tcpSocket (TCPSocketAction)\nTCPSocket specifies an action involving a TCP port. TCP hooks not yet supported\n  lifecycle.postStart.tcpSocket.host (string)\nOptional: Host name to connect to, defaults to the pod IP.\n  lifecycle.postStart.tcpSocket.port ()\nNumber or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\n  lifecycle.preStop (Handler)\nPreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\n  lifecycle.preStop.exec (ExecAction)\nOne and only one of the following should be specified. Exec specifies the action to take.\n  lifecycle.preStop.exec.command ([]string)\nCommand is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\n  lifecycle.preStop.httpGet (HTTPGetAction)\nHTTPGet specifies the http request to perform.\n  lifecycle.preStop.httpGet.host (string)\nHost name to connect to, defaults to the pod IP. You probably want to set \u0026quot;Host\u0026quot; in httpHeaders instead.\n  lifecycle.preStop.httpGet.httpHeaders ([]HTTPHeader)\nCustom headers to set in the request. HTTP allows repeated headers.\n  lifecycle.preStop.httpGet.httpHeaders.name (string)\nThe header field name\n  lifecycle.preStop.httpGet.httpHeaders.value (string)\nThe header field value\n  lifecycle.preStop.httpGet.path (string)\nPath to access on the HTTP server.\n  lifecycle.preStop.httpGet.port ()\nName or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\n  lifecycle.preStop.httpGet.scheme (string)\nScheme to use for connecting to the host. Defaults to HTTP.\n  lifecycle.preStop.tcpSocket (TCPSocketAction)\nTCPSocket specifies an action involving a TCP port. TCP hooks not yet supported\n  lifecycle.preStop.tcpSocket.host (string)\nOptional: Host name to connect to, defaults to the pod IP.\n  lifecycle.preStop.tcpSocket.port ()\nNumber or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\n    terminationMessagePath (string)\nOptional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.\n  terminationMessagePolicy (string)\nIndicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.\n  livenessProbe (Probe)\nProbes are not allowed for ephemeral containers.\n  readinessProbe (Probe)\nProbes are not allowed for ephemeral containers.\n  readinessProbe.exec (ExecAction)\nOne and only one of the following should be specified. Exec specifies the action to take.\n  readinessProbe.exec.command ([]string)\nCommand is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\n  readinessProbe.failureThreshold (integer)\nMinimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.\n  readinessProbe.httpGet (HTTPGetAction)\nHTTPGet specifies the http request to perform.\n  readinessProbe.httpGet.host (string)\nHost name to connect to, defaults to the pod IP. You probably want to set \u0026quot;Host\u0026quot; in httpHeaders instead.\n  readinessProbe.httpGet.httpHeaders ([]HTTPHeader)\nCustom headers to set in the request. HTTP allows repeated headers.\n  readinessProbe.httpGet.httpHeaders.name (string)\nThe header field name\n  readinessProbe.httpGet.httpHeaders.value (string)\nThe header field value\n  readinessProbe.httpGet.path (string)\nPath to access on the HTTP server.\n  readinessProbe.httpGet.port ()\nName or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\n  readinessProbe.httpGet.scheme (string)\nScheme to use for connecting to the host. Defaults to HTTP.\n  readinessProbe.initialDelaySeconds (integer)\nNumber of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n  readinessProbe.periodSeconds (integer)\nHow often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\n  readinessProbe.successThreshold (integer)\nMinimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\n  readinessProbe.tcpSocket (TCPSocketAction)\nTCPSocket specifies an action involving a TCP port. TCP hooks not yet supported\n  readinessProbe.tcpSocket.host (string)\nOptional: Host name to connect to, defaults to the pod IP.\n  readinessProbe.tcpSocket.port ()\nNumber or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\n  readinessProbe.timeoutSeconds (integer)\nNumber of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n    Security Context   securityContext (SecurityContext)\nSecurityContext is not allowed for ephemeral containers.\n  securityContext.allowPrivilegeEscalation (boolean)\nAllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN\n  securityContext.capabilities (Capabilities)\nThe capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.\n  securityContext.capabilities.add ([]string)\nAdded capabilities\n  securityContext.capabilities.drop ([]string)\nRemoved capabilities\n  securityContext.privileged (boolean)\nRun container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.\n  securityContext.procMount (string)\nprocMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.\n  securityContext.readOnlyRootFilesystem (boolean)\nWhether this container has a read-only root filesystem. Default is false.\n  securityContext.runAsGroup (integer)\nThe GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n  securityContext.runAsNonRoot (boolean)\nIndicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n  securityContext.runAsUser (integer)\nThe UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n  securityContext.seLinuxOptions (SELinuxOptions)\nThe SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n  securityContext.seLinuxOptions.level (string)\nLevel is SELinux level label that applies to the container.\n  securityContext.seLinuxOptions.role (string)\nRole is a SELinux role label that applies to the container.\n  securityContext.seLinuxOptions.type (string)\nType is a SELinux type label that applies to the container.\n  securityContext.seLinuxOptions.user (string)\nUser is a SELinux user label that applies to the container.\n  securityContext.windowsOptions (WindowsSecurityContextOptions)\nThe Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n  securityContext.windowsOptions.gmsaCredentialSpec (string)\nGMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.\n  securityContext.windowsOptions.gmsaCredentialSpecName (string)\nGMSACredentialSpecName is the name of the GMSA credential spec to use.\n  securityContext.windowsOptions.runAsUserName (string)\nThe UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\n    Debugging   stdin (boolean)\nWhether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.\n  stdinOnce (boolean)\nWhether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false\n  tty (boolean)\nWhether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.\n  Alpha level  startupProbe (Probe)\nProbes are not allowed for ephemeral containers.  ","description":"","id":13,"section":"docs","tags":null,"title":"EphemeralContainer (v1)","uri":"https://www.k8sref.io/docs/part1/ephemeralcontainer-v1/"},{"content":"Event (v1) Event core.v1.Event\nEvent is a report of an event somewhere in the cluster.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  Specs   type (string)\nType of this event (Normal, Warning), new types could be added in the future\n  reason (string)\nThis should be a short, machine understandable string that gives the reason for the transition into the object's current status.\n  eventTime (MicroTime)\nTime when this Event was first observed.\n  firstTimestamp (Time)\nThe time at which the event was first recorded. (Time of server receipt is in TypeMeta.)\n  lastTimestamp (Time)\nThe time at which the most recent occurrence of this event was recorded.\n  count (integer)\nThe number of times this event has occurred.\n  action (string)\nWhat action was taken/failed regarding to the Regarding object.\n  message (string)\nA human-readable description of the status of this operation.\n  involvedObject (ObjectReference)\nThe object that this event is about.\n  related (ObjectReference)\nOptional secondary object for more complex actions.\n  reportingComponent (string)\nName of the controller that emitted this Event, e.g. kubernetes.io/kubelet.\n  reportingInstance (string)\nID of the controller instance, e.g. kubelet-xyzf.\n  series (EventSeries)\nData about the Event series this event represents or nil if it's a singleton Event.\n  series.count (integer)\nNumber of occurrences in this series up to the last heartbeat time\n  series.lastObservedTime (MicroTime)\nTime of the last occurrence observed\n  series.state (string)\nState of this Series: Ongoing or Finished Deprecated. Planned removal for 1.18\n    source (EventSource)\nThe component reporting this event. Should be a short machine understandable string.\n  source.component (string)\nComponent from which the event is generated.\n  source.host (string)\nNode name on which the event is generated.\n    EventList core.v1.EventList\nEventList is a list of events.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]Event)\nList of events\n  ","description":"","id":14,"section":"docs","tags":null,"title":"Event (v1)","uri":"https://www.k8sref.io/docs/part4/event-v1/"},{"content":"ServiceAccount (v1) ServiceAccount core.v1.ServiceAccount\nServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  Specs   automountServiceAccountToken (boolean)\nAutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.\n  imagePullSecrets ([]LocalObjectReference)\nImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod\n imagePullSecrets.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names    secrets ([]ObjectReference)\nSecrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: https://kubernetes.io/docs/concepts/configuration/secret\n  ServiceAccountList core.v1.ServiceAccountList\nServiceAccountList is a list of ServiceAccount objects\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]ServiceAccount)\nList of ServiceAccounts. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ","description":"","id":15,"section":"docs","tags":null,"title":"ServiceAccount (v1)","uri":"https://www.k8sref.io/docs/part5/serviceaccount-v1/"},{"content":"Types FieldsV1 meta.v1.FieldsV1\nFieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:\u0026lt;name\u0026gt;', where \u0026lt;name\u0026gt; is the name of a field in a struct, or key in a map 'v:\u0026lt;value\u0026gt;', where \u0026lt;value\u0026gt; is the exact json formatted value of a list item 'i:\u0026lt;index\u0026gt;', where \u0026lt;index\u0026gt; is position of a item in a list 'k:\u0026lt;keys\u0026gt;', where \u0026lt;keys\u0026gt; is a map of a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\nJSON apiextensions.v1.JSON\nJSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.\nJSONSchemaPropsOrBool apiextensions.v1.JSONSchemaPropsOrBool\nJSONSchemaPropsOrBool represents JSONSchemaProps or a boolean value. Defaults to true for the boolean property.\nJSONSchemaPropsOrArray apiextensions.v1.JSONSchemaPropsOrArray\nJSONSchemaPropsOrArray represents a value that can either be a JSONSchemaProps or an array of JSONSchemaProps. Mainly here for serialization purposes.\nQuantity core.resource.Quantity\nQuantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\nThe serialization format is:\n\u0026lt;quantity\u0026gt; ::= \u0026lt;signedNumber\u0026gt;\u0026lt;suffix\u0026gt;\n(Note that \u0026lt;suffix\u0026gt; may be empty, from the \u0026quot;\u0026quot; case in \u0026lt;decimalSI\u0026gt;.)\n\u0026lt;digit\u0026gt; ::= 0 | 1 | \u0026hellip; | 9 \u0026lt;digits\u0026gt; ::= \u0026lt;digit\u0026gt; | \u0026lt;digit\u0026gt;\u0026lt;digits\u0026gt; \u0026lt;number\u0026gt; ::= \u0026lt;digits\u0026gt; | \u0026lt;digits\u0026gt;.\u0026lt;digits\u0026gt; | \u0026lt;digits\u0026gt;. | .\u0026lt;digits\u0026gt; \u0026lt;sign\u0026gt; ::= \u0026quot;+\u0026quot; | \u0026quot;-\u0026quot; \u0026lt;signedNumber\u0026gt; ::= \u0026lt;number\u0026gt; | \u0026lt;sign\u0026gt;\u0026lt;number\u0026gt; \u0026lt;suffix\u0026gt; ::= \u0026lt;binarySI\u0026gt; | \u0026lt;decimalExponent\u0026gt; | \u0026lt;decimalSI\u0026gt; \u0026lt;binarySI\u0026gt; ::= Ki | Mi | Gi | Ti | Pi | Ei\n(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\u0026lt;decimalSI\u0026gt; ::= m | \u0026quot;\u0026quot; | k | M | G | T | P | E\n(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\u0026lt;decimalExponent\u0026gt; ::= \u0026quot;e\u0026quot; \u0026lt;signedNumber\u0026gt; | \u0026quot;E\u0026quot; \u0026lt;signedNumber\u0026gt;\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\nBefore serializing, Quantity will be put in \u0026quot;canonical form\u0026quot;. This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\na. No precision is lost\nb. No fractional digits will be emitted\nc. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\nExamples:\n1.5 will be serialized as \u0026quot;1500m\u0026quot;\n1.5Gi will be serialized as \u0026quot;1536Mi\u0026quot;\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.\nMicroTime meta.v1.MicroTime\nMicroTime is version of Time with microsecond level precision.\nTime meta.v1.Time\nTime is a wrapper around time.Time which supports correct marshaling to YAML and JSON. Wrappers are provided for many of the factory methods that the time package offers.\nCustomResourceSubresourceStatus apiextensions.v1.CustomResourceSubresourceStatus\nCustomResourceSubresourceStatus defines how to serve the status subresource for CustomResources. Status is represented by the .status JSON path inside of a CustomResource. When set, * exposes a /status subresource for the custom resource * PUT requests to the /status subresource take a custom resource object, and ignore changes to anything except the status stanza * PUT/POST/PATCH requests to the custom resource ignore changes to the status stanza\n","description":"","id":16,"section":"docs","tags":null,"title":"Types","uri":"https://www.k8sref.io/docs/part6/types/"},{"content":"Volume (v1) Volume core.v1.Volume\nVolume represents a named volume in a pod that may be accessed by any container in the pod.\n name (string)\nVolume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names  Exposed Persistent volumes   persistentVolumeClaim (PersistentVolumeClaimVolumeSource)\nPersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n  persistentVolumeClaim.claimName (string)\nClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n  persistentVolumeClaim.readOnly (boolean)\nWill force the ReadOnly setting in VolumeMounts. Default false.\n    Projections   configMap (ConfigMapVolumeSource)\nConfigMap represents a configMap that should populate this volume\n  configMap.defaultMode (integer)\nOptional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.\n  configMap.items ([]KeyToPath)\nIf unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.\n  configMap.items.key (string)\nThe key to project.\n  configMap.items.mode (integer)\nOptional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.\n  configMap.items.path (string)\nThe relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.\n  configMap.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  configMap.optional (boolean)\nSpecify whether the ConfigMap or its keys must be defined\n    secret (SecretVolumeSource)\nSecret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n  secret.defaultMode (integer)\nOptional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.\n  secret.items ([]KeyToPath)\nIf unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.\n  secret.items.key (string)\nThe key to project.\n  secret.items.mode (integer)\nOptional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.\n  secret.items.path (string)\nThe relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.\n  secret.optional (boolean)\nSpecify whether the Secret or its keys must be defined\n  secret.secretName (string)\nName of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n    downwardAPI (DownwardAPIVolumeSource)\nDownwardAPI represents downward API about the pod that should populate this volume\n  downwardAPI.defaultMode (integer)\nOptional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.\n  downwardAPI.items ([]DownwardAPIVolumeFile)\nItems is a list of downward API volume file\n  downwardAPI.items.fieldRef (ObjectFieldSelector)\nRequired: Selects a field of the pod: only annotations, labels, name and namespace are supported.\n  downwardAPI.items.fieldRef.apiVersion (string)\nVersion of the schema the FieldPath is written in terms of, defaults to \u0026quot;v1\u0026quot;.\n  downwardAPI.items.fieldRef.fieldPath (string)\nPath of the field to select in the specified API version.\n  downwardAPI.items.mode (integer)\nOptional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.\n  downwardAPI.items.path (string)\nRequired: Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'\n  downwardAPI.items.resourceFieldRef (ResourceFieldSelector)\nSelects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.\n  downwardAPI.items.resourceFieldRef.containerName (string)\nContainer name: required for volumes, optional for env vars\n  downwardAPI.items.resourceFieldRef.divisor (Quantity)\nSpecifies the output format of the exposed resources, defaults to \u0026quot;1\u0026quot;\n  downwardAPI.items.resourceFieldRef.resource (string)\nRequired: resource to select\n    projected (ProjectedVolumeSource)\nItems for all in one resources secrets, configmaps, and downward API\n  projected.defaultMode (integer)\nMode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.\n  projected.sources ([]VolumeProjection)\nlist of volume projections\n  projected.sources.configMap (ConfigMapProjection)\ninformation about the configMap data to project\n  projected.sources.configMap.items ([]KeyToPath)\nIf unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.\n  projected.sources.configMap.items.key (string)\nThe key to project.\n  projected.sources.configMap.items.mode (integer)\nOptional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.\n  projected.sources.configMap.items.path (string)\nThe relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.\n  projected.sources.configMap.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  projected.sources.configMap.optional (boolean)\nSpecify whether the ConfigMap or its keys must be defined\n  projected.sources.downwardAPI (DownwardAPIProjection)\ninformation about the downwardAPI data to project\n  projected.sources.downwardAPI.items ([]DownwardAPIVolumeFile)\nItems is a list of DownwardAPIVolume file\n  projected.sources.downwardAPI.items.fieldRef (ObjectFieldSelector)\nRequired: Selects a field of the pod: only annotations, labels, name and namespace are supported.\n  projected.sources.downwardAPI.items.fieldRef.apiVersion (string)\nVersion of the schema the FieldPath is written in terms of, defaults to \u0026quot;v1\u0026quot;.\n  projected.sources.downwardAPI.items.fieldRef.fieldPath (string)\nPath of the field to select in the specified API version.\n  projected.sources.downwardAPI.items.mode (integer)\nOptional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.\n  projected.sources.downwardAPI.items.path (string)\nRequired: Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'\n  projected.sources.downwardAPI.items.resourceFieldRef (ResourceFieldSelector)\nSelects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.\n  projected.sources.downwardAPI.items.resourceFieldRef.containerName (string)\nContainer name: required for volumes, optional for env vars\n  projected.sources.downwardAPI.items.resourceFieldRef.divisor (Quantity)\nSpecifies the output format of the exposed resources, defaults to \u0026quot;1\u0026quot;\n  projected.sources.downwardAPI.items.resourceFieldRef.resource (string)\nRequired: resource to select\n  projected.sources.secret (SecretProjection)\ninformation about the secret data to project\n  projected.sources.secret.items ([]KeyToPath)\nIf unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.\n  projected.sources.secret.items.key (string)\nThe key to project.\n  projected.sources.secret.items.mode (integer)\nOptional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.\n  projected.sources.secret.items.path (string)\nThe relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.\n  projected.sources.secret.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  projected.sources.secret.optional (boolean)\nSpecify whether the Secret or its key must be defined\n  projected.sources.serviceAccountToken (ServiceAccountTokenProjection)\ninformation about the serviceAccountToken data to project\n  projected.sources.serviceAccountToken.audience (string)\nAudience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.\n  projected.sources.serviceAccountToken.expirationSeconds (integer)\nExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.\n  projected.sources.serviceAccountToken.path (string)\nPath is the path relative to the mount point of the file to project the token into.\n    Local / Temporary Directory   emptyDir (EmptyDirVolumeSource)\nEmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n  emptyDir.medium (string)\nWhat type of storage medium should back this directory. The default is \u0026quot;\u0026quot; which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n  emptyDir.sizeLimit (Quantity)\nTotal amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir\n    hostPath (HostPathVolumeSource)\nHostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n  hostPath.path (string)\nPath of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n  hostPath.type (string)\nType for HostPath Volume Defaults to \u0026quot;\u0026quot; More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n    Persistent volumes   awsElasticBlockStore (AWSElasticBlockStoreVolumeSource)\nAWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n  awsElasticBlockStore.fsType (string)\nFilesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n  awsElasticBlockStore.partition (integer)\nThe partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \u0026quot;1\u0026quot;. Similarly, the volume partition for /dev/sda is \u0026quot;0\u0026quot; (or you can leave the property empty).\n  awsElasticBlockStore.readOnly (boolean)\nSpecify \u0026quot;true\u0026quot; to force and set the ReadOnly property in VolumeMounts to \u0026quot;true\u0026quot;. If omitted, the default is \u0026quot;false\u0026quot;. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n  awsElasticBlockStore.volumeID (string)\nUnique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n    azureDisk (AzureDiskVolumeSource)\nAzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.\n  azureDisk.cachingMode (string)\nHost Caching mode: None, Read Only, Read Write.\n  azureDisk.diskName (string)\nThe Name of the data disk in the blob storage\n  azureDisk.diskURI (string)\nThe URI the data disk in the blob storage\n  azureDisk.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified.\n  azureDisk.kind (string)\nExpected values Shared: multiple blob disks per storage account Dedicated: single blob disk per storage account Managed: azure managed data disk (only in managed availability set). defaults to shared\n  azureDisk.readOnly (boolean)\nDefaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n    azureFile (AzureFileVolumeSource)\nAzureFile represents an Azure File Service mount on the host and bind mount to the pod.\n  azureFile.readOnly (boolean)\nDefaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n  azureFile.secretName (string)\nthe name of secret that contains Azure Storage Account Name and Key\n  azureFile.shareName (string)\nShare Name\n    cephfs (CephFSVolumeSource)\nCephFS represents a Ceph FS mount on the host that shares a pod's lifetime\n  cephfs.monitors ([]string)\nRequired: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n  cephfs.path (string)\nOptional: Used as the mounted root, rather than the full Ceph tree, default is /\n  cephfs.readOnly (boolean)\nOptional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n  cephfs.secretFile (string)\nOptional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n  cephfs.secretRef (LocalObjectReference)\nOptional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n  cephfs.secretRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  cephfs.user (string)\nOptional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n    cinder (CinderVolumeSource)\nCinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md\n  cinder.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md\n  cinder.readOnly (boolean)\nOptional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md\n  cinder.secretRef (LocalObjectReference)\nOptional: points to a secret object containing parameters used to connect to OpenStack.\n  cinder.secretRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  cinder.volumeID (string)\nvolume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md\n    csi (CSIVolumeSource)\nCSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).\n  csi.driver (string)\nDriver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.\n  csi.fsType (string)\nFilesystem type to mount. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.\n  csi.nodePublishSecretRef (LocalObjectReference)\nNodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.\n  csi.nodePublishSecretRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  csi.readOnly (boolean)\nSpecifies a read-only configuration for the volume. Defaults to false (read/write).\n  csi.volumeAttributes (object)\nVolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.\n    fc (FCVolumeSource)\nFC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.\n  fc.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified.\n  fc.lun (integer)\nOptional: FC target lun number\n  fc.readOnly (boolean)\nOptional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n  fc.targetWWNs ([]string)\nOptional: FC target worldwide names (WWNs)\n  fc.wwids ([]string)\nOptional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.\n    flexVolume (FlexVolumeSource)\nFlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.\n  flexVolume.driver (string)\nDriver is the name of the driver to use for this volume.\n  flexVolume.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. The default filesystem depends on FlexVolume script.\n  flexVolume.options (object)\nOptional: Extra command options if any.\n  flexVolume.readOnly (boolean)\nOptional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n  flexVolume.secretRef (LocalObjectReference)\nOptional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.\n  flexVolume.secretRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n    flocker (FlockerVolumeSource)\nFlocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running\n  flocker.datasetName (string)\nName of the dataset stored as metadata -\u0026gt; name on the dataset for Flocker should be considered as deprecated\n  flocker.datasetUUID (string)\nUUID of the dataset. This is unique identifier of a Flocker dataset\n    gcePersistentDisk (GCEPersistentDiskVolumeSource)\nGCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n  gcePersistentDisk.fsType (string)\nFilesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n  gcePersistentDisk.partition (integer)\nThe partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \u0026quot;1\u0026quot;. Similarly, the volume partition for /dev/sda is \u0026quot;0\u0026quot; (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n  gcePersistentDisk.pdName (string)\nUnique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n  gcePersistentDisk.readOnly (boolean)\nReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n    glusterfs (GlusterfsVolumeSource)\nGlusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md\n  glusterfs.endpoints (string)\nEndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod\n  glusterfs.path (string)\nPath is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod\n  glusterfs.readOnly (boolean)\nReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod\n    iscsi (ISCSIVolumeSource)\nISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md\n  iscsi.chapAuthDiscovery (boolean)\nwhether support iSCSI Discovery CHAP authentication\n  iscsi.chapAuthSession (boolean)\nwhether support iSCSI Session CHAP authentication\n  iscsi.fsType (string)\nFilesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\n  iscsi.initiatorName (string)\nCustom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface \u0026lt;target portal\u0026gt;:\u0026lt;volume name\u0026gt; will be created for the connection.\n  iscsi.iqn (string)\nTarget iSCSI Qualified Name.\n  iscsi.iscsiInterface (string)\niSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).\n  iscsi.lun (integer)\niSCSI Target Lun number.\n  iscsi.portals ([]string)\niSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).\n  iscsi.readOnly (boolean)\nReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.\n  iscsi.secretRef (LocalObjectReference)\nCHAP Secret for iSCSI target and initiator authentication\n  iscsi.secretRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  iscsi.targetPortal (string)\niSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).\n    nfs (NFSVolumeSource)\nNFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n  nfs.path (string)\nPath that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n  nfs.readOnly (boolean)\nReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n  nfs.server (string)\nServer is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n    photonPersistentDisk (PhotonPersistentDiskVolumeSource)\nPhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine\n  photonPersistentDisk.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified.\n  photonPersistentDisk.pdID (string)\nID that identifies Photon Controller persistent disk\n    portworxVolume (PortworxVolumeSource)\nPortworxVolume represents a portworx volume attached and mounted on kubelets host machine\n  portworxVolume.fsType (string)\nFSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified.\n  portworxVolume.readOnly (boolean)\nDefaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n  portworxVolume.volumeID (string)\nVolumeID uniquely identifies a Portworx volume\n    quobyte (QuobyteVolumeSource)\nQuobyte represents a Quobyte mount on the host that shares a pod's lifetime\n  quobyte.group (string)\nGroup to map volume access to Default is no group\n  quobyte.readOnly (boolean)\nReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.\n  quobyte.registry (string)\nRegistry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes\n  quobyte.tenant (string)\nTenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin\n  quobyte.user (string)\nUser to map volume access to Defaults to serivceaccount user\n  quobyte.volume (string)\nVolume is a string that references an already created Quobyte volume by name.\n    rbd (RBDVolumeSource)\nRBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md\n  rbd.fsType (string)\nFilesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\n  rbd.image (string)\nThe rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n  rbd.keyring (string)\nKeyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n  rbd.monitors ([]string)\nA collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n  rbd.pool (string)\nThe rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n  rbd.readOnly (boolean)\nReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n  rbd.secretRef (LocalObjectReference)\nSecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n  rbd.secretRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  rbd.user (string)\nThe rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n    scaleIO (ScaleIOVolumeSource)\nScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.\n  scaleIO.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Default is \u0026quot;xfs\u0026quot;.\n  scaleIO.gateway (string)\nThe host address of the ScaleIO API Gateway.\n  scaleIO.protectionDomain (string)\nThe name of the ScaleIO Protection Domain for the configured storage.\n  scaleIO.readOnly (boolean)\nDefaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n  scaleIO.secretRef (LocalObjectReference)\nSecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.\n  scaleIO.secretRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  scaleIO.sslEnabled (boolean)\nFlag to enable/disable SSL communication with Gateway, default false\n  scaleIO.storageMode (string)\nIndicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.\n  scaleIO.storagePool (string)\nThe ScaleIO Storage Pool associated with the protection domain.\n  scaleIO.system (string)\nThe name of the storage system as configured in ScaleIO.\n  scaleIO.volumeName (string)\nThe name of a volume already created in the ScaleIO system that is associated with this volume source.\n    storageos (StorageOSVolumeSource)\nStorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.\n  storageos.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified.\n  storageos.readOnly (boolean)\nDefaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n  storageos.secretRef (LocalObjectReference)\nSecretRef specifies the secret to use for obtaining the StorageOS API credentials. If not specified, default values will be attempted.\n  storageos.secretRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  storageos.volumeName (string)\nVolumeName is the human-readable name of the StorageOS volume. Volume names are only unique within a namespace.\n  storageos.volumeNamespace (string)\nVolumeNamespace specifies the scope of the volume within StorageOS. If no namespace is specified then the Pod's namespace will be used. This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \u0026quot;default\u0026quot; if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.\n    vsphereVolume (VsphereVirtualDiskVolumeSource)\nVsphereVolume represents a vSphere volume attached and mounted on kubelets host machine\n  vsphereVolume.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified.\n  vsphereVolume.storagePolicyID (string)\nStorage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.\n  vsphereVolume.storagePolicyName (string)\nStorage Policy Based Management (SPBM) profile name.\n  vsphereVolume.volumePath (string)\nPath that identifies vSphere volume vmdk\n    Deprecated   gitRepo (GitRepoVolumeSource)\nGitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.\n  gitRepo.directory (string)\nTarget directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.\n  gitRepo.repository (string)\nRepository URL\n  gitRepo.revision (string)\nCommit hash for the specified revision.\n    ","description":"","id":17,"section":"docs","tags":null,"title":"Volume (v1)","uri":"https://www.k8sref.io/docs/part3/volume-v1/"},{"content":"ClusterRole (v1) ClusterRole rbac.v1.ClusterRole\nClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata.\n  Specs   rules ([]PolicyRule)\nRules holds all the PolicyRules for this ClusterRole\n  rules.apiGroups ([]string)\nAPIGroups is the name of the APIGroup that contains the resources. If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.\n  rules.nonResourceURLs ([]string)\nNonResourceURLs is a set of partial urls that a user should have access to. *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \u0026quot;pods\u0026quot; or \u0026quot;secrets\u0026quot;) or non-resource URL paths (such as \u0026quot;/api\u0026quot;), but not both.\n  rules.resourceNames ([]string)\nResourceNames is an optional white list of names that the rule applies to. An empty set means that everything is allowed.\n  rules.resources ([]string)\nResources is a list of resources this rule applies to. ResourceAll represents all resources.\n  rules.verbs ([]string)\nVerbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule. VerbAll represents all kinds.\n    aggregationRule (AggregationRule)\nAggregationRule is an optional field that describes how to build the Rules for this ClusterRole. If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller.\n  aggregationRule.clusterRoleSelectors ([]LabelSelector)\nClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added\n  aggregationRule.clusterRoleSelectors.matchExpressions ([]LabelSelectorRequirement)\nmatchExpressions is a list of label selector requirements. The requirements are ANDed.\n  aggregationRule.clusterRoleSelectors.matchExpressions.key (string)\nkey is the label key that the selector applies to.\n  aggregationRule.clusterRoleSelectors.matchExpressions.operator (string)\noperator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\n  aggregationRule.clusterRoleSelectors.matchExpressions.values ([]string)\nvalues is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\n  aggregationRule.clusterRoleSelectors.matchLabels (object)\nmatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u0026quot;key\u0026quot;, the operator is \u0026quot;In\u0026quot;, and the values array contains only \u0026quot;value\u0026quot;. The requirements are ANDed.\n    ClusterRoleList rbac.v1.ClusterRoleList\nClusterRoleList is a collection of ClusterRoles\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard object's metadata.\n  items ([]ClusterRole)\nItems is a list of ClusterRoles\n  ","description":"","id":18,"section":"docs","tags":null,"title":"ClusterRole (v1)","uri":"https://www.k8sref.io/docs/part5/clusterrole-v1/"},{"content":"Ingress (v1beta1) Ingress networking.v1beta1.Ingress\nIngress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (IngressSpec)\nSpec is the desired state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  status (IngressStatus)\nStatus is the current state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  IngressSpec networking.v1beta1.IngressSpec\nIngressSpec describes the Ingress the user wishes to exist.\n  backend (IngressBackend)\nA default backend capable of servicing requests that don't match any rule. At least one of 'backend' or 'rules' must be specified. This field is optional to allow the loadbalancer controller or defaulting logic to specify a global default.\n  backend.resource (TypedLocalObjectReference)\nResource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, serviceName and servicePort must not be specified.\n  backend.serviceName (string)\nSpecifies the name of the referenced service.\n  backend.servicePort ()\nSpecifies the port of the referenced service.\n    rules ([]IngressRule)\nA list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.\n  rules.host (string)\nHost is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \u0026quot;host\u0026quot; part of the URI as defined in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to\nthe IP in the Spec of the parent Ingress.\n2. The : delimiter is not respected because ports are not allowed.\nCurrently the port of an Ingress is implicitly :80 for http and\n:443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.\nHost can be \u0026quot;precise\u0026quot; which is a domain name without the terminating dot of a network host (e.g. \u0026quot;foo.bar.com\u0026quot;) or \u0026quot;wildcard\u0026quot;, which is a domain name prefixed with a single wildcard label (e.g. \u0026quot;.foo.com\u0026quot;). The wildcard character '*' must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label by itself (e.g. Host == \u0026quot;\u0026quot;). Requests will be matched against the Host field in the following way: 1. If Host is precise, the request matches this rule if the http host header is equal to Host. 2. If Host is a wildcard, then the request matches this rule if the http host header is to equal to the suffix (removing the first label) of the wildcard rule.\n  rules.http (HTTPIngressRuleValue)\n  rules.http.paths ([]HTTPIngressPath)\nA collection of paths that map requests to backends.\n  rules.http.paths.backend (IngressBackend)\nBackend defines the referenced service endpoint to which the traffic will be forwarded to.\n  rules.http.paths.backend.resource (TypedLocalObjectReference)\nResource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, serviceName and servicePort must not be specified.\n  rules.http.paths.backend.serviceName (string)\nSpecifies the name of the referenced service.\n  rules.http.paths.backend.servicePort ()\nSpecifies the port of the referenced service.\n  rules.http.paths.path (string)\nPath is matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \u0026quot;path\u0026quot; part of a URL as defined by RFC 3986. Paths must begin with a '/'. When unspecified, all paths from incoming requests are matched.\n  rules.http.paths.pathType (string)\nPathType determines the interpretation of the Path matching. PathType can be one of the following values: * Exact: Matches the URL path exactly. * Prefix: Matches based on a URL path prefix split by '/'. Matching is\ndone on a path element by element basis. A path element refers is the\nlist of labels in the path split by the '/' separator. A request is a\nmatch for path p if every p is an element-wise prefix of p of the\nrequest path. Note that if the last element of the path is a substring\nof the last element in request path, it is not a match (e.g. /foo/bar\nmatches /foo/bar/baz, but does not match /foo/barbaz).\n ImplementationSpecific: Interpretation of the Path matching is up to\nthe IngressClass. Implementations can treat this as a separate PathType\nor treat it identically to Prefix or Exact path types.\nImplementations are required to support all path types. Defaults to ImplementationSpecific.      tls ([]IngressTLS)\nTLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.\n  tls.hosts ([]string)\nHosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.\n  tls.secretName (string)\nSecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \u0026quot;Host\u0026quot; header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.\n    ingressClassName (string)\nIngressClassName is the name of the IngressClass cluster resource. The associated IngressClass defines which controller will implement the resource. This replaces the deprecated kubernetes.io/ingress.class annotation. For backwards compatibility, when that annotation is set, it must be given precedence over this field. The controller may emit a warning if the field and annotation have different values. Implementations of this API should ignore Ingresses without a class specified. An IngressClass resource may be marked as default, which can be used to set a default value for this field. For more information, refer to the IngressClass documentation.\n  IngressStatus networking.v1beta1.IngressStatus\nIngressStatus describe the current state of the Ingress.\n  loadBalancer (LoadBalancerStatus)\nLoadBalancer contains the current status of the load-balancer.\n  loadBalancer.ingress ([]LoadBalancerIngress)\nIngress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.\n  loadBalancer.ingress.hostname (string)\nHostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)\n  loadBalancer.ingress.ip (string)\nIP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)\n    IngressList networking.v1beta1.IngressList\nIngressList is a collection of Ingress.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]Ingress)\nItems is the list of Ingress.\n  ","description":"","id":19,"section":"docs","tags":null,"title":"Ingress (v1beta1)","uri":"https://www.k8sref.io/docs/part2/ingress-v1beta1/"},{"content":"LimitRange (v1) LimitRange core.v1.LimitRange\nLimitRange sets resource usage limits for each kind of resource in a Namespace.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (LimitRangeSpec)\nSpec defines the limits enforced. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  LimitRangeSpec core.v1.LimitRangeSpec\nLimitRangeSpec defines a min/max usage limit for resources that match on kind.\n  limits ([]LimitRangeItem)\nLimits is the list of LimitRangeItem objects that are enforced.\n  limits.default (object)\nDefault resource requirement limit value by resource name if resource limit is omitted.\n  limits.defaultRequest (object)\nDefaultRequest is the default resource requirement request value by resource name if resource request is omitted.\n  limits.max (object)\nMax usage constraints on this kind by resource name.\n  limits.maxLimitRequestRatio (object)\nMaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.\n  limits.min (object)\nMin usage constraints on this kind by resource name.\n  limits.type (string)\nType of resource that this limit applies to.\n    LimitRangeList core.v1.LimitRangeList\nLimitRangeList is a list of LimitRange items.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]LimitRange)\nItems is a list of LimitRange objects. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n  ","description":"","id":20,"section":"docs","tags":null,"title":"LimitRange (v1)","uri":"https://www.k8sref.io/docs/part4/limitrange-v1/"},{"content":"PersistentVolumeClaim (v1) PersistentVolumeClaim core.v1.PersistentVolumeClaim\nPersistentVolumeClaim is a user's request for and claim to a persistent volume\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (PersistentVolumeClaimSpec)\nSpec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n  status (PersistentVolumeClaimStatus)\nStatus represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n  PersistentVolumeClaimSpec core.v1.PersistentVolumeClaimSpec\nPersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes\nSelection   accessModes ([]string)\nAccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\n  selector (LabelSelector)\nA label query over volumes to consider for binding.\n  resources (ResourceRequirements)\nResources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources\n  resources.limits (object)\nLimits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n  resources.requests (object)\nRequests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n    volumeName (string)\nVolumeName is the binding reference to the PersistentVolume backing this claim.\n  storageClassName (string)\nName of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\n  volumeMode (string)\nvolumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.\n  Alpha level  dataSource (TypedLocalObjectReference)\nThis field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.  PersistentVolumeClaimStatus core.v1.PersistentVolumeClaimStatus\nPersistentVolumeClaimStatus is the current status of a persistent volume claim.\n  phase (string)\nPhase represents the current phase of PersistentVolumeClaim.\n  accessModes ([]string)\nAccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\n  capacity (object)\nRepresents the actual resources of the underlying volume.\n  conditions ([]PersistentVolumeClaimCondition)\nCurrent Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.\n  conditions.lastProbeTime (Time)\nLast time we probed the condition.\n  conditions.lastTransitionTime (Time)\nLast time the condition transitioned from one status to another.\n  conditions.message (string)\nHuman-readable message indicating details about last transition.\n  conditions.reason (string)\nUnique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \u0026quot;ResizeStarted\u0026quot; that means the underlying persistent volume is being resized.\n  conditions.status (string)\n  conditions.type (string)\n    PersistentVolumeClaimList core.v1.PersistentVolumeClaimList\nPersistentVolumeClaimList is a list of PersistentVolumeClaim items.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]PersistentVolumeClaim)\nA list of persistent volume claims. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n  ","description":"","id":21,"section":"docs","tags":null,"title":"PersistentVolumeClaim (v1)","uri":"https://www.k8sref.io/docs/part3/persistentvolumeclaim-v1/"},{"content":"References and Selectors BoundObjectReference authentication.v1.BoundObjectReference\nBoundObjectReference is a reference to an object that a token is bound to.\n  apiVersion (string)\nAPI version of the referent.\n  kind (string)\nKind of the referent. Valid kinds are 'Pod' and 'Secret'.\n  name (string)\nName of the referent.\n  uid (string)\nUID of the referent.\n  ObjectReference core.v1.ObjectReference\nObjectReference contains enough information to let you inspect or modify the referred object.\n  apiVersion (string)\nAPI version of the referent.\n  fieldPath (string)\nIf referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \u0026quot;spec.containers{name}\u0026quot; (where \u0026quot;name\u0026quot; refers to the name of the container that triggered the event) or if no container name is specified \u0026quot;spec.containers[2]\u0026quot; (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.\n  kind (string)\nKind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  namespace (string)\nNamespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n  resourceVersion (string)\nSpecific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n  uid (string)\nUID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n  TypedLocalObjectReference core.v1.TypedLocalObjectReference\nTypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.\n  apiGroup (string)\nAPIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.\n  kind (string)\nKind is the type of resource being referenced\n  name (string)\nName is the name of resource being referenced\n  ServiceReference apiextensions.v1.ServiceReference\nServiceReference holds a reference to Service.legacy.k8s.io\n  name (string)\nname is the name of the service. Required\n  namespace (string)\nnamespace is the namespace of the service. Required\n  path (string)\npath is an optional URL path at which the webhook will be contacted.\n  port (integer)\nport is an optional service port at which the webhook will be contacted. port should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.\n  ServiceReference admissionregistration.v1.ServiceReference\nServiceReference holds a reference to Service.legacy.k8s.io\n  name (string)\nname is the name of the service. Required\n  namespace (string)\nnamespace is the namespace of the service. Required\n  path (string)\npath is an optional URL path which will be sent in any request to this service.\n  port (integer)\nIf specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. port should be a valid port number (1-65535, inclusive).\n  ServiceReference apiregistration.v1.ServiceReference\nServiceReference holds a reference to Service.legacy.k8s.io\n  name (string)\nName is the name of the service\n  namespace (string)\nNamespace is the namespace of the service\n  port (integer)\nIf specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. port should be a valid port number (1-65535, inclusive).\n  ServiceReference auditregistration.v1alpha1.ServiceReference\nServiceReference holds a reference to Service.legacy.k8s.io\n  name (string)\nname is the name of the service. Required\n  namespace (string)\nnamespace is the namespace of the service. Required\n  path (string)\npath is an optional URL path which will be sent in any request to this service.\n  port (integer)\nIf specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. port should be a valid port number (1-65535, inclusive).\n  LabelSelector meta.v1.LabelSelector\nA label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.\n  matchExpressions ([]LabelSelectorRequirement)\nmatchExpressions is a list of label selector requirements. The requirements are ANDed.\n  matchExpressions.key (string)\nkey is the label key that the selector applies to.\n  matchExpressions.operator (string)\noperator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\n  matchExpressions.values ([]string)\nvalues is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\n    matchLabels (object)\nmatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \u0026quot;key\u0026quot;, the operator is \u0026quot;In\u0026quot;, and the values array contains only \u0026quot;value\u0026quot;. The requirements are ANDed.\n  ","description":"","id":22,"section":"docs","tags":null,"title":"References and Selectors","uri":"https://www.k8sref.io/docs/part6/references-and-selectors/"},{"content":"ReplicaSet (v1) ReplicaSet apps.v1.ReplicaSet\nReplicaSet ensures that a specified number of pod replicas are running at any given time.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nIf the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s) that the ReplicaSet manages. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (ReplicaSetSpec)\nSpec defines the specification of the desired behavior of the ReplicaSet. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  status (ReplicaSetStatus)\nStatus is the most recently observed status of the ReplicaSet. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  ReplicaSetSpec apps.v1.ReplicaSetSpec\nReplicaSetSpec is the specification of a ReplicaSet.\n  replicas (integer)\nReplicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller\n  selector (LabelSelector)\nSelector is a label query over pods that should match the replica count. Label keys and values that must match in order to be controlled by this replica set. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\n  template (PodTemplateSpec)\nTemplate is the object that describes the pod that will be created if insufficient replicas are detected. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template\n  minReadySeconds (integer)\nMinimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)\n  ReplicaSetStatus apps.v1.ReplicaSetStatus\nReplicaSetStatus represents the current status of a ReplicaSet.\n  replicas (integer)\nReplicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller\n  availableReplicas (integer)\nThe number of available replicas (ready for at least minReadySeconds) for this replica set.\n  readyReplicas (integer)\nThe number of ready replicas for this replica set.\n  fullyLabeledReplicas (integer)\nThe number of pods that have labels matching the labels of the pod template of the replicaset.\n  conditions ([]ReplicaSetCondition)\nRepresents the latest available observations of a replica set's current state.\n  conditions.lastTransitionTime (Time)\nThe last time the condition transitioned from one status to another.\n  conditions.message (string)\nA human readable message indicating details about the transition.\n  conditions.reason (string)\nThe reason for the condition's last transition.\n  conditions.status (string)\nStatus of the condition, one of True, False, Unknown.\n  conditions.type (string)\nType of replica set condition.\n    observedGeneration (integer)\nObservedGeneration reflects the generation of the most recently observed ReplicaSet.\n  ReplicaSetList apps.v1.ReplicaSetList\nReplicaSetList is a collection of ReplicaSets.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]ReplicaSet)\nList of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller\n  ","description":"","id":23,"section":"docs","tags":null,"title":"ReplicaSet (v1)","uri":"https://www.k8sref.io/docs/part1/replicaset-v1/"},{"content":"ClusterRoleBinding (v1) ClusterRoleBinding rbac.v1.ClusterRoleBinding\nClusterRoleBinding references a ClusterRole, but not contain it. It can reference a ClusterRole in the global namespace, and adds who information via Subject.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata.\n  Specs   roleRef (RoleRef)\nRoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.\n  roleRef.apiGroup (string)\nAPIGroup is the group for the resource being referenced\n  roleRef.kind (string)\nKind is the type of resource being referenced\n  roleRef.name (string)\nName is the name of resource being referenced\n    subjects ([]Subject)\nSubjects holds references to the objects the role applies to.\n  subjects.apiGroup (string)\nAPIGroup holds the API group of the referenced subject. Defaults to \u0026quot;\u0026quot; for ServiceAccount subjects. Defaults to \u0026quot;rbac.authorization.k8s.io\u0026quot; for User and Group subjects.\n  subjects.kind (string)\nKind of object being referenced. Values defined by this API group are \u0026quot;User\u0026quot;, \u0026quot;Group\u0026quot;, and \u0026quot;ServiceAccount\u0026quot;. If the Authorizer does not recognized the kind value, the Authorizer should report an error.\n  subjects.name (string)\nName of the object being referenced.\n  subjects.namespace (string)\nNamespace of the referenced object. If the object kind is non-namespace, such as \u0026quot;User\u0026quot; or \u0026quot;Group\u0026quot;, and this value is not empty the Authorizer should report an error.\n    ClusterRoleBindingList rbac.v1.ClusterRoleBindingList\nClusterRoleBindingList is a collection of ClusterRoleBindings\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard object's metadata.\n  items ([]ClusterRoleBinding)\nItems is a list of ClusterRoleBindings\n  ","description":"","id":24,"section":"docs","tags":null,"title":"ClusterRoleBinding (v1)","uri":"https://www.k8sref.io/docs/part5/clusterrolebinding-v1/"},{"content":"Deployment (v1) Deployment apps.v1.Deployment\nDeployment enables declarative updates for Pods and ReplicaSets.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object metadata.\n  spec (DeploymentSpec)\nSpecification of the desired behavior of the Deployment.\n  status (DeploymentStatus)\nMost recently observed status of the Deployment.\n  DeploymentSpec apps.v1.DeploymentSpec\nDeploymentSpec is the specification of the desired behavior of the Deployment.\nReplicas   replicas (integer)\nNumber of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.\n  selector (LabelSelector)\nLabel selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template's labels.\n  template (PodTemplateSpec)\nTemplate describes the pods that will be created.\n  minReadySeconds (integer)\nMinimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)\n  Rollout   strategy (DeploymentStrategy)\nThe deployment strategy to use to replace existing pods with new ones.\n  strategy.rollingUpdate (RollingUpdateDeployment)\nRolling update config params. Present only if DeploymentStrategyType = RollingUpdate.\n  strategy.rollingUpdate.maxSurge ()\nThe maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods.\n  strategy.rollingUpdate.maxUnavailable ()\nThe maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.\n  strategy.type (string)\nType of deployment. Can be \u0026quot;Recreate\u0026quot; or \u0026quot;RollingUpdate\u0026quot;. Default is RollingUpdate.\n    revisionHistoryLimit (integer)\nThe number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.\n  progressDeadlineSeconds (integer)\nThe maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.\n  paused (boolean)\nIndicates that the deployment is paused.\n  DeploymentStatus apps.v1.DeploymentStatus\nDeploymentStatus is the most recently observed status of the Deployment.\n  replicas (integer)\nTotal number of non-terminated pods targeted by this deployment (their labels match the selector).\n  availableReplicas (integer)\nTotal number of available pods (ready for at least minReadySeconds) targeted by this deployment.\n  readyReplicas (integer)\nTotal number of ready pods targeted by this deployment.\n  unavailableReplicas (integer)\nTotal number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.\n  updatedReplicas (integer)\nTotal number of non-terminated pods targeted by this deployment that have the desired template spec.\n  collisionCount (integer)\nCount of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.\n  conditions ([]DeploymentCondition)\nRepresents the latest available observations of a deployment's current state.\n  conditions.lastTransitionTime (Time)\nLast time the condition transitioned from one status to another.\n  conditions.lastUpdateTime (Time)\nThe last time this condition was updated.\n  conditions.message (string)\nA human readable message indicating details about the transition.\n  conditions.reason (string)\nThe reason for the condition's last transition.\n  conditions.status (string)\nStatus of the condition, one of True, False, Unknown.\n  conditions.type (string)\nType of deployment condition.\n    observedGeneration (integer)\nThe generation observed by the deployment controller.\n  DeploymentList apps.v1.DeploymentList\nDeploymentList is a list of Deployments.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata.\n  items ([]Deployment)\nItems is the list of Deployments.\n  ","description":"","id":25,"section":"docs","tags":null,"title":"Deployment (v1)","uri":"https://www.k8sref.io/docs/part1/deployment-v1/"},{"content":"HorizontalPodAutoscaler (v1) HorizontalPodAutoscaler autoscaling.v1.HorizontalPodAutoscaler\nconfiguration of a horizontal pod autoscaler.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (HorizontalPodAutoscalerSpec)\nbehaviour of autoscaler. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.\n  status (HorizontalPodAutoscalerStatus)\ncurrent information about the autoscaler.\n  HorizontalPodAutoscalerSpec autoscaling.v1.HorizontalPodAutoscalerSpec\nspecification of a horizontal pod autoscaler.\n  minReplicas (integer)\nminReplicas is the lower limit for the number of replicas to which the autoscaler can scale down. It defaults to 1 pod. minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured. Scaling is active as long as at least one metric value is available.\n  maxReplicas (integer)\nupper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.\n  scaleTargetRef (CrossVersionObjectReference)\nreference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.\n  scaleTargetRef.apiVersion (string)\nAPI version of the referent\n  scaleTargetRef.kind (string)\nKind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\u0026amp;#34;\n  scaleTargetRef.name (string)\nName of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names\n    targetCPUUtilizationPercentage (integer)\ntarget average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.\n  HorizontalPodAutoscalerStatus autoscaling.v1.HorizontalPodAutoscalerStatus\ncurrent status of a horizontal pod autoscaler\n  desiredReplicas (integer)\ndesired number of replicas of pods managed by this autoscaler.\n  currentReplicas (integer)\ncurrent number of replicas of pods managed by this autoscaler.\n  currentCPUUtilizationPercentage (integer)\ncurrent average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU.\n  lastScaleTime (Time)\nlast time the HorizontalPodAutoscaler scaled the number of pods; used by the autoscaler to control how often the number of pods is changed.\n  observedGeneration (integer)\nmost recent generation observed by this autoscaler.\n  HorizontalPodAutoscalerList autoscaling.v1.HorizontalPodAutoscalerList\nlist of horizontal pod autoscaler objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata.\n  items ([]HorizontalPodAutoscaler)\nlist of horizontal pod autoscaler objects.\n  ","description":"","id":26,"section":"docs","tags":null,"title":"HorizontalPodAutoscaler (v1)","uri":"https://www.k8sref.io/docs/part4/horizontalpodautoscaler-v1/"},{"content":"IngressClass (v1beta1) IngressClass networking.v1beta1.IngressClass\nIngressClass represents the class of the Ingress, referenced by the Ingress Spec. The ingressclass.kubernetes.io/is-default-class annotation can be used to indicate that an IngressClass should be considered default. When a single IngressClass resource has this annotation set to true, new Ingress resources without a class specified will be assigned this default class.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (IngressClassSpec)\nSpec is the desired state of the IngressClass. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  IngressClassSpec networking.v1beta1.IngressClassSpec\nIngressClassSpec provides information about the class of an Ingress.\n  controller (string)\nController refers to the name of the controller that should handle this class. This allows for different \u0026quot;flavors\u0026quot; that are controlled by the same controller. For example, you may have different Parameters for the same implementing controller. This should be specified as a domain-prefixed path no more than 250 characters in length, e.g. \u0026quot;acme.io/ingress-controller\u0026quot;. This field is immutable.\n  parameters (TypedLocalObjectReference)\nParameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters.\n  IngressClassList networking.v1beta1.IngressClassList\nIngressClassList is a collection of IngressClasses.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata.\n  items ([]IngressClass)\nItems is the list of IngressClasses.\n  ","description":"","id":27,"section":"docs","tags":null,"title":"IngressClass (v1beta1)","uri":"https://www.k8sref.io/docs/part2/ingressclass-v1beta1/"},{"content":"Meta ObjectMeta meta.v1.ObjectMeta\nObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\n  name (string)\nName must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\n  namespace (string)\nNamespace defines the space within each name must be unique. An empty namespace is equivalent to the \u0026quot;default\u0026quot; namespace, but \u0026quot;default\u0026quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\n  labels (object)\nMap of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\n  annotations (object)\nAnnotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\n  generateName (string)\nGenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n  clusterName (string)\nThe name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n  creationTimestamp (Time)\nCreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  deletionGracePeriodSeconds (integer)\nNumber of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\n  deletionTimestamp (Time)\nDeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  finalizers ([]string)\nMust be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order. Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\n  generation (integer)\nA sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\n  managedFields ([]ManagedFieldsEntry)\nManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \u0026quot;ci-cd\u0026quot;. The set of fields is always in the version that the workflow used when modifying the object.\n  managedFields.apiVersion (string)\nAPIVersion defines the version of this resource that this field set applies to. The format is \u0026quot;group/version\u0026quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.\n  managedFields.fieldsType (string)\nFieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \u0026quot;FieldsV1\u0026quot;\n  managedFields.fieldsV1 (FieldsV1)\nFieldsV1 holds the first JSON version format as described in the \u0026quot;FieldsV1\u0026quot; type.\n  managedFields.manager (string)\nManager is an identifier of the workflow managing these fields.\n  managedFields.operation (string)\nOperation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.\n  managedFields.time (Time)\nTime is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'\n    ownerReferences ([]OwnerReference)\nList of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\n  ownerReferences.apiVersion (string)\nAPI version of the referent.\n  ownerReferences.blockOwnerDeletion (boolean)\nIf true, AND if the owner has the \u0026quot;foregroundDeletion\u0026quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \u0026quot;delete\u0026quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.\n  ownerReferences.controller (boolean)\nIf true, this reference points to the managing controller.\n  ownerReferences.kind (string)\nKind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  ownerReferences.name (string)\nName of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names\n  ownerReferences.uid (string)\nUID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\n    resourceVersion (string)\nAn opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n  selfLink (string)\nSelfLink is a URL representing this object. Populated by the system. Read-only.\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\n  uid (string)\nUID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\n  ListMeta meta.v1.ListMeta\nListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.\n  continue (string)\ncontinue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.\n  remainingItemCount (integer)\nremainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is estimating the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.\n  resourceVersion (string)\nString that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n  selfLink (string)\nselfLink is a URL representing this object. Populated by the system. Read-only.\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\n  ","description":"","id":28,"section":"docs","tags":null,"title":"Meta","uri":"https://www.k8sref.io/docs/part6/meta/"},{"content":"StorageClass (v1) StorageClass storage.v1.StorageClass\nStorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.\nStorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  Specs   provisioner (string)\nProvisioner indicates the type of the provisioner.\n  parameters (object)\nParameters holds the parameters for the provisioner that should create volumes of this storage class.\n  reclaimPolicy (string)\nDynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete.\n  mountOptions ([]string)\nDynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. [\u0026quot;ro\u0026quot;, \u0026quot;soft\u0026quot;]. Not validated - mount of the PVs will simply fail if one is invalid.\n  allowVolumeExpansion (boolean)\nAllowVolumeExpansion shows whether the storage class allow volume expand\n  volumeBindingMode (string)\nVolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound. When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature.\n  allowedTopologies ([]TopologySelectorTerm)\nRestrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is only honored by servers that enable the VolumeScheduling feature.\n  allowedTopologies.matchLabelExpressions ([]TopologySelectorLabelRequirement)\nA list of topology selector requirements by labels.\n  allowedTopologies.matchLabelExpressions.key (string)\nThe label key that the selector applies to.\n  allowedTopologies.matchLabelExpressions.values ([]string)\nAn array of string values. One value must match the label to be selected. Each entry in Values is ORed.\n    StorageClassList storage.v1.StorageClassList\nStorageClassList is a collection of storage classes.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]StorageClass)\nItems is the list of StorageClasses\n  ","description":"","id":29,"section":"docs","tags":null,"title":"StorageClass (v1)","uri":"https://www.k8sref.io/docs/part3/storageclass-v1/"},{"content":"MutatingWebhookConfiguration (v1) MutatingWebhookConfiguration admissionregistration.v1.MutatingWebhookConfiguration\nMutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.\n  Specs   webhooks ([]MutatingWebhook)\nWebhooks is a list of webhooks and the affected resources and operations.\n  webhooks.admissionReviewVersions ([]string)\nAdmissionReviewVersions is an ordered list of preferred AdmissionReview versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.\n  webhooks.clientConfig (WebhookClientConfig)\nClientConfig defines how to communicate with the hook. Required\n  webhooks.clientConfig.caBundle (string)\ncaBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.\n  webhooks.clientConfig.service (ServiceReference)\nservice is a reference to the service for this webhook. Either service or url must be specified.\nIf the webhook is running within the cluster, then you should use service.\n  webhooks.clientConfig.url (string)\nurl gives the location of the webhook, in standard URL form (scheme://host:port/path). Exactly one of url or service must be specified.\nThe host should not refer to a service running in the cluster; use the service field instead. The host might be resolved via external DNS in some apiservers (e.g., kube-apiserver cannot resolve in-cluster DNS as that would be a layering violation). host may also be an IP address.\nPlease note that using localhost or 127.0.0.1 as a host is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\nThe scheme must be \u0026quot;https\u0026quot;; the URL must begin with \u0026quot;https://\u0026quot;.\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\nAttempting to use a user or basic auth e.g. \u0026quot;user:password@\u0026quot; is not allowed. Fragments (\u0026quot;#\u0026hellip;\u0026quot;) and query parameters (\u0026quot;?\u0026hellip;\u0026quot;) are not allowed, either.\n  webhooks.failurePolicy (string)\nFailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.\n  webhooks.matchPolicy (string)\nmatchPolicy defines how the \u0026quot;rules\u0026quot; list is used to match incoming requests. Allowed values are \u0026quot;Exact\u0026quot; or \u0026quot;Equivalent\u0026quot;.\n  Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \u0026quot;rules\u0026quot; only included apiGroups:[\u0026amp;#34;apps\u0026amp;#34;], apiVersions:[\u0026amp;#34;v1\u0026amp;#34;], resources: [\u0026amp;#34;deployments\u0026amp;#34;], a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.\n  Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \u0026quot;rules\u0026quot; only included apiGroups:[\u0026amp;#34;apps\u0026amp;#34;], apiVersions:[\u0026amp;#34;v1\u0026amp;#34;], resources: [\u0026amp;#34;deployments\u0026amp;#34;], a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.\n  Defaults to \u0026quot;Equivalent\u0026quot;\n  webhooks.name (string)\nThe name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \u0026quot;imagepolicy\u0026quot; is the name of the webhook, and kubernetes.io is the name of the organization. Required.\n  webhooks.namespaceSelector (LabelSelector)\nNamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.\nFor example, to run the webhook on any objects whose namespace is not associated with \u0026quot;runlevel\u0026quot; of \u0026quot;0\u0026quot; or \u0026quot;1\u0026quot;; you will set the selector as follows: \u0026quot;namespaceSelector\u0026quot;: {\n\u0026quot;matchExpressions\u0026quot;: [\n{\n\u0026quot;key\u0026quot;: \u0026quot;runlevel\u0026quot;,\n\u0026quot;operator\u0026quot;: \u0026quot;NotIn\u0026quot;,\n\u0026quot;values\u0026quot;: [\n\u0026quot;0\u0026quot;,\n\u0026quot;1\u0026quot;\n]\n}\n]\n}\nIf instead you want to only run the webhook on any objects whose namespace is associated with the \u0026quot;environment\u0026quot; of \u0026quot;prod\u0026quot; or \u0026quot;staging\u0026quot;; you will set the selector as follows: \u0026quot;namespaceSelector\u0026quot;: {\n\u0026quot;matchExpressions\u0026quot;: [\n{\n\u0026quot;key\u0026quot;: \u0026quot;environment\u0026quot;,\n\u0026quot;operator\u0026quot;: \u0026quot;In\u0026quot;,\n\u0026quot;values\u0026quot;: [\n\u0026quot;prod\u0026quot;,\n\u0026quot;staging\u0026quot;\n]\n}\n]\n}\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.\nDefault to the empty LabelSelector, which matches everything.\n  webhooks.objectSelector (LabelSelector)\nObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.\n  webhooks.reinvocationPolicy (string)\nreinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation. Allowed values are \u0026quot;Never\u0026quot; and \u0026quot;IfNeeded\u0026quot;.\nNever: the webhook will not be called more than once in a single admission evaluation.\nIfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option must be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.\nDefaults to \u0026quot;Never\u0026quot;.\n  webhooks.rules ([]RuleWithOperations)\nRules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches any Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.\n  webhooks.rules.apiGroups ([]string)\nAPIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.\n  webhooks.rules.apiVersions ([]string)\nAPIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.\n  webhooks.rules.operations ([]string)\nOperations is the operations the admission hook cares about - CREATE, UPDATE, or * for all operations. If '*' is present, the length of the slice must be one. Required.\n  webhooks.rules.resources ([]string)\nResources is a list of resources this rule applies to.\nFor example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.\nIf wildcard is present, the validation rule will ensure resources do not overlap with each other.\nDepending on the enclosing object, subresources might not be allowed. Required.\n  webhooks.rules.scope (string)\nscope specifies the scope of this rule. Valid values are \u0026quot;Cluster\u0026quot;, \u0026quot;Namespaced\u0026quot;, and \u0026quot;\u0026quot; \u0026quot;Cluster\u0026quot; means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \u0026quot;Namespaced\u0026quot; means that only namespaced resources will match this rule. \u0026quot;\u0026quot; means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \u0026quot;*\u0026quot;.\n  webhooks.sideEffects (string)\nSideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.\n  webhooks.timeoutSeconds (integer)\nTimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.\n    MutatingWebhookConfigurationList admissionregistration.v1.MutatingWebhookConfigurationList\nMutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]MutatingWebhookConfiguration)\nList of MutatingWebhookConfiguration.\n  ","description":"","id":30,"section":"docs","tags":null,"title":"MutatingWebhookConfiguration (v1)","uri":"https://www.k8sref.io/docs/part4/mutatingwebhookconfiguration-v1/"},{"content":"Role (v1) Role rbac.v1.Role\nRole is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata.\n  Specs   rules ([]PolicyRule)\nRules holds all the PolicyRules for this Role\n  rules.apiGroups ([]string)\nAPIGroups is the name of the APIGroup that contains the resources. If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.\n  rules.nonResourceURLs ([]string)\nNonResourceURLs is a set of partial urls that a user should have access to. *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \u0026quot;pods\u0026quot; or \u0026quot;secrets\u0026quot;) or non-resource URL paths (such as \u0026quot;/api\u0026quot;), but not both.\n  rules.resourceNames ([]string)\nResourceNames is an optional white list of names that the rule applies to. An empty set means that everything is allowed.\n  rules.resources ([]string)\nResources is a list of resources this rule applies to. ResourceAll represents all resources.\n  rules.verbs ([]string)\nVerbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule. VerbAll represents all kinds.\n    RoleList rbac.v1.RoleList\nRoleList is a collection of Roles\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard object's metadata.\n  items ([]Role)\nItems is a list of Roles\n  ","description":"","id":31,"section":"docs","tags":null,"title":"Role (v1)","uri":"https://www.k8sref.io/docs/part5/role-v1/"},{"content":"StatefulSet (v1) StatefulSet apps.v1.StatefulSet\nStatefulSet represents a set of pods with consistent identities. Identities are defined as:\n  Network: A single stable DNS and hostname.\n  Storage: As many VolumeClaims as requested.\nThe StatefulSet guarantees that a given network identity will always map to the same storage identity.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\n  spec (StatefulSetSpec)\nSpec defines the desired identities of pods in this set.\n  status (StatefulSetStatus)\nStatus is the current status of Pods in this StatefulSet. This data may be out of date by some window of time.\n  StatefulSetSpec apps.v1.StatefulSetSpec\nA StatefulSetSpec is the specification of a StatefulSet.\nReplicas   replicas (integer)\nreplicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.\n  selector (LabelSelector)\nselector is a label query over pods that should match the replica count. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\n  template (PodTemplateSpec)\ntemplate is the object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet.\n  Rollout   updateStrategy (StatefulSetUpdateStrategy)\nupdateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template.\n  updateStrategy.rollingUpdate (RollingUpdateStatefulSetStrategy)\nRollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType.\n  updateStrategy.rollingUpdate.partition (integer)\nPartition indicates the ordinal at which the StatefulSet should be partitioned. Default value is 0.\n  updateStrategy.type (string)\nType indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate.\n    podManagementPolicy (string)\npodManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is OrderedReady, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is Parallel which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.\n  revisionHistoryLimit (integer)\nrevisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.\n  Resources   serviceName (string)\nserviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \u0026quot;pod-specific-string\u0026quot; is managed by the StatefulSet controller.\n  volumeClaimTemplates ([]PersistentVolumeClaim)\nvolumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.\n  StatefulSetStatus apps.v1.StatefulSetStatus\nStatefulSetStatus represents the current state of a StatefulSet.\n  replicas (integer)\nreplicas is the number of Pods created by the StatefulSet controller.\n  readyReplicas (integer)\nreadyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition.\n  currentReplicas (integer)\ncurrentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision.\n  updatedReplicas (integer)\nupdatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision.\n  collisionCount (integer)\ncollisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.\n  conditions ([]StatefulSetCondition)\nRepresents the latest available observations of a statefulset's current state.\n  conditions.lastTransitionTime (Time)\nLast time the condition transitioned from one status to another.\n  conditions.message (string)\nA human readable message indicating details about the transition.\n  conditions.reason (string)\nThe reason for the condition's last transition.\n  conditions.status (string)\nStatus of the condition, one of True, False, Unknown.\n  conditions.type (string)\nType of statefulset condition.\n    currentRevision (string)\ncurrentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).\n  updateRevision (string)\nupdateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)\n  observedGeneration (integer)\nobservedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server.\n  StatefulSetList apps.v1.StatefulSetList\nStatefulSetList is a collection of StatefulSets.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\n  items ([]StatefulSet)\n  ","description":"","id":32,"section":"docs","tags":null,"title":"StatefulSet (v1)","uri":"https://www.k8sref.io/docs/part1/statefulset-v1/"},{"content":"VolumeAttachment (v1) VolumeAttachment storage.v1.VolumeAttachment\nVolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.\nVolumeAttachment objects are non-namespaced.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (VolumeAttachmentSpec)\nSpecification of the desired attach/detach volume behavior. Populated by the Kubernetes system.\n  status (VolumeAttachmentStatus)\nStatus of the VolumeAttachment request. Populated by the entity completing the attach or detach operation, i.e. the external-attacher.\n  VolumeAttachmentSpec storage.v1.VolumeAttachmentSpec\nVolumeAttachmentSpec is the specification of a VolumeAttachment request.\n  attacher (string)\nAttacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName().\n  source (VolumeAttachmentSource)\nSource represents the volume that should be attached.\n  source.inlineVolumeSpec (PersistentVolumeSpec)\ninlineVolumeSpec contains all the information necessary to attach a persistent volume defined by a pod's inline VolumeSource. This field is populated only for the CSIMigration feature. It contains translated fields from a pod's inline VolumeSource to a PersistentVolumeSpec. This field is alpha-level and is only honored by servers that enabled the CSIMigration feature.\n  source.persistentVolumeName (string)\nName of the persistent volume to attach.\n    nodeName (string)\nThe node that the volume should be attached to.\n  VolumeAttachmentStatus storage.v1.VolumeAttachmentStatus\nVolumeAttachmentStatus is the status of a VolumeAttachment request.\n  attached (boolean)\nIndicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.\n  attachmentMetadata (object)\nUpon successful attach, this field is populated with any information returned by the attach operation that must be passed into subsequent WaitForAttach or Mount calls. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.\n  attachError (VolumeError)\nThe last error encountered during attach operation, if any. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.\n  attachError.message (string)\nString detailing the error encountered during Attach or Detach operation. This string may be logged, so it should not contain sensitive information.\n  attachError.time (Time)\nTime the error was encountered.\n    detachError (VolumeError)\nThe last error encountered during detach operation, if any. This field must only be set by the entity completing the detach operation, i.e. the external-attacher.\n  detachError.message (string)\nString detailing the error encountered during Attach or Detach operation. This string may be logged, so it should not contain sensitive information.\n  detachError.time (Time)\nTime the error was encountered.\n    VolumeAttachmentList storage.v1.VolumeAttachmentList\nVolumeAttachmentList is a collection of VolumeAttachment objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]VolumeAttachment)\nItems is the list of VolumeAttachments\n  ","description":"","id":33,"section":"docs","tags":null,"title":"VolumeAttachment (v1)","uri":"https://www.k8sref.io/docs/part3/volumeattachment-v1/"},{"content":"CSIDriver (v1) CSIDriver storage.v1.CSIDriver\nCSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster. Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object metadata. metadata.Name indicates the name of the CSI driver that this object refers to; it MUST be the same name returned by the CSI GetPluginName() call for that driver. The driver name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), dots (.), and alphanumerics between. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (CSIDriverSpec)\nSpecification of the CSI Driver.\n  CSIDriverSpec storage.v1.CSIDriverSpec\nCSIDriverSpec is the specification of a CSIDriver.\n  attachRequired (boolean)\nattachRequired indicates this CSI volume driver requires an attach operation (because it implements the CSI ControllerPublishVolume() method), and that the Kubernetes attach detach controller should call the attach volume interface which checks the volumeattachment status and waits until the volume is attached before proceeding to mounting. The CSI external-attacher coordinates with CSI volume driver and updates the volumeattachment status when the attach operation is complete. If the CSIDriverRegistry feature gate is enabled and the value is specified to false, the attach operation will be skipped. Otherwise the attach operation will be called.\n  podInfoOnMount (boolean)\nIf set to true, podInfoOnMount indicates this CSI volume driver requires additional pod information (like podName, podUID, etc.) during mount operations. If set to false, pod information will not be passed on mount. Default is false. The CSI driver specifies podInfoOnMount as part of driver deployment. If true, Kubelet will pass pod information as VolumeContext in the CSI NodePublishVolume() calls. The CSI driver is responsible for parsing and validating the information passed in as VolumeContext. The following VolumeConext will be passed if podInfoOnMount is set to true. This list might grow, but the prefix will be used. \u0026quot;csi.storage.k8s.io/pod.name\u0026quot;: pod.Name \u0026quot;csi.storage.k8s.io/pod.namespace\u0026quot;: pod.Namespace \u0026quot;csi.storage.k8s.io/pod.uid\u0026quot;: string(pod.UID) \u0026quot;csi.storage.k8s.io/ephemeral\u0026quot;: \u0026quot;true\u0026quot; iff the volume is an ephemeral inline volume\ndefined by a CSIVolumeSource, otherwise \u0026quot;false\u0026quot;\n\u0026quot;csi.storage.k8s.io/ephemeral\u0026quot; is a new feature in Kubernetes 1.16. It is only required for drivers which support both the \u0026quot;Persistent\u0026quot; and \u0026quot;Ephemeral\u0026quot; VolumeLifecycleMode. Other drivers can leave pod info disabled and/or ignore this field. As Kubernetes 1.15 doesn't support this field, drivers can only support one mode when deployed on such a cluster and the deployment determines which mode that is, for example via a command line parameter of the driver.\n  volumeLifecycleModes ([]string)\nvolumeLifecycleModes defines what kind of volumes this CSI volume driver supports. The default if the list is empty is \u0026quot;Persistent\u0026quot;, which is the usage defined by the CSI specification and implemented in Kubernetes via the usual PV/PVC mechanism. The other mode is \u0026quot;Ephemeral\u0026quot;. In this mode, volumes are defined inline inside the pod spec with CSIVolumeSource and their lifecycle is tied to the lifecycle of that pod. A driver has to be aware of this because it is only going to get a NodePublishVolume call for such a volume. For more information about implementing this mode, see https://kubernetes-csi.github.io/docs/ephemeral-local-volumes.html A driver can support one or more of these modes and more modes may be added in the future. This field is beta.\n  CSIDriverList storage.v1.CSIDriverList\nCSIDriverList is a collection of CSIDriver objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]CSIDriver)\nitems is the list of CSIDriver\n  ","description":"","id":34,"section":"docs","tags":null,"title":"CSIDriver (v1)","uri":"https://www.k8sref.io/docs/part3/csidriver-v1/"},{"content":"DaemonSet (v1) DaemonSet apps.v1.DaemonSet\nDaemonSet represents the configuration of a daemon set.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (DaemonSetSpec)\nThe desired behavior of this daemon set. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  status (DaemonSetStatus)\nThe current status of this daemon set. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  DaemonSetSpec apps.v1.DaemonSetSpec\nDaemonSetSpec is the specification of a daemon set.\n  selector (LabelSelector)\nA label query over pods that are managed by the daemon set. Must match in order to be controlled. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\n  template (PodTemplateSpec)\nAn object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template\n  minReadySeconds (integer)\nThe minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).\n  updateStrategy (DaemonSetUpdateStrategy)\nAn update strategy to replace existing DaemonSet pods with new pods.\n  updateStrategy.rollingUpdate (RollingUpdateDaemonSet)\nRolling update config params. Present only if type = \u0026quot;RollingUpdate\u0026quot;.\n  updateStrategy.rollingUpdate.maxUnavailable ()\nThe maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.\n  updateStrategy.type (string)\nType of daemon set update. Can be \u0026quot;RollingUpdate\u0026quot; or \u0026quot;OnDelete\u0026quot;. Default is RollingUpdate.\n    revisionHistoryLimit (integer)\nThe number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.\n  DaemonSetStatus apps.v1.DaemonSetStatus\nDaemonSetStatus represents the current status of a daemon set.\n  numberReady (integer)\nThe number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.\n  numberAvailable (integer)\nThe number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)\n  numberUnavailable (integer)\nThe number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)\n  numberMisscheduled (integer)\nThe number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/\n  desiredNumberScheduled (integer)\nThe total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/\n  currentNumberScheduled (integer)\nThe number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/\n  updatedNumberScheduled (integer)\nThe total number of nodes that are running updated daemon pod\n  collisionCount (integer)\nCount of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.\n  conditions ([]DaemonSetCondition)\nRepresents the latest available observations of a DaemonSet's current state.\n  conditions.lastTransitionTime (Time)\nLast time the condition transitioned from one status to another.\n  conditions.message (string)\nA human readable message indicating details about the transition.\n  conditions.reason (string)\nThe reason for the condition's last transition.\n  conditions.status (string)\nStatus of the condition, one of True, False, Unknown.\n  conditions.type (string)\nType of DaemonSet condition.\n    observedGeneration (integer)\nThe most recent generation observed by the daemon set controller.\n  DaemonSetList apps.v1.DaemonSetList\nDaemonSetList is a collection of daemon sets.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]DaemonSet)\nA list of daemon sets.\n  ","description":"","id":35,"section":"docs","tags":null,"title":"DaemonSet (v1)","uri":"https://www.k8sref.io/docs/part1/daemonset-v1/"},{"content":"RoleBinding (v1) RoleBinding rbac.v1.RoleBinding\nRoleBinding references a role, but does not contain it. It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in. RoleBindings in a given namespace only have effect in that namespace.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata.\n  Specs   roleRef (RoleRef)\nRoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.\n  roleRef.apiGroup (string)\nAPIGroup is the group for the resource being referenced\n  roleRef.kind (string)\nKind is the type of resource being referenced\n  roleRef.name (string)\nName is the name of resource being referenced\n    subjects ([]Subject)\nSubjects holds references to the objects the role applies to.\n  subjects.apiGroup (string)\nAPIGroup holds the API group of the referenced subject. Defaults to \u0026quot;\u0026quot; for ServiceAccount subjects. Defaults to \u0026quot;rbac.authorization.k8s.io\u0026quot; for User and Group subjects.\n  subjects.kind (string)\nKind of object being referenced. Values defined by this API group are \u0026quot;User\u0026quot;, \u0026quot;Group\u0026quot;, and \u0026quot;ServiceAccount\u0026quot;. If the Authorizer does not recognized the kind value, the Authorizer should report an error.\n  subjects.name (string)\nName of the object being referenced.\n  subjects.namespace (string)\nNamespace of the referenced object. If the object kind is non-namespace, such as \u0026quot;User\u0026quot; or \u0026quot;Group\u0026quot;, and this value is not empty the Authorizer should report an error.\n    RoleBindingList rbac.v1.RoleBindingList\nRoleBindingList is a collection of RoleBindings\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard object's metadata.\n  items ([]RoleBinding)\nItems is a list of RoleBindings\n  ","description":"","id":36,"section":"docs","tags":null,"title":"RoleBinding (v1)","uri":"https://www.k8sref.io/docs/part5/rolebinding-v1/"},{"content":"ValidatingWebhookConfiguration (v1) ValidatingWebhookConfiguration admissionregistration.v1.ValidatingWebhookConfiguration\nValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.\n  Specs   webhooks ([]ValidatingWebhook)\nWebhooks is a list of webhooks and the affected resources and operations.\n  webhooks.admissionReviewVersions ([]string)\nAdmissionReviewVersions is an ordered list of preferred AdmissionReview versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.\n  webhooks.clientConfig (WebhookClientConfig)\nClientConfig defines how to communicate with the hook. Required\n  webhooks.clientConfig.caBundle (string)\ncaBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.\n  webhooks.clientConfig.service (ServiceReference)\nservice is a reference to the service for this webhook. Either service or url must be specified.\nIf the webhook is running within the cluster, then you should use service.\n  webhooks.clientConfig.url (string)\nurl gives the location of the webhook, in standard URL form (scheme://host:port/path). Exactly one of url or service must be specified.\nThe host should not refer to a service running in the cluster; use the service field instead. The host might be resolved via external DNS in some apiservers (e.g., kube-apiserver cannot resolve in-cluster DNS as that would be a layering violation). host may also be an IP address.\nPlease note that using localhost or 127.0.0.1 as a host is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\nThe scheme must be \u0026quot;https\u0026quot;; the URL must begin with \u0026quot;https://\u0026quot;.\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\nAttempting to use a user or basic auth e.g. \u0026quot;user:password@\u0026quot; is not allowed. Fragments (\u0026quot;#\u0026hellip;\u0026quot;) and query parameters (\u0026quot;?\u0026hellip;\u0026quot;) are not allowed, either.\n  webhooks.failurePolicy (string)\nFailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.\n  webhooks.matchPolicy (string)\nmatchPolicy defines how the \u0026quot;rules\u0026quot; list is used to match incoming requests. Allowed values are \u0026quot;Exact\u0026quot; or \u0026quot;Equivalent\u0026quot;.\n  Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \u0026quot;rules\u0026quot; only included apiGroups:[\u0026amp;#34;apps\u0026amp;#34;], apiVersions:[\u0026amp;#34;v1\u0026amp;#34;], resources: [\u0026amp;#34;deployments\u0026amp;#34;], a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.\n  Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \u0026quot;rules\u0026quot; only included apiGroups:[\u0026amp;#34;apps\u0026amp;#34;], apiVersions:[\u0026amp;#34;v1\u0026amp;#34;], resources: [\u0026amp;#34;deployments\u0026amp;#34;], a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.\n  Defaults to \u0026quot;Equivalent\u0026quot;\n  webhooks.name (string)\nThe name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \u0026quot;imagepolicy\u0026quot; is the name of the webhook, and kubernetes.io is the name of the organization. Required.\n  webhooks.namespaceSelector (LabelSelector)\nNamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.\nFor example, to run the webhook on any objects whose namespace is not associated with \u0026quot;runlevel\u0026quot; of \u0026quot;0\u0026quot; or \u0026quot;1\u0026quot;; you will set the selector as follows: \u0026quot;namespaceSelector\u0026quot;: {\n\u0026quot;matchExpressions\u0026quot;: [\n{\n\u0026quot;key\u0026quot;: \u0026quot;runlevel\u0026quot;,\n\u0026quot;operator\u0026quot;: \u0026quot;NotIn\u0026quot;,\n\u0026quot;values\u0026quot;: [\n\u0026quot;0\u0026quot;,\n\u0026quot;1\u0026quot;\n]\n}\n]\n}\nIf instead you want to only run the webhook on any objects whose namespace is associated with the \u0026quot;environment\u0026quot; of \u0026quot;prod\u0026quot; or \u0026quot;staging\u0026quot;; you will set the selector as follows: \u0026quot;namespaceSelector\u0026quot;: {\n\u0026quot;matchExpressions\u0026quot;: [\n{\n\u0026quot;key\u0026quot;: \u0026quot;environment\u0026quot;,\n\u0026quot;operator\u0026quot;: \u0026quot;In\u0026quot;,\n\u0026quot;values\u0026quot;: [\n\u0026quot;prod\u0026quot;,\n\u0026quot;staging\u0026quot;\n]\n}\n]\n}\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels for more examples of label selectors.\nDefault to the empty LabelSelector, which matches everything.\n  webhooks.objectSelector (LabelSelector)\nObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.\n  webhooks.rules ([]RuleWithOperations)\nRules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches any Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.\n  webhooks.rules.apiGroups ([]string)\nAPIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.\n  webhooks.rules.apiVersions ([]string)\nAPIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.\n  webhooks.rules.operations ([]string)\nOperations is the operations the admission hook cares about - CREATE, UPDATE, or * for all operations. If '*' is present, the length of the slice must be one. Required.\n  webhooks.rules.resources ([]string)\nResources is a list of resources this rule applies to.\nFor example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.\nIf wildcard is present, the validation rule will ensure resources do not overlap with each other.\nDepending on the enclosing object, subresources might not be allowed. Required.\n  webhooks.rules.scope (string)\nscope specifies the scope of this rule. Valid values are \u0026quot;Cluster\u0026quot;, \u0026quot;Namespaced\u0026quot;, and \u0026quot;\u0026quot; \u0026quot;Cluster\u0026quot; means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \u0026quot;Namespaced\u0026quot; means that only namespaced resources will match this rule. \u0026quot;\u0026quot; means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \u0026quot;*\u0026quot;.\n  webhooks.sideEffects (string)\nSideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.\n  webhooks.timeoutSeconds (integer)\nTimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.\n    ValidatingWebhookConfigurationList admissionregistration.v1.ValidatingWebhookConfigurationList\nValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]ValidatingWebhookConfiguration)\nList of ValidatingWebhookConfiguration.\n  ","description":"","id":37,"section":"docs","tags":null,"title":"ValidatingWebhookConfiguration (v1)","uri":"https://www.k8sref.io/docs/part4/validatingwebhookconfiguration-v1/"},{"content":"CSINode (v1) CSINode storage.v1.CSINode\nCSINode holds information about all CSI drivers installed on a node. CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nmetadata.name must be the Kubernetes node name.\n  spec (CSINodeSpec)\nspec is the specification of CSINode\n  CSINodeSpec storage.v1.CSINodeSpec\nCSINodeSpec holds information about the specification of all CSI drivers installed on a node\n  drivers ([]CSINodeDriver)\ndrivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.\n  drivers.allocatable (VolumeNodeResources)\nallocatable represents the volume resources of a node that are available for scheduling. This field is beta.\n  drivers.allocatable.count (integer)\nMaximum number of unique volumes managed by the CSI driver that can be used on a node. A volume that is both attached and mounted on a node is considered to be used once, not twice. The same rule applies for a unique volume that is shared among multiple pods on the same node. If this field is not specified, then the supported number of volumes on this node is unbounded.\n  drivers.name (string)\nThis is the name of the CSI driver that this object refers to. This MUST be the same name returned by the CSI GetPluginName() call for that driver.\n  drivers.nodeID (string)\nnodeID of the node from the driver point of view. This field enables Kubernetes to communicate with storage systems that do not share the same nomenclature for nodes. For example, Kubernetes may refer to a given node as \u0026quot;node1\u0026quot;, but the storage system may refer to the same node as \u0026quot;nodeA\u0026quot;. When Kubernetes issues a command to the storage system to attach a volume to a specific node, it can use this field to refer to the node name using the ID that the storage system will understand, e.g. \u0026quot;nodeA\u0026quot; instead of \u0026quot;node1\u0026quot;. This field is required.\n  drivers.topologyKeys ([]string)\ntopologyKeys is the list of keys supported by the driver. When a driver is initialized on a cluster, it provides a set of topology keys that it understands (e.g. \u0026quot;company.com/zone\u0026quot;, \u0026quot;company.com/region\u0026quot;). When a driver is initialized on a node, it provides the same topology keys along with values. Kubelet will expose these topology keys as labels on its own node object. When Kubernetes does topology aware provisioning, it can use this list to determine which labels it should retrieve from the node object and pass back to the driver. It is possible for different nodes to use different topology keys. This can be empty if driver does not support topology.\n    CSINodeList storage.v1.CSINodeList\nCSINodeList is a collection of CSINode objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]CSINode)\nitems is the list of CSINode\n  ","description":"","id":38,"section":"docs","tags":null,"title":"CSINode (v1)","uri":"https://www.k8sref.io/docs/part3/csinode-v1/"},{"content":"PersistentVolume (v1) PersistentVolume core.v1.PersistentVolume\nPersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (PersistentVolumeSpec)\nSpec defines a specification of a persistent volume owned by the cluster. Provisioned by an administrator. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes\n  status (PersistentVolumeStatus)\nStatus represents the current information/status for the persistent volume. Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes\n  PersistentVolumeSpec core.v1.PersistentVolumeSpec\nPersistentVolumeSpec is the specification of a persistent volume.\n  accessModes ([]string)\nAccessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes\n  capacity (object)\nA description of the persistent volume's resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity\n  claimRef (ObjectReference)\nClaimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim. Expected to be non-nil when bound. claim.VolumeName is the authoritative bind between PV and PVC. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding\n  mountOptions ([]string)\nA list of mount options, e.g. [\u0026quot;ro\u0026quot;, \u0026quot;soft\u0026quot;]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options\n  nodeAffinity (VolumeNodeAffinity)\nNodeAffinity defines constraints that limit what nodes this volume can be accessed from. This field influences the scheduling of pods that use this volume.\n nodeAffinity.required (NodeSelector)\nRequired specifies hard node constraints that must be met.    persistentVolumeReclaimPolicy (string)\nWhat happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming\n  storageClassName (string)\nName of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.\n  volumeMode (string)\nvolumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state. Value of Filesystem is implied when not included in spec.\n  Local   hostPath (HostPathVolumeSource)\nHostPath represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n  hostPath.path (string)\nPath of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n  hostPath.type (string)\nType for HostPath Volume Defaults to \u0026quot;\u0026quot; More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n    local (LocalVolumeSource)\nLocal represents directly-attached storage with node affinity\n  local.fsType (string)\nFilesystem type to mount. It applies only when the Path is a block device. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. The default value is to auto-select a fileystem if unspecified.\n  local.path (string)\nThe full path to the volume on the node. It can be either a directory or block device (disk, partition, \u0026hellip;).\n    Persistent volumes   awsElasticBlockStore (AWSElasticBlockStoreVolumeSource)\nAWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n  awsElasticBlockStore.fsType (string)\nFilesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n  awsElasticBlockStore.partition (integer)\nThe partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \u0026quot;1\u0026quot;. Similarly, the volume partition for /dev/sda is \u0026quot;0\u0026quot; (or you can leave the property empty).\n  awsElasticBlockStore.readOnly (boolean)\nSpecify \u0026quot;true\u0026quot; to force and set the ReadOnly property in VolumeMounts to \u0026quot;true\u0026quot;. If omitted, the default is \u0026quot;false\u0026quot;. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n  awsElasticBlockStore.volumeID (string)\nUnique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n    azureDisk (AzureDiskVolumeSource)\nAzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.\n  azureDisk.cachingMode (string)\nHost Caching mode: None, Read Only, Read Write.\n  azureDisk.diskName (string)\nThe Name of the data disk in the blob storage\n  azureDisk.diskURI (string)\nThe URI the data disk in the blob storage\n  azureDisk.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified.\n  azureDisk.kind (string)\nExpected values Shared: multiple blob disks per storage account Dedicated: single blob disk per storage account Managed: azure managed data disk (only in managed availability set). defaults to shared\n  azureDisk.readOnly (boolean)\nDefaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n    azureFile (AzureFilePersistentVolumeSource)\nAzureFile represents an Azure File Service mount on the host and bind mount to the pod.\n  azureFile.readOnly (boolean)\nDefaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n  azureFile.secretName (string)\nthe name of secret that contains Azure Storage Account Name and Key\n  azureFile.secretNamespace (string)\nthe namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod\n  azureFile.shareName (string)\nShare Name\n    cephfs (CephFSPersistentVolumeSource)\nCephFS represents a Ceph FS mount on the host that shares a pod's lifetime\n  cephfs.monitors ([]string)\nRequired: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n  cephfs.path (string)\nOptional: Used as the mounted root, rather than the full Ceph tree, default is /\n  cephfs.readOnly (boolean)\nOptional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n  cephfs.secretFile (string)\nOptional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n  cephfs.secretRef (SecretReference)\nOptional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n  cephfs.secretRef.name (string)\nName is unique within a namespace to reference a secret resource.\n  cephfs.secretRef.namespace (string)\nNamespace defines the space within which the secret name must be unique.\n  cephfs.user (string)\nOptional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n    cinder (CinderPersistentVolumeSource)\nCinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md\n  cinder.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md\n  cinder.readOnly (boolean)\nOptional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md\n  cinder.secretRef (SecretReference)\nOptional: points to a secret object containing parameters used to connect to OpenStack.\n  cinder.secretRef.name (string)\nName is unique within a namespace to reference a secret resource.\n  cinder.secretRef.namespace (string)\nNamespace defines the space within which the secret name must be unique.\n  cinder.volumeID (string)\nvolume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md\n    csi (CSIPersistentVolumeSource)\nCSI represents storage that is handled by an external CSI driver (Beta feature).\n  csi.controllerExpandSecretRef (SecretReference)\nControllerExpandSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerExpandVolume call. This is an alpha field and requires enabling ExpandCSIVolumes feature gate. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.\n  csi.controllerExpandSecretRef.name (string)\nName is unique within a namespace to reference a secret resource.\n  csi.controllerExpandSecretRef.namespace (string)\nNamespace defines the space within which the secret name must be unique.\n  csi.controllerPublishSecretRef (SecretReference)\nControllerPublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerPublishVolume and ControllerUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.\n  csi.controllerPublishSecretRef.name (string)\nName is unique within a namespace to reference a secret resource.\n  csi.controllerPublishSecretRef.namespace (string)\nNamespace defines the space within which the secret name must be unique.\n  csi.driver (string)\nDriver is the name of the driver to use for this volume. Required.\n  csi.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;.\n  csi.nodePublishSecretRef (SecretReference)\nNodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.\n  csi.nodePublishSecretRef.name (string)\nName is unique within a namespace to reference a secret resource.\n  csi.nodePublishSecretRef.namespace (string)\nNamespace defines the space within which the secret name must be unique.\n  csi.nodeStageSecretRef (SecretReference)\nNodeStageSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodeStageVolume and NodeStageVolume and NodeUnstageVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.\n  csi.nodeStageSecretRef.name (string)\nName is unique within a namespace to reference a secret resource.\n  csi.nodeStageSecretRef.namespace (string)\nNamespace defines the space within which the secret name must be unique.\n  csi.readOnly (boolean)\nOptional: The value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write).\n  csi.volumeAttributes (object)\nAttributes of the volume to publish.\n  csi.volumeHandle (string)\nVolumeHandle is the unique volume name returned by the CSI volume plugin’s CreateVolume to refer to the volume on all subsequent calls. Required.\n    fc (FCVolumeSource)\nFC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.\n  fc.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified.\n  fc.lun (integer)\nOptional: FC target lun number\n  fc.readOnly (boolean)\nOptional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n  fc.targetWWNs ([]string)\nOptional: FC target worldwide names (WWNs)\n  fc.wwids ([]string)\nOptional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.\n    flexVolume (FlexPersistentVolumeSource)\nFlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.\n  flexVolume.driver (string)\nDriver is the name of the driver to use for this volume.\n  flexVolume.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. The default filesystem depends on FlexVolume script.\n  flexVolume.options (object)\nOptional: Extra command options if any.\n  flexVolume.readOnly (boolean)\nOptional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n  flexVolume.secretRef (SecretReference)\nOptional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.\n  flexVolume.secretRef.name (string)\nName is unique within a namespace to reference a secret resource.\n  flexVolume.secretRef.namespace (string)\nNamespace defines the space within which the secret name must be unique.\n    flocker (FlockerVolumeSource)\nFlocker represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running\n  flocker.datasetName (string)\nName of the dataset stored as metadata -\u0026gt; name on the dataset for Flocker should be considered as deprecated\n  flocker.datasetUUID (string)\nUUID of the dataset. This is unique identifier of a Flocker dataset\n    gcePersistentDisk (GCEPersistentDiskVolumeSource)\nGCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n  gcePersistentDisk.fsType (string)\nFilesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n  gcePersistentDisk.partition (integer)\nThe partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \u0026quot;1\u0026quot;. Similarly, the volume partition for /dev/sda is \u0026quot;0\u0026quot; (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n  gcePersistentDisk.pdName (string)\nUnique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n  gcePersistentDisk.readOnly (boolean)\nReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n    glusterfs (GlusterfsPersistentVolumeSource)\nGlusterfs represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: https://examples.k8s.io/volumes/glusterfs/README.md\n  glusterfs.endpoints (string)\nEndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod\n  glusterfs.endpointsNamespace (string)\nEndpointsNamespace is the namespace that contains Glusterfs endpoint. If this field is empty, the EndpointNamespace defaults to the same namespace as the bound PVC. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod\n  glusterfs.path (string)\nPath is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod\n  glusterfs.readOnly (boolean)\nReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod\n    iscsi (ISCSIPersistentVolumeSource)\nISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin.\n  iscsi.chapAuthDiscovery (boolean)\nwhether support iSCSI Discovery CHAP authentication\n  iscsi.chapAuthSession (boolean)\nwhether support iSCSI Session CHAP authentication\n  iscsi.fsType (string)\nFilesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\n  iscsi.initiatorName (string)\nCustom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface \u0026lt;target portal\u0026gt;:\u0026lt;volume name\u0026gt; will be created for the connection.\n  iscsi.iqn (string)\nTarget iSCSI Qualified Name.\n  iscsi.iscsiInterface (string)\niSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).\n  iscsi.lun (integer)\niSCSI Target Lun number.\n  iscsi.portals ([]string)\niSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).\n  iscsi.readOnly (boolean)\nReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.\n  iscsi.secretRef (SecretReference)\nCHAP Secret for iSCSI target and initiator authentication\n  iscsi.secretRef.name (string)\nName is unique within a namespace to reference a secret resource.\n  iscsi.secretRef.namespace (string)\nNamespace defines the space within which the secret name must be unique.\n  iscsi.targetPortal (string)\niSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).\n    nfs (NFSVolumeSource)\nNFS represents an NFS mount on the host. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n  nfs.path (string)\nPath that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n  nfs.readOnly (boolean)\nReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n  nfs.server (string)\nServer is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n    photonPersistentDisk (PhotonPersistentDiskVolumeSource)\nPhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine\n  photonPersistentDisk.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified.\n  photonPersistentDisk.pdID (string)\nID that identifies Photon Controller persistent disk\n    portworxVolume (PortworxVolumeSource)\nPortworxVolume represents a portworx volume attached and mounted on kubelets host machine\n  portworxVolume.fsType (string)\nFSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified.\n  portworxVolume.readOnly (boolean)\nDefaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n  portworxVolume.volumeID (string)\nVolumeID uniquely identifies a Portworx volume\n    quobyte (QuobyteVolumeSource)\nQuobyte represents a Quobyte mount on the host that shares a pod's lifetime\n  quobyte.group (string)\nGroup to map volume access to Default is no group\n  quobyte.readOnly (boolean)\nReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.\n  quobyte.registry (string)\nRegistry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes\n  quobyte.tenant (string)\nTenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin\n  quobyte.user (string)\nUser to map volume access to Defaults to serivceaccount user\n  quobyte.volume (string)\nVolume is a string that references an already created Quobyte volume by name.\n    rbd (RBDPersistentVolumeSource)\nRBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md\n  rbd.fsType (string)\nFilesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\n  rbd.image (string)\nThe rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n  rbd.keyring (string)\nKeyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n  rbd.monitors ([]string)\nA collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n  rbd.pool (string)\nThe rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n  rbd.readOnly (boolean)\nReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n  rbd.secretRef (SecretReference)\nSecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n  rbd.secretRef.name (string)\nName is unique within a namespace to reference a secret resource.\n  rbd.secretRef.namespace (string)\nNamespace defines the space within which the secret name must be unique.\n  rbd.user (string)\nThe rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n    scaleIO (ScaleIOPersistentVolumeSource)\nScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.\n  scaleIO.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Default is \u0026quot;xfs\u0026quot;\n  scaleIO.gateway (string)\nThe host address of the ScaleIO API Gateway.\n  scaleIO.protectionDomain (string)\nThe name of the ScaleIO Protection Domain for the configured storage.\n  scaleIO.readOnly (boolean)\nDefaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n  scaleIO.secretRef (SecretReference)\nSecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.\n  scaleIO.secretRef.name (string)\nName is unique within a namespace to reference a secret resource.\n  scaleIO.secretRef.namespace (string)\nNamespace defines the space within which the secret name must be unique.\n  scaleIO.sslEnabled (boolean)\nFlag to enable/disable SSL communication with Gateway, default false\n  scaleIO.storageMode (string)\nIndicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.\n  scaleIO.storagePool (string)\nThe ScaleIO Storage Pool associated with the protection domain.\n  scaleIO.system (string)\nThe name of the storage system as configured in ScaleIO.\n  scaleIO.volumeName (string)\nThe name of a volume already created in the ScaleIO system that is associated with this volume source.\n    storageos (StorageOSPersistentVolumeSource)\nStorageOS represents a StorageOS volume that is attached to the kubelet's host machine and mounted into the pod More info: https://examples.k8s.io/volumes/storageos/README.md\n  storageos.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified.\n  storageos.readOnly (boolean)\nDefaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.\n  storageos.secretRef (ObjectReference)\nSecretRef specifies the secret to use for obtaining the StorageOS API credentials. If not specified, default values will be attempted.\n  storageos.volumeName (string)\nVolumeName is the human-readable name of the StorageOS volume. Volume names are only unique within a namespace.\n  storageos.volumeNamespace (string)\nVolumeNamespace specifies the scope of the volume within StorageOS. If no namespace is specified then the Pod's namespace will be used. This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \u0026quot;default\u0026quot; if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.\n    vsphereVolume (VsphereVirtualDiskVolumeSource)\nVsphereVolume represents a vSphere volume attached and mounted on kubelets host machine\n  vsphereVolume.fsType (string)\nFilesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \u0026quot;ext4\u0026quot;, \u0026quot;xfs\u0026quot;, \u0026quot;ntfs\u0026quot;. Implicitly inferred to be \u0026quot;ext4\u0026quot; if unspecified.\n  vsphereVolume.storagePolicyID (string)\nStorage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.\n  vsphereVolume.storagePolicyName (string)\nStorage Policy Based Management (SPBM) profile name.\n  vsphereVolume.volumePath (string)\nPath that identifies vSphere volume vmdk\n    PersistentVolumeStatus core.v1.PersistentVolumeStatus\nPersistentVolumeStatus is the current status of a persistent volume.\n  phase (string)\nPhase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase\n  reason (string)\nReason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.\n  message (string)\nA human-readable message indicating details about why the volume is in this state.\n  PersistentVolumeList core.v1.PersistentVolumeList\nPersistentVolumeList is a list of PersistentVolume items.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]PersistentVolume)\nList of persistent volumes. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes\n  ","description":"","id":39,"section":"docs","tags":null,"title":"PersistentVolume (v1)","uri":"https://www.k8sref.io/docs/part5/persistentvolume-v1/"},{"content":"PodTemplate (v1) PodTemplate core.v1.PodTemplate\nPodTemplate describes a template for creating copies of a predefined pod.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  template (PodTemplateSpec)\nTemplate defines the pods that will be created from this pod template. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  PodTemplateSpec core.v1.PodTemplateSpec\nPodTemplateSpec describes the data a pod should have when created from a template\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (PodSpec)\nSpecification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  PodTemplateList core.v1.PodTemplateList\nPodTemplateList is a list of PodTemplates.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]PodTemplate)\nList of pod templates\n  ","description":"","id":40,"section":"docs","tags":null,"title":"PodTemplate (v1)","uri":"https://www.k8sref.io/docs/part4/podtemplate-v1/"},{"content":"ReplicationController (v1) ReplicationController core.v1.ReplicationController\nReplicationController represents the configuration of a replication controller.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nIf the Labels of a ReplicationController are empty, they are defaulted to be the same as the Pod(s) that the replication controller manages. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (ReplicationControllerSpec)\nSpec defines the specification of the desired behavior of the replication controller. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  status (ReplicationControllerStatus)\nStatus is the most recently observed status of the replication controller. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  ReplicationControllerSpec core.v1.ReplicationControllerSpec\nReplicationControllerSpec is the specification of a replication controller.\n  replicas (integer)\nReplicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller\n  selector (object)\nSelector is a label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\n  template (PodTemplateSpec)\nTemplate is the object that describes the pod that will be created if insufficient replicas are detected. This takes precedence over a TemplateRef. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template\n  minReadySeconds (integer)\nMinimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)\n  ReplicationControllerStatus core.v1.ReplicationControllerStatus\nReplicationControllerStatus represents the current status of a replication controller.\n  replicas (integer)\nReplicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller\n  availableReplicas (integer)\nThe number of available replicas (ready for at least minReadySeconds) for this replication controller.\n  readyReplicas (integer)\nThe number of ready replicas for this replication controller.\n  fullyLabeledReplicas (integer)\nThe number of pods that have labels matching the labels of the pod template of the replication controller.\n  conditions ([]ReplicationControllerCondition)\nRepresents the latest available observations of a replication controller's current state.\n  conditions.lastTransitionTime (Time)\nThe last time the condition transitioned from one status to another.\n  conditions.message (string)\nA human readable message indicating details about the transition.\n  conditions.reason (string)\nThe reason for the condition's last transition.\n  conditions.status (string)\nStatus of the condition, one of True, False, Unknown.\n  conditions.type (string)\nType of replication controller condition.\n    observedGeneration (integer)\nObservedGeneration reflects the generation of the most recently observed replication controller.\n  ReplicationControllerList core.v1.ReplicationControllerList\nReplicationControllerList is a collection of replication controllers.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]ReplicationController)\nList of replication controllers. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller\n  ","description":"","id":41,"section":"docs","tags":null,"title":"ReplicationController (v1)","uri":"https://www.k8sref.io/docs/part1/replicationcontroller-v1/"},{"content":"Job (v1) Job batch.v1.Job\nJob represents the configuration of a single job.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (JobSpec)\nSpecification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  status (JobStatus)\nCurrent status of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  JobSpec batch.v1.JobSpec\nJobSpec describes how the job execution will look like.\nReplicas   parallelism (integer)\nSpecifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) \u0026lt; .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/\n  selector (LabelSelector)\nA label query over pods that should match the pod count. Normally, the system sets this field for you. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\n  template (PodTemplateSpec)\nDescribes the pod that will be created when executing a job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/\n  Lifecycle   completions (integer)\nSpecifies the desired number of successfully finished pods the job should be run with. Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value. Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/\n  backoffLimit (integer)\nSpecifies the number of retries before marking this job failed. Defaults to 6\n  activeDeadlineSeconds (integer)\nSpecifies the duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer\n  ttlSecondsAfterFinished (integer)\nttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes. This field is alpha-level and is only honored by servers that enable the TTLAfterFinished feature.\n  Deprecated  manualSelector (boolean)\nmanualSelector controls generation of pod labels and pod selectors. Leave manualSelector unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template. When true, the user is responsible for picking unique labels and specifying the selector. Failure to pick a unique label may cause this and other jobs to not function correctly. However, You may see manualSelector=true in jobs that were created with the old extensions/v1beta1 API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector  JobStatus batch.v1.JobStatus\nJobStatus represents the current state of a Job.\n  startTime (Time)\nRepresents time when the job was acknowledged by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.\n  completionTime (Time)\nRepresents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.\n  active (integer)\nThe number of actively running pods.\n  failed (integer)\nThe number of pods which reached phase Failed.\n  succeeded (integer)\nThe number of pods which reached phase Succeeded.\n  conditions ([]JobCondition)\nThe latest available observations of an object's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/\n  conditions.lastProbeTime (Time)\nLast time the condition was checked.\n  conditions.lastTransitionTime (Time)\nLast time the condition transit from one status to another.\n  conditions.message (string)\nHuman readable message indicating details about last transition.\n  conditions.reason (string)\n(brief) reason for the condition's last transition.\n  conditions.status (string)\nStatus of the condition, one of True, False, Unknown.\n  conditions.type (string)\nType of job condition, Complete or Failed.\n    JobList batch.v1.JobList\nJobList is a collection of jobs.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]Job)\nitems is the list of Jobs.\n  ","description":"","id":42,"section":"docs","tags":null,"title":"Job (v1)","uri":"https://www.k8sref.io/docs/part1/job-v1/"},{"content":"PriorityClass (v1) PriorityClass scheduling.v1.PriorityClass\nPriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  Specs   value (integer)\nThe value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.\n  description (string)\ndescription is an arbitrary string that usually provides guidelines on when this priority class should be used.\n  preemptionPolicy (string)\nPreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature.\n  globalDefault (boolean)\nglobalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as globalDefault. However, if more than one PriorityClasses exists with their globalDefault field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.\n  PriorityClassList scheduling.v1.PriorityClassList\nPriorityClassList is a collection of priority classes.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]PriorityClass)\nitems is the list of PriorityClasses\n  ","description":"","id":43,"section":"docs","tags":null,"title":"PriorityClass (v1)","uri":"https://www.k8sref.io/docs/part4/priorityclass-v1/"},{"content":"ResourceQuota (v1) ResourceQuota core.v1.ResourceQuota\nResourceQuota sets aggregate quota restrictions enforced per namespace\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (ResourceQuotaSpec)\nSpec defines the desired quota. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  status (ResourceQuotaStatus)\nStatus defines the actual enforced quota and its current usage. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  ResourceQuotaSpec core.v1.ResourceQuotaSpec\nResourceQuotaSpec defines the desired hard limits to enforce for Quota.\n  hard (object)\nhard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/\n  scopeSelector (ScopeSelector)\nscopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values. For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched.\n  scopeSelector.matchExpressions ([]ScopedResourceSelectorRequirement)\nA list of scope selector requirements by scope of the resources.\n  scopeSelector.matchExpressions.operator (string)\nRepresents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.\n  scopeSelector.matchExpressions.scopeName (string)\nThe name of the scope that the selector applies to.\n  scopeSelector.matchExpressions.values ([]string)\nAn array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\n    scopes ([]string)\nA collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.\n  ResourceQuotaStatus core.v1.ResourceQuotaStatus\nResourceQuotaStatus defines the enforced hard limits and observed use.\n  hard (object)\nHard is the set of enforced hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/\n  used (object)\nUsed is the current observed total usage of the resource in the namespace.\n  ResourceQuotaList core.v1.ResourceQuotaList\nResourceQuotaList is a list of ResourceQuota items.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]ResourceQuota)\nItems is a list of ResourceQuota objects. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/\n  ","description":"","id":44,"section":"docs","tags":null,"title":"ResourceQuota (v1)","uri":"https://www.k8sref.io/docs/part5/resourcequota-v1/"},{"content":"CronJob (v1beta1) CronJob batch.v1beta1.CronJob\nCronJob represents the configuration of a single cron job.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (CronJobSpec)\nSpecification of the desired behavior of a cron job, including the schedule. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  status (CronJobStatus)\nCurrent status of a cron job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  CronJobSpec batch.v1beta1.CronJobSpec\nCronJobSpec describes how the job execution will look like and when it will actually run.\n  jobTemplate (JobTemplateSpec)\nSpecifies the job that will be created when executing a CronJob.\n  jobTemplate.metadata (ObjectMeta)\nStandard object's metadata of the jobs created from this template. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  jobTemplate.spec (JobSpec)\nSpecification of the desired behavior of the job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n    schedule (string)\nThe schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.\n  concurrencyPolicy (string)\nSpecifies how to treat concurrent executions of a Job. Valid values are: - \u0026quot;Allow\u0026quot; (default): allows CronJobs to run concurrently; - \u0026quot;Forbid\u0026quot;: forbids concurrent runs, skipping next run if previous run hasn't finished yet; - \u0026quot;Replace\u0026quot;: cancels currently running job and replaces it with a new one\n  startingDeadlineSeconds (integer)\nOptional deadline in seconds for starting the job if it misses scheduled time for any reason. Missed jobs executions will be counted as failed ones.\n  suspend (boolean)\nThis flag tells the controller to suspend subsequent executions, it does not apply to already started executions. Defaults to false.\n  successfulJobsHistoryLimit (integer)\nThe number of successful finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 3.\n  failedJobsHistoryLimit (integer)\nThe number of failed finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.\n  CronJobStatus batch.v1beta1.CronJobStatus\nCronJobStatus represents the current state of a cron job.\n  active ([]ObjectReference)\nA list of pointers to currently running jobs.\n  lastScheduleTime (Time)\nInformation when was the last time the job was successfully scheduled.\n  CronJobList batch.v1beta1.CronJobList\nCronJobList is a collection of cron jobs.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]CronJob)\nitems is the list of CronJobs.\n  ","description":"","id":45,"section":"docs","tags":null,"title":"CronJob (v1beta1)","uri":"https://www.k8sref.io/docs/part1/cronjob-v1beta1/"},{"content":"NetworkPolicy (v1) NetworkPolicy networking.v1.NetworkPolicy\nNetworkPolicy describes what network traffic is allowed for a set of Pods\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (NetworkPolicySpec)\nSpecification of the desired behavior for this NetworkPolicy.\n  NetworkPolicySpec networking.v1.NetworkPolicySpec\nNetworkPolicySpec provides the specification of a NetworkPolicy\n  egress ([]NetworkPolicyEgressRule)\nList of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8\n  egress.ports ([]NetworkPolicyPort)\nList of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.\n  egress.ports.port ()\nThe port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers.\n  egress.ports.protocol (string)\nThe protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.\n  egress.to ([]NetworkPolicyPeer)\nList of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.\n  egress.to.ipBlock (IPBlock)\nIPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.\n  egress.to.ipBlock.cidr (string)\nCIDR is a string representing the IP Block Valid examples are \u0026quot;192.168.1.1/24\u0026quot; or \u0026quot;2001:db9::/64\u0026quot;\n  egress.to.ipBlock.except ([]string)\nExcept is a slice of CIDRs that should not be included within an IP Block Valid examples are \u0026quot;192.168.1.1/24\u0026quot; or \u0026quot;2001:db9::/64\u0026quot; Except values will be rejected if they are outside the CIDR range\n  egress.to.namespaceSelector (LabelSelector)\nSelects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector.\n  egress.to.podSelector (LabelSelector)\nThis is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.\nIf NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace.\n    ingress ([]NetworkPolicyIngressRule)\nList of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)\n  ingress.from ([]NetworkPolicyPeer)\nList of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.\n  ingress.from.ipBlock (IPBlock)\nIPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.\n  ingress.from.ipBlock.cidr (string)\nCIDR is a string representing the IP Block Valid examples are \u0026quot;192.168.1.1/24\u0026quot; or \u0026quot;2001:db9::/64\u0026quot;\n  ingress.from.ipBlock.except ([]string)\nExcept is a slice of CIDRs that should not be included within an IP Block Valid examples are \u0026quot;192.168.1.1/24\u0026quot; or \u0026quot;2001:db9::/64\u0026quot; Except values will be rejected if they are outside the CIDR range\n  ingress.from.namespaceSelector (LabelSelector)\nSelects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector.\n  ingress.from.podSelector (LabelSelector)\nThis is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.\nIf NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace.\n  ingress.ports ([]NetworkPolicyPort)\nList of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.\n  ingress.ports.port ()\nThe port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers.\n  ingress.ports.protocol (string)\nThe protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.\n    podSelector (LabelSelector)\nSelects the pods to which this NetworkPolicy object applies. The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.\n  policyTypes ([]string)\nList of rule types that the NetworkPolicy relates to. Valid options are \u0026quot;Ingress\u0026quot;, \u0026quot;Egress\u0026quot;, or \u0026quot;Ingress,Egress\u0026quot;. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \u0026quot;Egress\u0026quot; ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \u0026quot;Egress\u0026quot; (since such a policy would not include an Egress section and would otherwise default to just [ \u0026quot;Ingress\u0026quot; ]). This field is beta-level in 1.8\n  NetworkPolicyList networking.v1.NetworkPolicyList\nNetworkPolicyList is a list of NetworkPolicy objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]NetworkPolicy)\nItems is a list of schema objects.\n  ","description":"","id":46,"section":"docs","tags":null,"title":"NetworkPolicy (v1)","uri":"https://www.k8sref.io/docs/part5/networkpolicy-v1/"},{"content":"PodDisruptionBudget (v1beta1) PodDisruptionBudget policy.v1beta1.PodDisruptionBudget\nPodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\n  spec (PodDisruptionBudgetSpec)\nSpecification of the desired behavior of the PodDisruptionBudget.\n  status (PodDisruptionBudgetStatus)\nMost recently observed status of the PodDisruptionBudget.\n  PodDisruptionBudgetSpec policy.v1beta1.PodDisruptionBudgetSpec\nPodDisruptionBudgetSpec is a description of a PodDisruptionBudget.\n  selector (LabelSelector)\nLabel query over pods whose evictions are managed by the disruption budget.\n  minAvailable ()\nAn eviction is allowed if at least \u0026quot;minAvailable\u0026quot; pods selected by \u0026quot;selector\u0026quot; will still be available after the eviction, i.e. even in the absence of the evicted pod. So for example you can prevent all voluntary evictions by specifying \u0026quot;100%\u0026quot;.\n  maxUnavailable ()\nAn eviction is allowed if at most \u0026quot;maxUnavailable\u0026quot; pods selected by \u0026quot;selector\u0026quot; are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with \u0026quot;minAvailable\u0026quot;.\n  PodDisruptionBudgetStatus policy.v1beta1.PodDisruptionBudgetStatus\nPodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.\n  desiredHealthy (integer)\nminimum desired number of healthy pods\n  currentHealthy (integer)\ncurrent number of healthy pods\n  expectedPods (integer)\ntotal number of pods counted by this disruption budget\n  disruptedPods (object)\nDisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn't occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions.\n  disruptionsAllowed (integer)\nNumber of pod disruptions that are currently allowed.\n  observedGeneration (integer)\nMost recent generation observed when updating this PDB status. DisruptionsAllowed and other status information is valid only if observedGeneration equals to PDB's object generation.\n  PodDisruptionBudgetList policy.v1beta1.PodDisruptionBudgetList\nPodDisruptionBudgetList is a collection of PodDisruptionBudgets.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\n  items ([]PodDisruptionBudget)\n  ","description":"","id":47,"section":"docs","tags":null,"title":"PodDisruptionBudget (v1beta1)","uri":"https://www.k8sref.io/docs/part4/poddisruptionbudget-v1beta1/"},{"content":"LocalSubjectAccessReview (v1) LocalSubjectAccessReview authorization.v1.LocalSubjectAccessReview\nLocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\n  spec (SubjectAccessReviewSpec)\nSpec holds information about the request being evaluated. spec.namespace must be equal to the namespace you made the request against. If empty, it is defaulted.\n  status (SubjectAccessReviewStatus)\nStatus is filled in by the server and indicates whether the request is allowed or not\n  ","description":"","id":48,"section":"docs","tags":null,"title":"LocalSubjectAccessReview (v1)","uri":"https://www.k8sref.io/docs/part5/localsubjectaccessreview-v1/"},{"content":"PodSecurityPolicy (v1beta1) PodSecurityPolicy policy.v1beta1.PodSecurityPolicy\nPodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (PodSecurityPolicySpec)\nspec defines the policy enforced.\n  PodSecurityPolicySpec policy.v1beta1.PodSecurityPolicySpec\nPodSecurityPolicySpec defines the policy enforced.\n  allowPrivilegeEscalation (boolean)\nallowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.\n  allowedCSIDrivers ([]AllowedCSIDriver)\nAllowedCSIDrivers is a whitelist of inline CSI drivers that must be explicitly set to be embedded within a pod spec. An empty value indicates that any CSI driver can be used for inline ephemeral volumes. This is an alpha field, and is only honored if the API server enables the CSIInlineVolume feature gate.\n allowedCSIDrivers.name (string)\nName is the registered name of the CSI driver    allowedCapabilities ([]string)\nallowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities.\n  allowedFlexVolumes ([]AllowedFlexVolume)\nallowedFlexVolumes is a whitelist of allowed Flexvolumes. Empty or nil indicates that all Flexvolumes may be used. This parameter is effective only when the usage of the Flexvolumes is allowed in the \u0026quot;volumes\u0026quot; field.\n allowedFlexVolumes.driver (string)\ndriver is the name of the Flexvolume driver.    allowedHostPaths ([]AllowedHostPath)\nallowedHostPaths is a white list of allowed host paths. Empty indicates that all host paths may be used.\n  allowedHostPaths.pathPrefix (string)\npathPrefix is the path prefix that the host volume must match. It does not support *. Trailing slashes are trimmed when validating the path prefix with a host path.\nExamples: /foo would allow /foo, /foo/ and /foo/bar /foo would not allow /food or /etc/foo\n  allowedHostPaths.readOnly (boolean)\nwhen set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly.\n    allowedProcMountTypes ([]string)\nAllowedProcMountTypes is a whitelist of allowed ProcMountTypes. Empty or nil indicates that only the DefaultProcMountType may be used. This requires the ProcMountType feature flag to be enabled.\n  allowedUnsafeSysctls ([]string)\nallowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \u0026quot;*\u0026quot; in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.\nExamples: e.g. \u0026quot;foo/\u0026quot; allows \u0026quot;foo/bar\u0026quot;, \u0026quot;foo/baz\u0026quot;, etc. e.g. \u0026quot;foo.\u0026quot; allows \u0026quot;foo.bar\u0026quot;, \u0026quot;foo.baz\u0026quot;, etc.\n  defaultAddCapabilities ([]string)\ndefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability. You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list.\n  defaultAllowPrivilegeEscalation (boolean)\ndefaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.\n  forbiddenSysctls ([]string)\nforbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \u0026quot;*\u0026quot; in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.\nExamples: e.g. \u0026quot;foo/\u0026quot; forbids \u0026quot;foo/bar\u0026quot;, \u0026quot;foo/baz\u0026quot;, etc. e.g. \u0026quot;foo.\u0026quot; forbids \u0026quot;foo.bar\u0026quot;, \u0026quot;foo.baz\u0026quot;, etc.\n  fsGroup (FSGroupStrategyOptions)\nfsGroup is the strategy that will dictate what fs group is used by the SecurityContext.\n  fsGroup.ranges ([]IDRange)\nranges are the allowed ranges of fs groups. If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs.\n  fsGroup.ranges.max (integer)\nmax is the end of the range, inclusive.\n  fsGroup.ranges.min (integer)\nmin is the start of the range, inclusive.\n  fsGroup.rule (string)\nrule is the strategy that will dictate what FSGroup is used in the SecurityContext.\n    hostIPC (boolean)\nhostIPC determines if the policy allows the use of HostIPC in the pod spec.\n  hostNetwork (boolean)\nhostNetwork determines if the policy allows the use of HostNetwork in the pod spec.\n  hostPID (boolean)\nhostPID determines if the policy allows the use of HostPID in the pod spec.\n  hostPorts ([]HostPortRange)\nhostPorts determines which host port ranges are allowed to be exposed.\n  hostPorts.max (integer)\nmax is the end of the range, inclusive.\n  hostPorts.min (integer)\nmin is the start of the range, inclusive.\n    privileged (boolean)\nprivileged determines if a pod can request to be run as privileged.\n  readOnlyRootFilesystem (boolean)\nreadOnlyRootFilesystem when set to true will force containers to run with a read only root file system. If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.\n  requiredDropCapabilities ([]string)\nrequiredDropCapabilities are the capabilities that will be dropped from the container. These are required to be dropped and cannot be added.\n  runAsGroup (RunAsGroupStrategyOptions)\nRunAsGroup is the strategy that will dictate the allowable RunAsGroup values that may be set. If this field is omitted, the pod's RunAsGroup can take any value. This field requires the RunAsGroup feature gate to be enabled.\n  runAsGroup.ranges ([]IDRange)\nranges are the allowed ranges of gids that may be used. If you would like to force a single gid then supply a single range with the same start and end. Required for MustRunAs.\n  runAsGroup.ranges.max (integer)\nmax is the end of the range, inclusive.\n  runAsGroup.ranges.min (integer)\nmin is the start of the range, inclusive.\n  runAsGroup.rule (string)\nrule is the strategy that will dictate the allowable RunAsGroup values that may be set.\n    runAsUser (RunAsUserStrategyOptions)\nrunAsUser is the strategy that will dictate the allowable RunAsUser values that may be set.\n  runAsUser.ranges ([]IDRange)\nranges are the allowed ranges of uids that may be used. If you would like to force a single uid then supply a single range with the same start and end. Required for MustRunAs.\n  runAsUser.ranges.max (integer)\nmax is the end of the range, inclusive.\n  runAsUser.ranges.min (integer)\nmin is the start of the range, inclusive.\n  runAsUser.rule (string)\nrule is the strategy that will dictate the allowable RunAsUser values that may be set.\n    runtimeClass (RuntimeClassStrategyOptions)\nruntimeClass is the strategy that will dictate the allowable RuntimeClasses for a pod. If this field is omitted, the pod's runtimeClassName field is unrestricted. Enforcement of this field depends on the RuntimeClass feature gate being enabled.\n  runtimeClass.allowedRuntimeClassNames ([]string)\nallowedRuntimeClassNames is a whitelist of RuntimeClass names that may be specified on a pod. A value of \u0026quot;*\u0026quot; means that any RuntimeClass name is allowed, and must be the only item in the list. An empty list requires the RuntimeClassName field to be unset.\n  runtimeClass.defaultRuntimeClassName (string)\ndefaultRuntimeClassName is the default RuntimeClassName to set on the pod. The default MUST be allowed by the allowedRuntimeClassNames list. A value of nil does not mutate the Pod.\n    seLinux (SELinuxStrategyOptions)\nseLinux is the strategy that will dictate the allowable labels that may be set.\n  seLinux.rule (string)\nrule is the strategy that will dictate the allowable labels that may be set.\n  seLinux.seLinuxOptions (SELinuxOptions)\nseLinuxOptions required to run as; required for MustRunAs More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n  seLinux.seLinuxOptions.level (string)\nLevel is SELinux level label that applies to the container.\n  seLinux.seLinuxOptions.role (string)\nRole is a SELinux role label that applies to the container.\n  seLinux.seLinuxOptions.type (string)\nType is a SELinux type label that applies to the container.\n  seLinux.seLinuxOptions.user (string)\nUser is a SELinux user label that applies to the container.\n    supplementalGroups (SupplementalGroupsStrategyOptions)\nsupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.\n  supplementalGroups.ranges ([]IDRange)\nranges are the allowed ranges of supplemental groups. If you would like to force a single supplemental group then supply a single range with the same start and end. Required for MustRunAs.\n  supplementalGroups.ranges.max (integer)\nmax is the end of the range, inclusive.\n  supplementalGroups.ranges.min (integer)\nmin is the start of the range, inclusive.\n  supplementalGroups.rule (string)\nrule is the strategy that will dictate what supplemental groups is used in the SecurityContext.\n    volumes ([]string)\nvolumes is a white list of allowed volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use '*'.\n  PodSecurityPolicyList policy.v1beta1.PodSecurityPolicyList\nPodSecurityPolicyList is a list of PodSecurityPolicy objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]PodSecurityPolicy)\nitems is a list of schema objects.\n  ","description":"","id":49,"section":"docs","tags":null,"title":"PodSecurityPolicy (v1beta1)","uri":"https://www.k8sref.io/docs/part4/podsecuritypolicy-v1beta1/"},{"content":"PodPreset (v1alpha1) PodPreset settings.v1alpha1.PodPreset\nPodPreset is a policy resource that defines additional runtime requirements for a Pod.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\n  spec (PodPresetSpec)\n  PodPresetSpec settings.v1alpha1.PodPresetSpec\nPodPresetSpec is a description of a pod preset.\n  env ([]EnvVar)\nEnv defines the collection of EnvVar to inject into containers.\n  env.name (string)\nName of the environment variable. Must be a C_IDENTIFIER.\n  env.value (string)\nVariable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \u0026quot;\u0026quot;.\n  env.valueFrom (EnvVarSource)\nSource for the environment variable's value. Cannot be used if value is not empty.\n  env.valueFrom.configMapKeyRef (ConfigMapKeySelector)\nSelects a key of a ConfigMap.\n  env.valueFrom.configMapKeyRef.key (string)\nThe key to select.\n  env.valueFrom.configMapKeyRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  env.valueFrom.configMapKeyRef.optional (boolean)\nSpecify whether the ConfigMap or its key must be defined\n  env.valueFrom.fieldRef (ObjectFieldSelector)\nSelects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\n  env.valueFrom.fieldRef.apiVersion (string)\nVersion of the schema the FieldPath is written in terms of, defaults to \u0026quot;v1\u0026quot;.\n  env.valueFrom.fieldRef.fieldPath (string)\nPath of the field to select in the specified API version.\n  env.valueFrom.resourceFieldRef (ResourceFieldSelector)\nSelects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.\n  env.valueFrom.resourceFieldRef.containerName (string)\nContainer name: required for volumes, optional for env vars\n  env.valueFrom.resourceFieldRef.divisor (Quantity)\nSpecifies the output format of the exposed resources, defaults to \u0026quot;1\u0026quot;\n  env.valueFrom.resourceFieldRef.resource (string)\nRequired: resource to select\n  env.valueFrom.secretKeyRef (SecretKeySelector)\nSelects a key of a secret in the pod's namespace\n  env.valueFrom.secretKeyRef.key (string)\nThe key of the secret to select from. Must be a valid secret key.\n  env.valueFrom.secretKeyRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  env.valueFrom.secretKeyRef.optional (boolean)\nSpecify whether the Secret or its key must be defined\n    envFrom ([]EnvFromSource)\nEnvFrom defines the collection of EnvFromSource to inject into containers.\n  envFrom.configMapRef (ConfigMapEnvSource)\nThe ConfigMap to select from\n  envFrom.configMapRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  envFrom.configMapRef.optional (boolean)\nSpecify whether the ConfigMap must be defined\n  envFrom.prefix (string)\nAn optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.\n  envFrom.secretRef (SecretEnvSource)\nThe Secret to select from\n  envFrom.secretRef.name (string)\nName of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n  envFrom.secretRef.optional (boolean)\nSpecify whether the Secret must be defined\n    selector (LabelSelector)\nSelector is a label query over a set of resources, in this case pods. Required.\n  volumeMounts ([]VolumeMount)\nVolumeMounts defines the collection of VolumeMount to inject into containers.\n  volumeMounts.mountPath (string)\nPath within the container at which the volume should be mounted. Must not contain ':'.\n  volumeMounts.mountPropagation (string)\nmountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.\n  volumeMounts.name (string)\nThis must match the Name of a Volume.\n  volumeMounts.readOnly (boolean)\nMounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.\n  volumeMounts.subPath (string)\nPath within the volume from which the container's volume should be mounted. Defaults to \u0026quot;\u0026quot; (volume's root).\n  volumeMounts.subPathExpr (string)\nExpanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \u0026quot;\u0026quot; (volume's root). SubPathExpr and SubPath are mutually exclusive.\n    volumes ([]Volume)\nVolumes defines the collection of Volume to inject into the pod.\n  PodPresetList settings.v1alpha1.PodPresetList\nPodPresetList is a list of PodPreset objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]PodPreset)\nItems is a list of schema objects.\n  ","description":"","id":50,"section":"docs","tags":null,"title":"PodPreset (v1alpha1)","uri":"https://www.k8sref.io/docs/part4/podpreset-v1alpha1/"},{"content":"SelfSubjectAccessReview (v1) SelfSubjectAccessReview authorization.v1.SelfSubjectAccessReview\nSelfSubjectAccessReview checks whether or the current user can perform an action. Not filling in a spec.namespace means \u0026quot;in all namespaces\u0026quot;. Self is a special case, because users should always be able to check whether they can perform an action\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\n  spec (SelfSubjectAccessReviewSpec)\nSpec holds information about the request being evaluated. user and groups must be empty\n  status (SubjectAccessReviewStatus)\nStatus is filled in by the server and indicates whether the request is allowed or not\n  SelfSubjectAccessReviewSpec authorization.v1.SelfSubjectAccessReviewSpec\nSelfSubjectAccessReviewSpec is a description of the access request. Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set\n  nonResourceAttributes (NonResourceAttributes)\nNonResourceAttributes describes information for a non-resource access request\n  nonResourceAttributes.path (string)\nPath is the URL path of the request\n  nonResourceAttributes.verb (string)\nVerb is the standard HTTP verb\n    resourceAttributes (ResourceAttributes)\nResourceAuthorizationAttributes describes information for a resource access request\n  resourceAttributes.group (string)\nGroup is the API Group of the Resource. \u0026quot;*\u0026quot; means all.\n  resourceAttributes.name (string)\nName is the name of the resource being requested for a \u0026quot;get\u0026quot; or deleted for a \u0026quot;delete\u0026quot;. \u0026quot;\u0026quot; (empty) means all.\n  resourceAttributes.namespace (string)\nNamespace is the namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces \u0026quot;\u0026quot; (empty) is defaulted for LocalSubjectAccessReviews \u0026quot;\u0026quot; (empty) is empty for cluster-scoped resources \u0026quot;\u0026quot; (empty) means \u0026quot;all\u0026quot; for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview\n  resourceAttributes.resource (string)\nResource is one of the existing resource types. \u0026quot;*\u0026quot; means all.\n  resourceAttributes.subresource (string)\nSubresource is one of the existing resource types. \u0026quot;\u0026quot; means none.\n  resourceAttributes.verb (string)\nVerb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy. \u0026quot;*\u0026quot; means all.\n  resourceAttributes.version (string)\nVersion is the API Version of the Resource. \u0026quot;*\u0026quot; means all.\n    ","description":"","id":51,"section":"docs","tags":null,"title":"SelfSubjectAccessReview (v1)","uri":"https://www.k8sref.io/docs/part5/selfsubjectaccessreview-v1/"},{"content":"SelfSubjectRulesReview (v1) SelfSubjectRulesReview authorization.v1.SelfSubjectRulesReview\nSelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\n  spec (SelfSubjectRulesReviewSpec)\nSpec holds information about the request being evaluated.\n  status (SubjectRulesReviewStatus)\nStatus is filled in by the server and indicates the set of actions a user can perform.\n  SelfSubjectRulesReviewSpec authorization.v1.SelfSubjectRulesReviewSpec\n namespace (string)\nNamespace to evaluate rules for. Required.  SubjectRulesReviewStatus authorization.v1.SubjectRulesReviewStatus\nSubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.\n  evaluationError (string)\nEvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.\n  incomplete (boolean)\nIncomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.\n  nonResourceRules ([]NonResourceRule)\nNonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.\n  nonResourceRules.nonResourceURLs ([]string)\nNonResourceURLs is a set of partial urls that a user should have access to. s are allowed, but only as the full, final step in the path. \u0026quot;\u0026quot; means all.\n  nonResourceRules.verbs ([]string)\nVerb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options. \u0026quot;*\u0026quot; means all.\n    resourceRules ([]ResourceRule)\nResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.\n  resourceRules.apiGroups ([]string)\nAPIGroups is the name of the APIGroup that contains the resources. If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed. \u0026quot;*\u0026quot; means all.\n  resourceRules.resourceNames ([]string)\nResourceNames is an optional white list of names that the rule applies to. An empty set means that everything is allowed. \u0026quot;*\u0026quot; means all.\n  resourceRules.resources ([]string)\nResources is a list of resources this rule applies to. \u0026quot;\u0026quot; means all in the specified apiGroups.\n\u0026quot;/foo\u0026quot; represents the subresource 'foo' for all resources in the specified apiGroups.\n  resourceRules.verbs ([]string)\nVerb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy. \u0026quot;*\u0026quot; means all.\n    ","description":"","id":52,"section":"docs","tags":null,"title":"SelfSubjectRulesReview (v1)","uri":"https://www.k8sref.io/docs/part5/selfsubjectrulesreview-v1/"},{"content":"SubjectAccessReview (v1) SubjectAccessReview authorization.v1.SubjectAccessReview\nSubjectAccessReview checks whether or not a user or group can perform an action.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\n  spec (SubjectAccessReviewSpec)\nSpec holds information about the request being evaluated\n  status (SubjectAccessReviewStatus)\nStatus is filled in by the server and indicates whether the request is allowed or not\n  SubjectAccessReviewSpec authorization.v1.SubjectAccessReviewSpec\nSubjectAccessReviewSpec is a description of the access request. Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set\n  extra (object)\nExtra corresponds to the user.Info.GetExtra() method from the authenticator. Since that is input to the authorizer it needs a reflection here.\n  groups ([]string)\nGroups is the groups you're testing for.\n  nonResourceAttributes (NonResourceAttributes)\nNonResourceAttributes describes information for a non-resource access request\n  nonResourceAttributes.path (string)\nPath is the URL path of the request\n  nonResourceAttributes.verb (string)\nVerb is the standard HTTP verb\n    resourceAttributes (ResourceAttributes)\nResourceAuthorizationAttributes describes information for a resource access request\n  resourceAttributes.group (string)\nGroup is the API Group of the Resource. \u0026quot;*\u0026quot; means all.\n  resourceAttributes.name (string)\nName is the name of the resource being requested for a \u0026quot;get\u0026quot; or deleted for a \u0026quot;delete\u0026quot;. \u0026quot;\u0026quot; (empty) means all.\n  resourceAttributes.namespace (string)\nNamespace is the namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces \u0026quot;\u0026quot; (empty) is defaulted for LocalSubjectAccessReviews \u0026quot;\u0026quot; (empty) is empty for cluster-scoped resources \u0026quot;\u0026quot; (empty) means \u0026quot;all\u0026quot; for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview\n  resourceAttributes.resource (string)\nResource is one of the existing resource types. \u0026quot;*\u0026quot; means all.\n  resourceAttributes.subresource (string)\nSubresource is one of the existing resource types. \u0026quot;\u0026quot; means none.\n  resourceAttributes.verb (string)\nVerb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy. \u0026quot;*\u0026quot; means all.\n  resourceAttributes.version (string)\nVersion is the API Version of the Resource. \u0026quot;*\u0026quot; means all.\n    uid (string)\nUID information about the requesting user.\n  user (string)\nUser is the user you're testing for. If you specify \u0026quot;User\u0026quot; but not \u0026quot;Groups\u0026quot;, then is it interpreted as \u0026quot;What if User were not a member of any groups\n  SubjectAccessReviewStatus authorization.v1.SubjectAccessReviewStatus\nSubjectAccessReviewStatus\n  allowed (boolean)\nAllowed is required. True if the action would be allowed, false otherwise.\n  denied (boolean)\nDenied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true.\n  evaluationError (string)\nEvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.\n  reason (string)\nReason is optional. It indicates why a request was allowed or denied.\n  ","description":"","id":53,"section":"docs","tags":null,"title":"SubjectAccessReview (v1)","uri":"https://www.k8sref.io/docs/part5/subjectaccessreview-v1/"},{"content":"TokenRequest (v1) TokenRequest authentication.v1.TokenRequest\nTokenRequest requests a token for a given service account.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\n  spec (TokenRequestSpec)\n  status (TokenRequestStatus)\n  TokenRequestSpec authentication.v1.TokenRequestSpec\nTokenRequestSpec contains client provided parameters of a token request.\n  audiences ([]string)\nAudiences are the intendend audiences of the token. A recipient of a token must identitfy themself with an identifier in the list of audiences of the token, and otherwise should reject the token. A token issued for multiple audiences may be used to authenticate against any of the audiences listed but implies a high degree of trust between the target audiences.\n  boundObjectRef (BoundObjectReference)\nBoundObjectRef is a reference to an object that the token will be bound to. The token will only be valid for as long as the bound object exists. NOTE: The API server's TokenReview endpoint will validate the BoundObjectRef, but other audiences may not. Keep ExpirationSeconds small if you want prompt revocation.\n  expirationSeconds (integer)\nExpirationSeconds is the requested duration of validity of the request. The token issuer may return a token with a different validity duration so a client needs to check the 'expiration' field in a response.\n  TokenRequestStatus authentication.v1.TokenRequestStatus\nTokenRequestStatus is the result of a token request.\n  expirationTimestamp (Time)\nExpirationTimestamp is the time of expiration of the returned token.\n  token (string)\nToken is the opaque bearer token.\n  ","description":"","id":54,"section":"docs","tags":null,"title":"TokenRequest (v1)","uri":"https://www.k8sref.io/docs/part5/tokenrequest-v1/"},{"content":"TokenReview (v1) TokenReview authentication.v1.TokenReview\nTokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\n  spec (TokenReviewSpec)\nSpec holds information about the request being evaluated\n  status (TokenReviewStatus)\nStatus is filled in by the server and indicates whether the request can be authenticated.\n  TokenReviewSpec authentication.v1.TokenReviewSpec\nTokenReviewSpec is a description of the token authentication request.\n  audiences ([]string)\nAudiences is a list of the identifiers that the resource server presented with the token identifies as. Audience-aware token authenticators will verify that the token was intended for at least one of the audiences in this list. If no audiences are provided, the audience will default to the audience of the Kubernetes apiserver.\n  token (string)\nToken is the opaque bearer token.\n  TokenReviewStatus authentication.v1.TokenReviewStatus\nTokenReviewStatus is the result of the token authentication request.\n  audiences ([]string)\nAudiences are audience identifiers chosen by the authenticator that are compatible with both the TokenReview and token. An identifier is any identifier in the intersection of the TokenReviewSpec audiences and the token's audiences. A client of the TokenReview API that sets the spec.audiences field should validate that a compatible audience identifier is returned in the status.audiences field to ensure that the TokenReview server is audience aware. If a TokenReview returns an empty status.audience field where status.authenticated is \u0026quot;true\u0026quot;, the token is valid against the audience of the Kubernetes API server.\n  authenticated (boolean)\nAuthenticated indicates that the token was associated with a known user.\n  error (string)\nError indicates that the token couldn't be checked\n  user (UserInfo)\nUser is the UserInfo associated with the provided token.\n  user.extra (object)\nAny additional information provided by the authenticator.\n  user.groups ([]string)\nThe names of groups this user is a part of.\n  user.uid (string)\nA unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.\n  user.username (string)\nThe name that uniquely identifies this user among all active users.\n    ","description":"","id":55,"section":"docs","tags":null,"title":"TokenReview (v1)","uri":"https://www.k8sref.io/docs/part5/tokenreview-v1/"},{"content":"APIService (v1) APIService apiregistration.v1.APIService\nAPIService represents a server for a particular GroupVersion. Name must be \u0026quot;version.group\u0026quot;.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\n  spec (APIServiceSpec)\nSpec contains information for locating and communicating with a server\n  status (APIServiceStatus)\nStatus contains derived information about an API server\n  APIServiceSpec apiregistration.v1.APIServiceSpec\nAPIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.\n  caBundle (string)\nCABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate. If unspecified, system trust roots on the apiserver are used.\n  group (string)\nGroup is the API group name this server hosts\n  groupPriorityMinimum (integer)\nGroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object. (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s\n  insecureSkipTLSVerify (boolean)\nInsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged. You should use the CABundle instead.\n  service (ServiceReference)\nService is a reference to the service for this API server. It must communicate on port 443 If the Service is nil, that means the handling for the API groupversion is handled locally on this server. The call will simply delegate to the normal handler chain to be fulfilled.\n  version (string)\nVersion is the API version this server hosts. For example, \u0026quot;v1\u0026quot;\n  versionPriority (integer)\nVersionPriority controls the ordering of this API version inside of its group. Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is \u0026quot;kube-like\u0026quot;, it will sort above non \u0026quot;kube-like\u0026quot; version strings, which are ordered lexicographically. \u0026quot;Kube-like\u0026quot; versions start with a \u0026quot;v\u0026quot;, then are followed by a number (the major version), then optionally the string \u0026quot;alpha\u0026quot; or \u0026quot;beta\u0026quot; and another number (the minor version). These are sorted first by GA \u0026gt; beta \u0026gt; alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.\n  APIServiceStatus apiregistration.v1.APIServiceStatus\nAPIServiceStatus contains derived information about an API server\n  conditions ([]APIServiceCondition)\nCurrent service state of apiService.\n  conditions.lastTransitionTime (Time)\nLast time the condition transitioned from one status to another.\n  conditions.message (string)\nHuman-readable message indicating details about last transition.\n  conditions.reason (string)\nUnique, one-word, CamelCase reason for the condition's last transition.\n  conditions.status (string)\nStatus is the status of the condition. Can be True, False, Unknown.\n  conditions.type (string)\nType is the type of the condition.\n    APIServiceList apiregistration.v1.APIServiceList\nAPIServiceList is a list of APIService objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\n  items ([]APIService)\n  ","description":"","id":56,"section":"docs","tags":null,"title":"APIService (v1)","uri":"https://www.k8sref.io/docs/part5/apiservice-v1/"},{"content":"ComponentStatus (v1) ComponentStatus core.v1.ComponentStatus\nComponentStatus (and ComponentStatusList) holds the cluster validation info.\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  Specs   conditions ([]ComponentCondition)\nList of component conditions observed\n  conditions.error (string)\nCondition error code for a component. For example, a health check error code.\n  conditions.message (string)\nMessage about the condition for a component. For example, information about a health check.\n  conditions.status (string)\nStatus of the condition for a component. Valid values for \u0026quot;Healthy\u0026quot;: \u0026quot;True\u0026quot;, \u0026quot;False\u0026quot;, or \u0026quot;Unknown\u0026quot;.\n  conditions.type (string)\nType of condition for a component. Valid value: \u0026quot;Healthy\u0026quot;\n    ComponentStatusList core.v1.ComponentStatusList\nStatus of all the conditions for the component as a list of ComponentStatus objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  items ([]ComponentStatus)\nList of ComponentStatus objects.\n  ","description":"","id":57,"section":"docs","tags":null,"title":"ComponentStatus (v1)","uri":"https://www.k8sref.io/docs/part5/componentstatus-v1/"},{"content":"Lease (v1) Lease coordination.v1.Lease\nLease defines a lease concept.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  spec (LeaseSpec)\nSpecification of the Lease. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n  LeaseSpec coordination.v1.LeaseSpec\nLeaseSpec is a specification of a Lease.\n  acquireTime (MicroTime)\nacquireTime is a time when the current lease was acquired.\n  holderIdentity (string)\nholderIdentity contains the identity of the holder of a current lease.\n  leaseDurationSeconds (integer)\nleaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed RenewTime.\n  leaseTransitions (integer)\nleaseTransitions is the number of transitions of a lease between holders.\n  renewTime (MicroTime)\nrenewTime is a time when the current holder of a lease has last updated the lease.\n  LeaseList coordination.v1.LeaseList\nLeaseList is a list of Lease objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]Lease)\nItems is a list of schema objects.\n  ","description":"","id":58,"section":"docs","tags":null,"title":"Lease (v1)","uri":"https://www.k8sref.io/docs/part5/lease-v1/"},{"content":"RuntimeClass (v1beta1) RuntimeClass node.v1beta1.RuntimeClass\nRuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are (currently) manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod. For more details, see https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md\nResource metadata   apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  Specs   handler (string)\nHandler specifies the underlying runtime and configuration that the CRI implementation will use to handle pods of this class. The possible values are specific to the node \u0026amp; CRI configuration. It is assumed that all handlers are available on every node, and handlers of the same name are equivalent on every node. For example, a handler called \u0026quot;runc\u0026quot; might specify that the runc OCI runtime (using native Linux containers) will be used to run the containers in a pod. The Handler must conform to the DNS Label (RFC 1123) requirements, and is immutable.\n  overhead (Overhead)\nOverhead represents the resource overhead associated with running a pod for a given RuntimeClass. For more details, see https://git.k8s.io/enhancements/keps/sig-node/20190226-pod-overhead.md This field is alpha-level as of Kubernetes v1.15, and is only honored by servers that enable the PodOverhead feature.\n overhead.podFixed (object)\nPodFixed represents the fixed resource overhead associated with running a pod.    scheduling (Scheduling)\nScheduling holds the scheduling constraints to ensure that pods running with this RuntimeClass are scheduled to nodes that support it. If scheduling is nil, this RuntimeClass is assumed to be supported by all nodes.\n  scheduling.nodeSelector (object)\nnodeSelector lists labels that must be present on nodes that support this RuntimeClass. Pods using this RuntimeClass can only be scheduled to a node matched by this selector. The RuntimeClass nodeSelector is merged with a pod's existing nodeSelector. Any conflicts will cause the pod to be rejected in admission.\n  scheduling.tolerations ([]Toleration)\ntolerations are appended (excluding duplicates) to pods running with this RuntimeClass during admission, effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.\n  scheduling.tolerations.effect (string)\nEffect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n  scheduling.tolerations.key (string)\nKey is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.\n  scheduling.tolerations.operator (string)\nOperator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n  scheduling.tolerations.tolerationSeconds (integer)\nTolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.\n  scheduling.tolerations.value (string)\nValue is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.\n    RuntimeClassList node.v1beta1.RuntimeClassList\nRuntimeClassList is a list of RuntimeClass objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nStandard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  items ([]RuntimeClass)\nItems is a list of schema objects.\n  ","description":"","id":59,"section":"docs","tags":null,"title":"RuntimeClass (v1beta1)","uri":"https://www.k8sref.io/docs/part5/runtimeclass-v1beta1/"},{"content":"CertificateSigningRequest (v1beta1) CertificateSigningRequest certificates.v1beta1.CertificateSigningRequest\nDescribes a certificate signing request\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\n  spec (CertificateSigningRequestSpec)\nThe certificate request itself and any additional information.\n  status (CertificateSigningRequestStatus)\nDerived information about the request.\n  CertificateSigningRequestSpec certificates.v1beta1.CertificateSigningRequestSpec\nThis information is immutable after the request is created. Only the Request and Usages fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users.\n  extra (object)\nExtra information about the requesting user. See user.Info interface for details.\n  groups ([]string)\nGroup information about the requesting user. See user.Info interface for details.\n  request (string)\nBase64-encoded PKCS#10 CSR data\n  signerName (string)\nRequested signer for the request. It is a qualified name in the form: scope-hostname.io/name. If empty, it will be defaulted:\n If it's a kubelet client certificate, it is assigned\n\u0026quot;kubernetes.io/kube-apiserver-client-kubelet\u0026quot;. If it's a kubelet serving certificate, it is assigned\n\u0026quot;kubernetes.io/kubelet-serving\u0026quot;. Otherwise, it is assigned \u0026quot;kubernetes.io/legacy-unknown\u0026quot;.\nDistribution of trust for signers happens out of band. You can select on this field using spec.signerName.    uid (string)\nUID information about the requesting user. See user.Info interface for details.\n  usages ([]string)\nallowedUsages specifies a set of usage contexts the key will be valid for. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3\nhttps://tools.ietf.org/html/rfc5280#section-4.2.1.12\n  username (string)\nInformation about the requesting user. See user.Info interface for details.\n  CertificateSigningRequestStatus certificates.v1beta1.CertificateSigningRequestStatus\n  certificate (string)\nIf request was approved, the controller will place the issued certificate here.\n  conditions ([]CertificateSigningRequestCondition)\nConditions applied to the request, such as approval or denial.\n  conditions.lastUpdateTime (Time)\ntimestamp for the last update to this condition\n  conditions.message (string)\nhuman readable message with details about the request state\n  conditions.reason (string)\nbrief reason for the request state\n  conditions.type (string)\nrequest approval state, currently Approved or Denied.\n    CertificateSigningRequestList certificates.v1beta1.CertificateSigningRequestList\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\n  items ([]CertificateSigningRequest)\n  ","description":"","id":60,"section":"docs","tags":null,"title":"CertificateSigningRequest (v1beta1)","uri":"https://www.k8sref.io/docs/part5/certificatesigningrequest-v1beta1/"},{"content":"AuditSink (v1alpha1) AuditSink auditregistration.v1alpha1.AuditSink\nAuditSink represents a cluster level audit sink\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\n  spec (AuditSinkSpec)\nSpec defines the audit configuration spec\n  AuditSinkSpec auditregistration.v1alpha1.AuditSinkSpec\nAuditSinkSpec holds the spec for the audit sink\n  policy (Policy)\nPolicy defines the policy for selecting which events should be sent to the webhook required\n  policy.level (string)\nThe Level that all requests are recorded at. available options: None, Metadata, Request, RequestResponse required\n  policy.stages ([]string)\nStages is a list of stages for which events are created.\n    webhook (Webhook)\nWebhook to send events required\n  webhook.clientConfig (WebhookClientConfig)\nClientConfig holds the connection parameters for the webhook required\n  webhook.clientConfig.caBundle (string)\ncaBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.\n  webhook.clientConfig.service (ServiceReference)\nservice is a reference to the service for this webhook. Either service or url must be specified.\nIf the webhook is running within the cluster, then you should use service.\n  webhook.clientConfig.url (string)\nurl gives the location of the webhook, in standard URL form (scheme://host:port/path). Exactly one of url or service must be specified.\nThe host should not refer to a service running in the cluster; use the service field instead. The host might be resolved via external DNS in some apiservers (e.g., kube-apiserver cannot resolve in-cluster DNS as that would be a layering violation). host may also be an IP address.\nPlease note that using localhost or 127.0.0.1 as a host is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\nThe scheme must be \u0026quot;https\u0026quot;; the URL must begin with \u0026quot;https://\u0026quot;.\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\nAttempting to use a user or basic auth e.g. \u0026quot;user:password@\u0026quot; is not allowed. Fragments (\u0026quot;#\u0026hellip;\u0026quot;) and query parameters (\u0026quot;?\u0026hellip;\u0026quot;) are not allowed, either.\n  webhook.throttle (WebhookThrottleConfig)\nThrottle holds the options for throttling the webhook\n  webhook.throttle.burst (integer)\nThrottleBurst is the maximum number of events sent at the same moment default 15 QPS\n  webhook.throttle.qps (integer)\nThrottleQPS maximum number of batches per second default 10 QPS\n    AuditSinkList auditregistration.v1alpha1.AuditSinkList\nAuditSinkList is a list of AuditSink items.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\n  items ([]AuditSink)\nList of audit configurations.\n  ","description":"","id":61,"section":"docs","tags":null,"title":"AuditSink (v1alpha1)","uri":"https://www.k8sref.io/docs/part5/auditsink-v1alpha1/"},{"content":"FlowSchema (v1alpha1) FlowSchema flowcontrol.v1alpha1.FlowSchema\nFlowSchema defines the schema of a group of flows. Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a \u0026quot;flow distinguisher\u0026quot;.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nmetadata is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n  spec (FlowSchemaSpec)\nspec is the specification of the desired behavior of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\n  status (FlowSchemaStatus)\nstatus is the current status of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\n  FlowSchemaSpec flowcontrol.v1alpha1.FlowSchemaSpec\nFlowSchemaSpec describes how the FlowSchema's specification looks like.\n  priorityLevelConfiguration (PriorityLevelConfigurationReference)\npriorityLevelConfiguration should reference a PriorityLevelConfiguration in the cluster. If the reference cannot be resolved, the FlowSchema will be ignored and marked as invalid in its status. Required.\n priorityLevelConfiguration.name (string)\nname is the name of the priority level configuration being referenced Required.    matchingPrecedence (integer)\nmatchingPrecedence is used to choose among the FlowSchemas that match a given request. The chosen FlowSchema is among those with the numerically lowest (which we take to be logically highest) MatchingPrecedence. Each MatchingPrecedence value must be ranged in [1,10000]. Note that if the precedence is not specified, it will be set to 1000 as default.\n  distinguisherMethod (FlowDistinguisherMethod)\ndistinguisherMethod defines how to compute the flow distinguisher for requests that match this schema. nil specifies that the distinguisher is disabled and thus will always be the empty string.\n distinguisherMethod.type (string)\ntype is the type of flow distinguisher method The supported types are \u0026quot;ByUser\u0026quot; and \u0026quot;ByNamespace\u0026quot;. Required.    rules ([]PolicyRulesWithSubjects)\nrules describes which requests will match this flow schema. This FlowSchema matches a request if and only if at least one member of rules matches the request. if it is an empty slice, there will be no requests matching the FlowSchema.\n  rules.nonResourceRules ([]NonResourcePolicyRule)\nnonResourceRules is a list of NonResourcePolicyRules that identify matching requests according to their verb and the target non-resource URL.\n  rules.nonResourceRules.nonResourceURLs ([]string)\nnonResourceURLs is a set of url prefixes that a user should have access to and may not be empty. For example:\n \u0026quot;/healthz\u0026quot; is legal \u0026quot;/hea*\u0026quot; is illegal \u0026quot;/hea\u0026quot; is legal but matches nothing \u0026quot;/hea/*\u0026quot; also matches nothing \u0026quot;/healthz/\u0026quot; matches all per-component health checks.\n\u0026quot;\u0026quot; matches all non-resource urls. if it is present, it must be the only entry. Required.    rules.nonResourceRules.verbs ([]string)\nverbs is a list of matching verbs and may not be empty. \u0026quot;*\u0026quot; matches all verbs. If it is present, it must be the only entry. Required.\n  rules.resourceRules ([]ResourcePolicyRule)\nresourceRules is a slice of ResourcePolicyRules that identify matching requests according to their verb and the target resource. At least one of resourceRules and nonResourceRules has to be non-empty.\n  rules.resourceRules.apiGroups ([]string)\napiGroups is a list of matching API groups and may not be empty. \u0026quot;*\u0026quot; matches all API groups and, if present, must be the only entry. Required.\n  rules.resourceRules.clusterScope (boolean)\nclusterScope indicates whether to match requests that do not specify a namespace (which happens either because the resource is not namespaced or the request targets all namespaces). If this field is omitted or false then the namespaces field must contain a non-empty list.\n  rules.resourceRules.namespaces ([]string)\nnamespaces is a list of target namespaces that restricts matches. A request that specifies a target namespace matches only if either (a) this list contains that target namespace or (b) this list contains \u0026quot;\u0026quot;. Note that \u0026quot;\u0026quot; matches any specified namespace but does not match a request that does not specify a namespace (see the clusterScope field for that). This list may be empty, but only if clusterScope is true.\n  rules.resourceRules.resources ([]string)\nresources is a list of matching resources (i.e., lowercase and plural) with, if desired, subresource. For example, [ \u0026quot;services\u0026quot;, \u0026quot;nodes/status\u0026quot; ]. This list may not be empty. \u0026quot;*\u0026quot; matches all resources and, if present, must be the only entry. Required.\n  rules.resourceRules.verbs ([]string)\nverbs is a list of matching verbs and may not be empty. \u0026quot;*\u0026quot; matches all verbs and, if present, must be the only entry. Required.\n  rules.subjects ([]Subject)\nsubjects is the list of normal user, serviceaccount, or group that this rule cares about. There must be at least one member in this slice. A slice that includes both the system:authenticated and system:unauthenticated user groups matches every request. Required.\n  rules.subjects.group (GroupSubject)\n  rules.subjects.group.name (string)\nname is the user group that matches, or \u0026quot;*\u0026quot; to match all user groups. See https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go for some well-known group names. Required.\n  rules.subjects.kind (string)\nRequired\n  rules.subjects.serviceAccount (ServiceAccountSubject)\n  rules.subjects.serviceAccount.name (string)\nname is the name of matching ServiceAccount objects, or \u0026quot;*\u0026quot; to match regardless of name. Required.\n  rules.subjects.serviceAccount.namespace (string)\nnamespace is the namespace of matching ServiceAccount objects. Required.\n  rules.subjects.user (UserSubject)\n  rules.subjects.user.name (string)\nname is the username that matches, or \u0026quot;*\u0026quot; to match all usernames. Required.\n    FlowSchemaStatus flowcontrol.v1alpha1.FlowSchemaStatus\nFlowSchemaStatus represents the current state of a FlowSchema.\n  conditions ([]FlowSchemaCondition)\nconditions is a list of the current states of FlowSchema.\n  conditions.lastTransitionTime (Time)\nlastTransitionTime is the last time the condition transitioned from one status to another.\n  conditions.message (string)\nmessage is a human-readable message indicating details about last transition.\n  conditions.reason (string)\nreason is a unique, one-word, CamelCase reason for the condition's last transition.\n  conditions.status (string)\nstatus is the status of the condition. Can be True, False, Unknown. Required.\n  conditions.type (string)\ntype is the type of the condition. Required.\n    FlowSchemaList flowcontrol.v1alpha1.FlowSchemaList\nFlowSchemaList is a list of FlowSchema objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nmetadata is the standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n  items ([]FlowSchema)\nitems is a list of FlowSchemas.\n  ","description":"","id":62,"section":"docs","tags":null,"title":"FlowSchema (v1alpha1)","uri":"https://www.k8sref.io/docs/part5/flowschema-v1alpha1/"},{"content":"PriorityLevelConfiguration (v1alpha1) PriorityLevelConfiguration flowcontrol.v1alpha1.PriorityLevelConfiguration\nPriorityLevelConfiguration represents the configuration of a priority level.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nmetadata is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n  spec (PriorityLevelConfigurationSpec)\nspec is the specification of the desired behavior of a \u0026quot;request-priority\u0026quot;. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\n  status (PriorityLevelConfigurationStatus)\nstatus is the current status of a \u0026quot;request-priority\u0026quot;. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\n  PriorityLevelConfigurationSpec flowcontrol.v1alpha1.PriorityLevelConfigurationSpec\nPriorityLevelConfigurationSpec specifies the configuration of a priority level.\n  type (string)\ntype indicates whether this priority level is subject to limitation on request execution. A value of \u0026amp;#34;Exempt\u0026amp;#34; means that requests of this priority level are not subject to a limit (and thus are never queued) and do not detract from the capacity made available to other priority levels. A value of \u0026amp;#34;Limited\u0026amp;#34; means that (a) requests of this priority level are subject to limits and (b) some of the server's limited capacity is made available exclusively to this priority level. Required.\n  limited (LimitedPriorityLevelConfiguration)\nlimited specifies how requests are handled for a Limited priority level. This field must be non-empty if and only if type is \u0026amp;#34;Limited\u0026amp;#34;.\n  limited.assuredConcurrencyShares (integer)\nassuredConcurrencyShares (ACS) configures the execution limit, which is a limit on the number of requests of this priority level that may be exeucting at a given time. ACS must be a positive number. The server's concurrency limit (SCL) is divided among the concurrency-controlled priority levels in proportion to their assured concurrency shares. This produces the assured concurrency value (ACV) \u0026mdash; the number of requests that may be executing at a time \u0026mdash; for each such priority level:\n ACV(l) = ceil( SCL * ACS(l) / ( sum[priority levels k] ACS(k) ) )  bigger numbers of ACS mean more reserved concurrent requests (at the expense of every other PL). This field has a default value of 30.\n  limited.limitResponse (LimitResponse)\nlimitResponse indicates what to do with requests that can not be executed right now\n  limited.limitResponse.queuing (QueuingConfiguration)\nqueuing holds the configuration parameters for queuing. This field may be non-empty only if type is \u0026amp;#34;Queue\u0026amp;#34;.\n  limited.limitResponse.queuing.handSize (integer)\nhandSize is a small positive number that configures the shuffle sharding of requests into queues. When enqueuing a request at this priority level the request's flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here. The request is put into one of the shortest queues in that hand. handSize must be no larger than queues, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues). See the user-facing documentation for more extensive guidance on setting this field. This field has a default value of 8.\n  limited.limitResponse.queuing.queueLengthLimit (integer)\nqueueLengthLimit is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time; excess requests are rejected. This value must be positive. If not specified, it will be defaulted to 50.\n  limited.limitResponse.queuing.queues (integer)\nqueues is the number of queues for this priority level. The queues exist independently at each apiserver. The value must be positive. Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant. This field has a default value of 64.\n  limited.limitResponse.type (string)\ntype is \u0026quot;Queue\u0026quot; or \u0026quot;Reject\u0026quot;. \u0026quot;Queue\u0026quot; means that requests that can not be executed upon arrival are held in a queue until they can be executed or a queuing limit is reached. \u0026quot;Reject\u0026quot; means that requests that can not be executed upon arrival are rejected. Required.\n    PriorityLevelConfigurationStatus flowcontrol.v1alpha1.PriorityLevelConfigurationStatus\nPriorityLevelConfigurationStatus represents the current state of a \u0026quot;request-priority\u0026quot;.\n  conditions ([]PriorityLevelConfigurationCondition)\nconditions is the current state of \u0026quot;request-priority\u0026quot;.\n  conditions.lastTransitionTime (Time)\nlastTransitionTime is the last time the condition transitioned from one status to another.\n  conditions.message (string)\nmessage is a human-readable message indicating details about last transition.\n  conditions.reason (string)\nreason is a unique, one-word, CamelCase reason for the condition's last transition.\n  conditions.status (string)\nstatus is the status of the condition. Can be True, False, Unknown. Required.\n  conditions.type (string)\ntype is the type of the condition. Required.\n    PriorityLevelConfigurationList flowcontrol.v1alpha1.PriorityLevelConfigurationList\nPriorityLevelConfigurationList is a list of PriorityLevelConfiguration objects.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ListMeta)\nmetadata is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n  items ([]PriorityLevelConfiguration)\nitems is a list of request-priorities.\n  ","description":"","id":63,"section":"docs","tags":null,"title":"PriorityLevelConfiguration (v1alpha1)","uri":"https://www.k8sref.io/docs/part5/prioritylevelconfiguration-v1alpha1/"},{"content":"Binding (v1) Binding core.v1.Binding\nBinding ties one object to another; for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.\n  apiVersion (string)\nAPIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n  kind (string)\nKind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n  metadata (ObjectMeta)\nStandard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n  target (ObjectReference)\nThe target object that you want to bind to the standard object.\n  ","description":"","id":64,"section":"docs","tags":null,"title":"Binding (v1)","uri":"https://www.k8sref.io/docs/part5/binding-v1/"}]